[{"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\index.js":"1","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\App.js":"2","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Session.jsx":"3","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\AuthRoute.jsx":"4","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\FacebookAuthRoute.jsx":"5","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\Context.jsx":"6","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\UserRoute.jsx":"7","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Profile.jsx":"8","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\registerFacebook.jsx":"9","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\HomeRoute.jsx":"10","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\GoogleAuthRoute.jsx":"11","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\nearby.jsx":"12","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\map\\index.jsx":"13","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\chat.jsx":"14","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\constant.jsx":"15","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\mutedPosts.jsx":"16","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\register.jsx":"17","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\subscribePosts.jsx":"18","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\registerGoogle.jsx":"19","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Settings.jsx":"20","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\room.jsx":"21","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\popular.jsx":"22","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\grid\\grid.jsx":"23","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\login\\index.jsx":"24","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\visited\\index.jsx":"25","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\detailPost.jsx":"26","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\search\\index.jsx":"27","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\reset-password\\index.jsx":"28","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\confirm-password\\index.jsx":"29","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\landing-page\\index.jsx":"30","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Queries.js":"31","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Mutations.js":"32","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\auth.jsx":"33","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SkeletonLoading.jsx":"34","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\posts.jsx":"35","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\home.jsx":"36","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\ConfigMap.jsx":"37","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\style\\mapstyle.jsx":"38","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\InfiniteScroll.jsx":"39","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NotificationMobile.jsx":"40","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Countries.jsx":"41","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostCard\\index.jsx":"42","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\comments.jsx":"43","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Fragment.js":"44","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Firebase.jsx":"45","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AppBar\\index.jsx":"46","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginGoogleButton.jsx":"47","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginFacebookButton.jsx":"48","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Container.jsx":"49","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SidebarMobile.jsx":"50","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Sidebar.jsx":"51","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx":"52","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BackDrop.jsx":"53","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NavBar.jsx":"54","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\index.jsx":"55","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Notification\\Notification.jsx":"56","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Icon.jsx":"57","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Photo.jsx":"58","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx":"59","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx":"60","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx":"61","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Config.jsx":"62","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BottomBar\\index.jsx":"63","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostNavBar.jsx":"64","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Subsriptions.js":"65"},{"size":2750,"mtime":1626251682169,"results":"66","hashOfConfig":"67"},{"size":3099,"mtime":1625812919407,"results":"68","hashOfConfig":"67"},{"size":1470,"mtime":1623083693178,"results":"69","hashOfConfig":"67"},{"size":395,"mtime":1619713886231,"results":"70","hashOfConfig":"67"},{"size":503,"mtime":1618587940560,"results":"71","hashOfConfig":"67"},{"size":307,"mtime":1618587940550,"results":"72","hashOfConfig":"67"},{"size":396,"mtime":1625812822379,"results":"73","hashOfConfig":"67"},{"size":9964,"mtime":1625454018488,"results":"74","hashOfConfig":"67"},{"size":5685,"mtime":1626251796158,"results":"75","hashOfConfig":"67"},{"size":442,"mtime":1625812822378,"results":"76","hashOfConfig":"67"},{"size":495,"mtime":1625812822377,"results":"77","hashOfConfig":"67"},{"size":1431,"mtime":1623083693161,"results":"78","hashOfConfig":"67"},{"size":3905,"mtime":1623083693159,"results":"79","hashOfConfig":"67"},{"size":1116,"mtime":1625454018482,"results":"80","hashOfConfig":"67"},{"size":691,"mtime":1623083693144,"results":"81","hashOfConfig":"67"},{"size":2378,"mtime":1626251764700,"results":"82","hashOfConfig":"67"},{"size":9057,"mtime":1626251781731,"results":"83","hashOfConfig":"67"},{"size":2433,"mtime":1625812822375,"results":"84","hashOfConfig":"67"},{"size":5594,"mtime":1626256310755,"results":"85","hashOfConfig":"67"},{"size":2656,"mtime":1625812822356,"results":"86","hashOfConfig":"67"},{"size":2851,"mtime":1625812822371,"results":"87","hashOfConfig":"67"},{"size":2968,"mtime":1625812822366,"results":"88","hashOfConfig":"67"},{"size":1421,"mtime":1625812822359,"results":"89","hashOfConfig":"67"},{"size":3446,"mtime":1625812822364,"results":"90","hashOfConfig":"67"},{"size":4764,"mtime":1625812822376,"results":"91","hashOfConfig":"67"},{"size":17045,"mtime":1625813639863,"results":"92","hashOfConfig":"67"},{"size":2185,"mtime":1625812822373,"results":"93","hashOfConfig":"67"},{"size":2868,"mtime":1626251894890,"results":"94","hashOfConfig":"67"},{"size":3522,"mtime":1625454018490,"results":"95","hashOfConfig":"67"},{"size":2843,"mtime":1626251860971,"results":"96","hashOfConfig":"67"},{"size":2063,"mtime":1625454018472,"results":"97","hashOfConfig":"67"},{"size":4902,"mtime":1625454018471,"results":"98","hashOfConfig":"67"},{"size":6917,"mtime":1626256240128,"results":"99","hashOfConfig":"67"},{"size":631,"mtime":1623083693140,"results":"100","hashOfConfig":"67"},{"size":22704,"mtime":1626251749117,"results":"101","hashOfConfig":"67"},{"size":4235,"mtime":1625812822360,"results":"102","hashOfConfig":"67"},{"size":145,"mtime":1625813238158,"results":"103","hashOfConfig":"67"},{"size":2304,"mtime":1618587940562,"results":"104","hashOfConfig":"67"},{"size":1609,"mtime":1625812822337,"results":"105","hashOfConfig":"67"},{"size":4667,"mtime":1625812822345,"results":"106","hashOfConfig":"67"},{"size":13067,"mtime":1625812822355,"results":"107","hashOfConfig":"67"},{"size":8782,"mtime":1625813152779,"results":"108","hashOfConfig":"67"},{"size":12814,"mtime":1625466533068,"results":"109","hashOfConfig":"67"},{"size":2152,"mtime":1625454018470,"results":"110","hashOfConfig":"67"},{"size":417,"mtime":1623083693175,"results":"111","hashOfConfig":"67"},{"size":939,"mtime":1625454018473,"results":"112","hashOfConfig":"67"},{"size":1700,"mtime":1626255599601,"results":"113","hashOfConfig":"67"},{"size":2043,"mtime":1625812822338,"results":"114","hashOfConfig":"67"},{"size":201,"mtime":1625812822352,"results":"115","hashOfConfig":"67"},{"size":4838,"mtime":1626256711087,"results":"116","hashOfConfig":"67"},{"size":5228,"mtime":1626251706987,"results":"117","hashOfConfig":"67"},{"size":700,"mtime":1623083984707,"results":"118","hashOfConfig":"67"},{"size":318,"mtime":1623255961206,"results":"119","hashOfConfig":"67"},{"size":2405,"mtime":1626251695391,"results":"120","hashOfConfig":"67"},{"size":17108,"mtime":1625813046141,"results":"121","hashOfConfig":"67"},{"size":5313,"mtime":1626251721721,"results":"122","hashOfConfig":"67"},{"size":154,"mtime":1626251758347,"results":"123","hashOfConfig":"67"},{"size":3874,"mtime":1625812822347,"results":"124","hashOfConfig":"67"},{"size":1469,"mtime":1623253019967,"results":"125","hashOfConfig":"67"},{"size":611,"mtime":1626251715635,"results":"126","hashOfConfig":"67"},{"size":882,"mtime":1625812822334,"results":"127","hashOfConfig":"67"},{"size":346,"mtime":1625454018504,"results":"128","hashOfConfig":"67"},{"size":2034,"mtime":1625812822325,"results":"129","hashOfConfig":"67"},{"size":1003,"mtime":1623083693138,"results":"130","hashOfConfig":"67"},{"size":371,"mtime":1625581450224,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bxa3pn",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"136"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"136"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"136"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"136"},"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\index.js",["287"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\App.js",[],["288","289"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Session.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\AuthRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\FacebookAuthRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\Context.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\UserRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Profile.jsx",["290","291","292","293","294","295","296","297","298","299","300","301","302"],"// Modules\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport cn from \"classnames\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { chunk } from \"lodash\";\r\nimport { GET_PROFILE_POSTS, GET_PROFILE_LIKED_POSTS } from \"../GraphQL/Queries\";\r\nimport { CHANGE_PP } from \"../GraphQL/Mutations\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../App.css\";\r\nimport { Col, Row, Tabs, Upload } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nimport ImgCrop from \"antd-img-crop\";\r\n\r\n//assets\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\nimport IconCrash from \"../assets/ic-crash.png\";\r\nimport Radius from '../assets/radius.png'\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport PostCard from \"../components/PostCard/index\";\r\nimport AppBar from \"../components/AppBar\";\r\n\r\n// Init Firebase\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport { PostContext } from \"../context/posts\";\r\nimport SkeletonLoading from \"../components/SkeletonLoading\";\r\nconst storage = firebase.storage();\r\n\r\nconst InitialState = {\r\n  url: \"\",\r\n  isFinishUpload: false,\r\n};\r\n\r\nfunction Profile() {\r\n  const { data: getProfilePosts, loading } = useQuery(GET_PROFILE_POSTS, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const { data: getProfileLikedPost } = useQuery(GET_PROFILE_LIKED_POSTS, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [changePPuser, { data }] = useMutation(CHANGE_PP);\r\n  const { user, changeProfilePicture } = useContext(AuthContext);\r\n  const { posts, setPosts, likedPosts, setLikedPosts } =\r\n    useContext(PostContext);\r\n  const [gallery, setGallery] = useState([]);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [profilePicture, setProfilePicture] = useState(InitialState);\r\n  const { isFinishUpload, url } = profilePicture;\r\n\r\n  useEffect(() => {\r\n    if (getProfilePosts && getProfileLikedPost) {\r\n      setPosts(getProfilePosts.getProfilePosts);\r\n      setLikedPosts(getProfileLikedPost.getProfileLikedPost);\r\n    }\r\n  }, [getProfilePosts, getProfileLikedPost]);\r\n\r\n  //change Photo Profile funtion\r\n\r\n  \r\n  const handleChange = (value) => {\r\n    const uploadTask = storage\r\n      .ref(`proflePicture/${value.file.originFileObj.name}`)\r\n      .put(value.file.originFileObj);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      () => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      async () => {\r\n        storage\r\n          .ref(\"proflePicture\")\r\n          .child(value.file.originFileObj.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setProfilePicture({ url, isFinishUpload: true });\r\n            changeProfilePicture(url);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFinishUpload) {\r\n      changePPuser({ variables: { url } });\r\n    }\r\n  }, [url, isFinishUpload]);\r\n\r\n  //set location\r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!loading && getProfilePosts) {\r\n      const filterByMedia =\r\n        getProfilePosts &&\r\n        getProfilePosts.getProfilePosts.filter((post) => {\r\n          const hasMedia = post.media && post.media.length >= 1;\r\n\r\n          if (hasMedia) return post;\r\n        });\r\n\r\n      const gallery = chunk(filterByMedia, 4);\r\n\r\n      setGallery(gallery);\r\n    }\r\n  }, [loading, getProfilePosts]);\r\n\r\n  const likeCounter =\r\n    getProfilePosts &&\r\n    getProfilePosts.getProfilePosts.map((doc) => doc.likeCount);\r\n  const { TabPane } = Tabs;\r\n\r\n  const Demo = () => (\r\n    <Tabs defaultActiveKey=\"1\" centered>\r\n      <TabPane tab=\"Posts\" key=\"1\">\r\n        {!getProfilePosts ? (\r\n          <SkeletonLoading />\r\n        ) : (\r\n          posts.map((post, key) => {\r\n            return (\r\n              user && (\r\n                <div key={`posts${post.id} ${key}`}>\r\n                  <PostCard post={post} type=\"nearby\" loading={loading} />\r\n                </div>\r\n              )\r\n            );\r\n          })\r\n        )}\r\n      </TabPane>\r\n      <TabPane tab=\"Liked\" key=\"2\">\r\n        {!getProfileLikedPost ? (\r\n          <SkeletonLoading />\r\n        ) : (\r\n          getProfileLikedPost.getProfileLikedPost.length ? (\r\n            likedPosts.map((post, key) => {\r\n              return (\r\n                post &&\r\n                user && (\r\n                  <div key={`posts${post.id} ${key}`}>\r\n                    <PostCard post={post} type='liked_posts' loading={loading} />\r\n                  </div>\r\n                )\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>Try Upload a Photo when posting</h4>\r\n                <h4 style={{textAlign: 'center'}}>and make your post more atractive</h4>\r\n                <h4 style={{textAlign: 'center'}}>and your photo colection will shown up here</h4>\r\n            </div>\r\n          )\r\n        )}\r\n      </TabPane>\r\n\r\n      <TabPane tab=\"Media\" key=\"3\">\r\n        {gallery.length ? (\r\n          gallery.map((media) => (\r\n            <div className=\"gallery\">\r\n              {media.length &&\r\n                media.map((photo, idx) => {\r\n                  const imgClass = cn({\r\n                    gallery_item_right: idx == 1,\r\n                    gallery_item_left: idx == 2,\r\n                    gallery__img: idx != 1 || idx != 2,\r\n                  });\r\n                  return  (\r\n                    <img\r\n                      key={`Media${idx}`}\r\n                      src={photo.media}\r\n                      onError={(e) => {\r\n                        e.target.onerror = null;\r\n                        e.target.src = IconCrash;\r\n                      }}\r\n                      className={imgClass}\r\n                      alt=\"Image 1\"\r\n                    />\r\n                  )\r\n                })}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>Try Upload a Photo when posting</h4>\r\n                <h4 style={{textAlign: 'center'}}>and make your post more atractive</h4>\r\n                <h4 style={{textAlign: 'center'}}>and your photo colection will shown up here</h4>\r\n            </div>\r\n        )}\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n\r\n  let repostCount = posts\r\n    ? posts.reduce((accumulator, current) => {\r\n        return accumulator + current.repostCount;\r\n      }, 0) : 0;\r\n      \r\n  return (\r\n    <div>\r\n      <AppBar title=\"My Profile\" />\r\n      <div\r\n        style={{ margin: \"auto\", width: 80, marginTop: 60, marginBottom: -10, backgroundColor: 'white' }}\r\n      >\r\n        <div style={{ position: \"relative\", textAlign: \"center\", width: 80, backgroundColor: 'white' }}>\r\n          <img\r\n            src={user.profilePicture}\r\n            style={{\r\n              borderRadius: \"50%\",\r\n              objectFit: \"cover\",\r\n              width: 80,\r\n              height: 80,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#7f57ff\",\r\n              color: \"white\",\r\n              borderRadius: \"50%\",\r\n              width: 21,\r\n              height: 21,\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              right: 0,\r\n            }}\r\n          >\r\n            <ImgCrop rotate>\r\n\r\n              <Upload onChange={handleChange} showUploadList={false}>\r\n                <EditOutlined  style={{ color: 'white'}}/>\r\n              </Upload>\r\n            </ImgCrop>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <h4 style={{ textAlign: \"center\" }}>{user.username}</h4>\r\n      <div style={{ textAlign: \"center\", margin: \"auto\", width: \"50%\" }}>\r\n        <Link to=\"/\">\r\n          <img src={Pin} style={{ width: 20, marginTop: -5 }} />\r\n          <span style={{ fontSize: 12 }}>{address}</span>\r\n        </Link>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          margin: \"auto\",\r\n          width: \"50%\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col span={8}>\r\n            <h5>\r\n              {getProfilePosts ? getProfilePosts.getProfilePosts.length : 0}\r\n            </h5>\r\n            <p>Post</p>\r\n          </Col>\r\n          <Col span={8}>\r\n            <h5>{repostCount}</h5>\r\n            <p>Repost</p>\r\n          </Col>\r\n          <Col span={8}>\r\n            <h5>\r\n              {getProfilePosts && likeCounter.length >= 1\r\n                ? likeCounter.reduce((total, num) => (total += num))\r\n                : 0}\r\n            </h5>\r\n            <p>Likes</p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          margin: \"auto\",\r\n          width: \"50%\",\r\n          marginTop: 20,\r\n          marginBottom: 40,\r\n        }}\r\n      >\r\n        <div className=\"ui action input\" style={{ height: 25 }}>\r\n          <input\r\n            type=\"text\"\r\n            value={`https://insvire-curious-app.web.app/profile/user/${user.id}`}\r\n          />\r\n          <button\r\n            className=\"ui teal right icon button\"\r\n            style={{ backgroundColor: \"#7F57FF\", fontSize: 10 }}\r\n          >\r\n            Copy\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {Demo()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\registerFacebook.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\HomeRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\GoogleAuthRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\nearby.jsx",["303"],"import { useContext, useEffect } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport PostCard from \"../components/PostCard/index\";\r\nimport InfiniteScroll from \"../components/InfiniteScroll\";\r\n\r\nimport { GET_POSTS_BASED_ON_NEAREST_LOC } from \"../GraphQL/Queries\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nconst NearbyPost = (props) => {\r\n  const { user } = useContext(AuthContext)\r\n  const lat = JSON.parse(localStorage.location).lat;\r\n  const lng = JSON.parse(localStorage.location).lng;\r\n\r\n  const { data, loading: loadingPosts } = useQuery(\r\n    GET_POSTS_BASED_ON_NEAREST_LOC,\r\n    {\r\n      variables: { lat: lat.toString(), lng: lng.toString() },\r\n    }\r\n  );\r\n\r\n  const posts = get(data, \"getPostBasedOnNearestLoc\") || [];\r\n\r\n  if (loadingPosts) return <div>loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <InfiniteScroll isLoading={loadingPosts}>\r\n        {!posts\r\n          ? null\r\n          : posts.map((post, key) => {\r\n              return user &&\r\n                post.muted.find((mute) => mute.owner === user.username) ? (\r\n                <div key={`posts${post.id} ${key}`}></div>\r\n              ) : (\r\n                <div key={`posts${post.id} ${key}`}>\r\n                  <PostCard post={post} loading={loadingPosts} />\r\n                </div>\r\n              );\r\n            })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearbyPost;\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\map\\index.jsx",["304"],"import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Slider } from 'antd'\r\nimport {\r\n    GoogleMap,\r\n    useLoadScript,\r\n    Marker,\r\n    Circle\r\n} from '@react-google-maps/api'\r\nimport { Button } from 'antd';\r\nimport { AimOutlined, LeftOutlined } from '@ant-design/icons';\r\n\r\nimport { getRangeSearch } from '../../util/Session';\r\n\r\n// Constant\r\nimport { LS_LOCATION, R_SEARCH } from '../../context/constant'\r\nimport { MAP_API_KEY } from '../../util/ConfigMap';\r\n\r\n// Styles\r\nimport mapStyle from '../../util/style/mapstyle'\r\nimport './style.css';\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: '75vh'\r\n}\r\nconst options = {\r\n  styles: mapStyle,\r\n  disableDefaultUI: true,\r\n  zoomControl: true\r\n}\r\n\r\nconst MapHeader = props => {\r\n  const { onSetCurrentLoc, onBack } = props;\r\n\r\n  return (\r\n    <div className=\"header-map\">\r\n      <LeftOutlined\r\n        onClick={onBack}\r\n        className=\"header-map__navigate-left\"\r\n      />\r\n      <div className=\"header-map__title\">Change Location</div>\r\n      <AimOutlined\r\n        onClick={onSetCurrentLoc}\r\n        className=\"header-map__navigate-right\"\r\n      />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nconst Map = () => {\r\n  const currentPosition = localStorage.location && JSON.parse(localStorage.location)\r\n  \r\n  const [position, setPosition] = useState(currentPosition);\r\n  const range = getRangeSearch();\r\n  const history = useHistory();\r\n  \r\n  // Hooks Map\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: MAP_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [radius, setRadius] = useState(1000)\r\n\r\n  const marks = {\r\n    20: \"1km\",\r\n    40: \"5km\",\r\n    60: \"10km\",\r\n    80: \"15km\"\r\n  }\r\n\r\n  const handleBackPage = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const setCurrentLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const location = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n\r\n      localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n      setPosition(location);\r\n    })\r\n  }\r\n\r\n  const oSaveRangePosts = () => {\r\n    localStorage.setItem(R_SEARCH, radius / 1000);\r\n    history.push(\"/\");\r\n  }\r\n    \r\n  const onChangeSlider = (value) => {\r\n    let range = 1000\r\n\r\n    if (value <= 60) {\r\n      range = 5000\r\n    } else if (value <= 80) {\r\n      range = 10000\r\n    } else if (value <= 100) {\r\n      range = 15000\r\n    }\r\n\r\n    setRadius(range);\r\n  }\r\n\r\n  if (loadError) return 'Error loading page'\r\n  if (!isLoaded) return 'Loading Maps'\r\n\r\n  return (\r\n      <div>\r\n        <MapHeader\r\n          onSetCurrentLoc={setCurrentLocation}\r\n          onBack={handleBackPage}\r\n        />\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={radius >= 15000 ? 11 : 15}\r\n          center={position}\r\n          options={options}>\r\n          <Marker \r\n            position={position}\r\n            icon={{\r\n                url: 'https://firebasestorage.googleapis.com/v0/b/insvire-curious-app12.appspot.com/o/mapRadius%2Fpin-figma.png?alt=media&token=3d842f6c-3338-486c-8605-4940e05b96b6',\r\n                scaledSize: new window.google.maps.Size(15, 18)\r\n          }}/>\r\n          <Circle \r\n            center={position}\r\n            radius={radius}\r\n            options={{\r\n              fillColor: \"#e8e2d8\",\r\n              strokeColor: '#f6c059',\r\n              strokeWeight: 1\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n        <Slider marks={marks} defaultValue={[0, 100]} onChange={onChangeSlider} tooltipVisible={false}/>\r\n        <div className=\"footer-map\">\r\n          <Button\r\n            onClick={oSaveRangePosts}\r\n            className=\"footer-map__btn-confirm btn-curious-colors\"\r\n            type=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Map;","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\chat.jsx",["305","306","307"],"import { Button } from 'antd'\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport React from 'react'\r\nimport PlayStore from '../assets/buttonGoogle.png'\r\nimport Radius from '../assets/Radius.jpg'\r\nimport AppBar from './AppBar';\r\nexport default function Chat() {\r\n\r\n    return (\r\n        <div  style={{padding: 20}}>\r\n            <AppBar title=\"Chat\" />\r\n            <div className=\"centeringImage\">\r\n            <img src={Radius} style={{ width: 300}} />\r\n            </div>\r\n                <h4 style={{textAlign: 'center'}}>Download our Mobile Version To Use This Features</h4>\r\n                \r\n                <div className=\"centeringButton\">\r\n                    <a href=\"https://play.google.com/store/apps/details?id=com.ramadhan.curious\">\r\n                    <Button type=\"link\" style={{ width: 150}}> <img src={PlayStore} style={{width: 150}} /></Button>\r\n                    </a>\r\n                </div>\r\n\r\n                <h4 style={{textAlign: 'center', marginTop: 90}}> Click This Button Below To Download Mobile Version to get best experience</h4>\r\n            </div>\r\n    )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\constant.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\mutedPosts.jsx",["308","309","310","311","312","313"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\register.jsx",["314","315"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\subscribePosts.jsx",["316","317","318","319"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_SUBSCRIBED_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\nimport SkeletonLoading from '../components/SkeletonLoading'\r\nimport Radius from '../assets/Radius.jpg'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nfunction SubscribePosts() {\r\n\r\n    const path = useHistory().location.pathname\r\n\r\n    const { setPathname } = useContext(AuthContext)\r\n  \r\n      useEffect(() => {\r\n          setPathname(path)\r\n      }, [])\r\n\r\n    const { data } = useQuery(GET_SUBSCRIBED_POSTS, {\r\n        fetchPolicy: \"network-only\"\r\n      });\r\n\r\n    const _isMounted = useRef(false);\r\n    const { subscribePosts, setSubscribePosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setSubscribePosts(data.getSubscribePosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!subscribePosts || !subscribePosts.length ? (\r\n                <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>Subcribe to a Post that goes fire</h4>\r\n                <h4 style={{textAlign: 'center'}}>So you will get an Update on Notification</h4>\r\n                <h4 style={{textAlign: 'center'}}>and never miss what's happening</h4>\r\n            </div>\r\n                )\r\n                    : subscribePosts.map((post, key) => (\r\n                        <div key={`posts subscribe ${key}`} style={key == 0 ? { marginTop: 40 }: { marginTop: 0 }}>\r\n                        <PostCard post={post} type=\"subscribe_posts\" loading={loading} />\r\n                    </div>\r\n                ))}\r\n            </div>) : <SkeletonLoading />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubscribePosts","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\registerGoogle.jsx",["320"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Settings.jsx",["321","322","323","324","325","326"],"import { List, message, Avatar, Spin } from 'antd';\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from \"../components/AppBar\";\r\nimport { RightOutlined } from '@ant-design/icons'\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_ACCOUNT } from '../GraphQL/Mutations';\r\nimport { AuthContext } from '../context/auth'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nexport default function Settings() {\r\n\r\n  const path = useHistory().location.pathname\r\n\r\n  const { setPathname } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        setPathname(path)\r\n    }, [])\r\n\r\n  const { user } = useContext(AuthContext)\r\n  const [deleteAccount] = useMutation(DELETE_ACCOUNT ,{\r\n    update(){\r\n      handleLogout()\r\n      window.location.href = '/'\r\n    },\r\n    onError(err){\r\n      console.log(err);\r\n    }\r\n  })\r\n\r\n  const handleDeleteAccount = () => {\r\n    if(user){\r\n      deleteAccount({ variables: { id: user.id } })\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear()\r\n  }\r\n  return (\r\n    <div>\r\n      <AppBar title=\"Settings\" />\r\n\r\n      <List\r\n      style={{marginTop: -15}}\r\n        size=\"large\"\r\n        bordered>\r\n        <Link to=\"/\">\r\n          <List.Item key='1'>\r\n            <List.Item.Meta\r\n              title=\"Term of Use\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <List.Item key='2'>\r\n            <List.Item.Meta\r\n              title=\"Share Curious App\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Community Guidelines\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Privacy Policy\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <a href=\"/\" onClick={handleLogout}>\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Logout\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </a>\r\n        <Link onClick={handleDeleteAccount}>\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Delete Account\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n      </List>\r\n    </div>\r\n  )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\room.jsx",["327","328","329","330"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_ROOM_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\n\r\nfunction Room(props) {\r\n    const history = useHistory().location.pathname\r\n\r\n    const { setPathname } = useContext(AuthContext)\r\n  \r\n      useEffect(() => {\r\n          setPathname(history)\r\n      }, [history])\r\n\r\n    const room = props.match.path\r\n    const _isMounted = useRef(false);\r\n    const { room_1, setRoom, room_2, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_ROOM_POSTS, {\r\n        fetchPolicy: \"network-only\",\r\n      });\r\n    \r\n    useEffect(() => {\r\n        if (room) {\r\n            getPosts({ variables: { room } });\r\n        }\r\n    }, [room]);\r\n\r\n    useEffect(() => {\r\n        if (data  && !_isMounted.current) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            setRoom(data.getRoomPosts)\r\n\r\n            if(room_1.length && room_2.length){\r\n                _isMounted.current = true\r\n            }\r\n            // set did mount react\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {room === \"/Insvire E-Sport\" ? (user ? ( !room_1 ? null\r\n                    : room_1.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })) : null) : (user ? ( !room_2 ? null\r\n                        : room_2.map((post, key) => {\r\n                            const { muted, id } = post;\r\n                            const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                            \r\n                            return (\r\n                                <div key={`posts${id} ${key}`}>\r\n                                    {!isMuted && <PostCard post={post} loading={loading} />}\r\n                                </div>\r\n                            )\r\n                        })) : null)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\popular.jsx",["331","332","333"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_POPULAR_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\nimport SidebarMobile from '../components/SidebarMobile'\r\nimport NotificationMobile from '../components/NotificationMobile'\r\n\r\nimport { getSession } from '../util/Session';\r\n\r\n\r\nfunction Popular() {\r\n    const _isMounted = useRef(false);\r\n    const [burger, setBurger] = useState({\r\n        toggle : false\r\n    })\r\n    const [notif, setNotif] = useState({\r\n        toggle : false\r\n    })\r\n\r\n    const { posts, setPosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const { location } = getSession();\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POPULAR_POSTS);\r\n\r\n    const handleBurger = () => {\r\n        setBurger(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    const handleNotif = () => {\r\n        setNotif(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n\r\n            getPosts({ variables: loc });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (data  && !_isMounted.current) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            setPosts(data.getPopularPosts)\r\n\r\n            _isMounted.current = true\r\n            // set did mount react\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar toggleOpen={handleBurger} toggleOpenNotif={handleNotif} />\r\n            <NotificationMobile show={notif.toggle} />\r\n            <SidebarMobile show={burger.toggle} />\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {!posts ? null\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`} style={key == 0 ? { marginTop: 16 } : { marginTop: 0 }}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popular","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\grid\\grid.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\login\\index.jsx",["334"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport '../reset-password/style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n      span: 8,\r\n  },\r\n  wrapperCol: {\r\n      span: 16,\r\n  },\r\n};\r\n\r\nconst Login = (props) => {\r\n  const context = useContext(AuthContext)\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [login, { loading }] = useMutation(LOGIN_USER, {\r\n      update(_, { data: { login } }) {\r\n          \r\n          context.login(login)\r\n          props.history.push('/')\r\n      },\r\n      onError(err) {\r\n          setErrors(err.message)\r\n      }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n      const { username, password } = values\r\n\r\n      login({ variables: { username, password } })\r\n  };\r\n\r\n  const onCloseErr = (e) => {\r\n      console.log(e, 'I was closed.');\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '100vh', background: 'white'}}>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n      </Link>\r\n      <div className=\"body-page ui card container\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30, height: 341 }}>\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Sign in</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your email or username!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input \r\n             placeholder=\"Email / Username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input.Password \r\n            style={{backgroundColor: '#FAFAFF', borderRadius: 10, paddingTop: 0, paddingBottom: 0, width: 343}}\r\n             placeholder=\"Password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" \r\n              style={{ fontSize: '18px',padding: 0 }}>\r\n                {loading ? (<LoadingOutlined />): (\"Sign in\")} \r\n              </button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Link to='/resetPassword'>\r\n            <p style={{ textAlign: 'center' }}>Forgot Password?</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <p style={{ textAlign: 'center', marginTop: 30, fontSize: 14 }}>Don't have an account yet? <Link to=\"/register\" style={{ fontWeight: 'bold' }}>Sign Up</Link> now</p>\r\n      {Object.keys(errors).length > 0 && (\r\n        <Alert\r\n          message={errors}\r\n          type=\"error\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\visited\\index.jsx",["335","336","337","338","339","340"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport cn from 'classnames';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport { chunk } from 'lodash';\r\nimport { Row, Card, Skeleton, Space } from 'antd';\r\nimport AppBar from '../../components/AppBar';\r\n\r\n// Assets\r\nimport imageOne from '../../assets/beachone.jfif'\r\n\r\n// Queries\r\nimport { GET_VISITED } from '../../GraphQL/Queries';\r\n\r\nimport { LS_LOCATION } from '../../context/constant'\r\n\r\nimport './style.css';\r\nimport { AuthContext } from '../../context/auth';\r\n\r\nexport default function Visited() {\r\n  const [location, setLocation] = useState([]);\r\n  const history = useHistory();\r\n  const { data, loading } = useQuery(GET_VISITED);\r\n  const visited = data?.getVisited || [];\r\n\r\n  const path = useHistory().location.pathname\r\n\r\n  const { setPathname } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        setPathname(path)\r\n    }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    if (!loading && visited.length) {\r\n      setLocation(chunk(visited, 4));\r\n    }\r\n  }, [loading, visited]);\r\n\r\n  const onChangeLocation = ({ lat, lng }) => {\r\n    const location = { lat, lng };\r\n\r\n    localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n\r\n    setTimeout(() => {\r\n      history.push('/');\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n      <div>\r\n          <AppBar title=\"Visited Places\"/>\r\n\r\n          {loading ? (\r\n            <div className=\"site-card-wrapper\" style={{margin: 10}}>\r\n              <Row style={{margin: 5}}>\r\n                <Space>\r\n                  <Skeleton.Button style={{ width: 187, height: 200, margin: 5 }} active />\r\n                </Space>\r\n                <Space>\r\n                  <Skeleton.Button style={{ width: 187, height: 200, margin: 5 }} active />\r\n                </Space>\r\n              </Row>\r\n            </div>\r\n          ) : (\r\n            <div className=\"site-card-wrapper\">\r\n                {location.length ? location.map(subLoc => {\r\n                  return (\r\n                    <div className=\"gallery-location\">\r\n                        {subLoc.length && subLoc.map((loc, idx) => {\r\n                            const {\r\n                              administrative_area_level_1: province,\r\n                              administrative_area_level_2: city,\r\n                              administrative_area_level_3: districts,\r\n                              createAt,\r\n                              location\r\n                            } = loc;\r\n                            \r\n                            const containerClass = cn({\r\n                              'VisitedClass': true,\r\n                              'gallery-location__item-right': idx == 1,\r\n                              'gallery-location__item-left': idx == 2,\r\n                              'gallery-location__img': idx != 1 || idx != 2\r\n                            });\r\n                            const address = `${province}, ${city}, ${districts}`;\r\n\r\n                            return (\r\n                              <Card \r\n                                className= {containerClass}\r\n                                bordered={false}\r\n                                onClick={() => {\r\n                                  onChangeLocation(location)\r\n                                }}\r\n                                cover={\r\n                                <>\r\n                                  <img alt=\"example\" src={imageOne} style={{width: '100%', height: '100%', borderRadius: 15}} />\r\n                                  <div style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: 10,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    width: 180,\r\n                                  }}>\r\n                                    <h3 style={{\r\n                                      color: \"white\",\r\n                                      fontWeight: \"1200\",\r\n                                      fontSize: 16,\r\n                                      margin: 0,\r\n                                      overflow: \"hidden\",\r\n                                      textOverflow: \"ellipsis\"\r\n                                    }}>{address}</h3> \r\n                                    <p>{moment(createAt).fromNow()}</p>\r\n                                  </div>\r\n                                </>}\r\n                              />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                  )}\r\n                ) : <></>}\r\n            </div>\r\n          )}\r\n      </div>\r\n\r\n  )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\detailPost.jsx",["341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"//GQL\r\nimport moment from \"moment\";\r\nimport Geocode from \"react-geocode\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { CREATE_COMMENT } from \"../../GraphQL/Mutations\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Comments from './comments'\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { get } from \"lodash\";\r\n\r\nimport '../../components/PostCard/style.css';\r\n\r\n//antd\r\nimport {\r\n  Skeleton,\r\n  List,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  Form,\r\n  Image,\r\n} from \"antd\";\r\n\r\n//component\r\nimport Pin from \"../../assets/pin-svg-25px.svg\";\r\nimport LikeButton from \"../../components/Buttons/LikeButton/index\";\r\nimport CommentButton from \"../../components/Buttons/CommentButton/index\";\r\nimport RepostButton from \"../../components/Buttons/RepostButton/index\";\r\nimport { EllipsisOutlined, PlusOutlined,  LoadingOutlined, MessageOutlined } from \"@ant-design/icons\";\r\nimport PostNavBar from \"../../components/PostNavBar\";\r\n\r\n// Query\r\nimport { GET_POST } from \"../../GraphQL/Queries\";\r\nimport { PostContext } from \"../../context/posts\";\r\n\r\n// Init Firebase\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { MAP_API_KEY } from \"../../util/ConfigMap\";\r\nconst  storage = firebase.storage()\r\n\r\n//location\r\nGeocode.setApiKey(MAP_API_KEY);\r\nGeocode.setLanguage(\"id\");\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default function SinglePost(props) {\r\n  const _isMounted = useRef(false)\r\n  const { post, setPost, loading, loadingData, setComment } = useContext(PostContext);\r\n  const { user } = useContext(AuthContext)\r\n  const [address, setAddress] = useState(\"\");\r\n  const [repostAddress, setRepostAddress] = useState(\"\");\r\n  const [reply, setReply] = useState({username: null, id: null});\r\n  const [form] = Form.useForm()\r\n  const [state, setState] = useState({\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    fileList: []\r\n  })\r\n  const { previewVisible, previewImage, fileList, previewTitle } = state;\r\n\r\n  // upload photo comment /////////////////////////////\r\n\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => {\r\n    const newFiles = fileList.map(file => ({ ...file, status: 'done'}))\r\n    setState({\r\n      ...state, \r\n      fileList: newFiles\r\n    });\r\n  };\r\n  \r\n  const id = props.match.params.id;\r\n  const room = props.match.params.room === \"post\" ? null : props.match.params.room\r\n\r\n  const [getPost, { data }] = useLazyQuery(GET_POST ,{\r\n    fetchPolicy: \"network-only\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getPost({ variables: { id, room } });\r\n    }\r\n  }, [id]);\r\n\r\n  //input form\r\n\r\n  useEffect(() => {\r\n    if (!_isMounted.current && data) {\r\n      if (!data) {\r\n        loadingData()\r\n\r\n        return;\r\n      }\r\n\r\n      const post = data.getPost\r\n      setPost(post);\r\n\r\n      Geocode.fromLatLng(post.location.lat, post.location.lng).then(\r\n        (response) => {\r\n          const address = response.results[0].address_components[1].short_name;\r\n          setAddress(address);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n\r\n      // set did mount react\r\n      _isMounted.current = true;\r\n\r\n      return;\r\n    }\r\n  }, [data, _isMounted]);\r\n\r\n  //repost\r\n  \r\n  const repost = get(post, \"repost\") || {};\r\n  const isRepost = get(repost, \"id\") || \"\";\r\n\r\n  useEffect(() => {\r\n      if (isRepost) {\r\n        const { location } = repost;\r\n        Geocode.fromLatLng(location.lat, location.lng).then(\r\n          (response) => {\r\n            const address =\r\n              response.results[0].address_components[1].short_name;\r\n            setRepostAddress(address);\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      }\r\n  }, [post, isRepost]);\r\n\r\n\r\n  const [createComment, {loading : loadingCreate}] = useMutation(CREATE_COMMENT, {\r\n    onError(err) {\r\n      console.log(err.message);\r\n    },update(_, { data: { createComment: commentData } }){\r\n\r\n      setComment(commentData)\r\n  },\r\n  });\r\n\r\n  const onFinish = async value => {\r\n    const { comment } = value;\r\n    const newComment = comment ? comment.substring(comment.indexOf(':')+1) : ''\r\n    const finalComment = newComment == undefined ? comment : newComment\r\n    \r\n    const isReply = form.getFieldValue([\"comment\"]).includes(reply.username && reply.id)\r\n\r\n    if(!isReply){\r\n      setReply({username: null, id: null})\r\n    }\r\n    let uploaded = [];\r\n    ////////////////fungsi upload///////////////////\r\n    if (fileList.length) {\r\n      uploaded = await Promise.all(fileList.map(async (elem) => {\r\n        const uploadTask = storage.ref(`images/${elem.originFileObj.name}`).put(elem.originFileObj)\r\n  \r\n        const url = await new Promise((resolve, reject) => {\r\n          uploadTask.on('state_changed',\r\n            () => {},\r\n            error => {\r\n              fileList.push({ ...elem, status: 'error' })\r\n              reject()\r\n            },\r\n            async () => {\r\n              const downloadUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n  \r\n              resolve(downloadUrl);\r\n            }\r\n          )\r\n        })\r\n  \r\n        return url\r\n      }));\r\n      \r\n      setState({ ...state, uploaded, fileList, isFinishUpload: true, text: value.text });\r\n      createComment({ variables: { text: finalComment, id: id, reply: reply, photo: uploaded[0], room: post.room } });\r\n      setState({...state, fileList: []})\r\n      form.resetFields()\r\n      return;\r\n    }\r\n\r\n\r\n    setState({ ...state, uploaded: [], isFinishUpload: true, text: value.text})\r\n    createComment({ variables: { text: finalComment, id: id, reply: reply, photo: '' , room: post.room } });\r\n    form.resetFields()\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <PostNavBar />\r\n    <List itemLayout=\"vertical\" size=\"large\" style={{ background: 'white', margin: 10, borderRadius: 5}}>\r\n     {post ? (\r\n       <div>\r\n          <List.Item\r\n        key={post.id || ''}\r\n        actions={\r\n          !loading && [\r\n            <>\r\n              <div className=\"action-post\">\r\n                <div className=\"action-post__item\">\r\n                  <LikeButton\r\n                    likeCount={post.likeCount}\r\n                    likes={post.likes}\r\n                    id={post.id}\r\n                    room={post.room}\r\n                    type=\"detail_post\"\r\n                  />\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <Link to={`/post/${post.id}`}>\r\n\r\n                  <CommentButton commentCount={post.commentCount} icon={<MessageOutlined />} />\r\n\r\n                  </Link>\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <RepostButton idPost={post.id} room={post.room} repostCount={post.repostCount} />\r\n                </div>\r\n              </div>\r\n            </>,\r\n          ]\r\n        }\r\n      >\r\n        <Skeleton loading={loading} active avatar>\r\n          <List.Item.Meta\r\n            title={\r\n              <div>\r\n                <Row>\r\n                  <Col span={18}>\r\n                    <img src={Pin} style={{ width: 20, position: \"center\" }} />\r\n                    {address}\r\n                  </Col>\r\n                  <Col span={6} style={{ textAlign: \"right\" }}>\r\n                    <Dropdown\r\n                      overlay={\r\n                        <Menu>\r\n                          <Menu.Item key=\"0\">Subscribe</Menu.Item>\r\n                          <Menu.Item key=\"1\" onClick={(e) => console.log(e)}>\r\n                            Mute\r\n                          </Menu.Item>\r\n                          <Menu.Item key=\"3\">Report</Menu.Item>\r\n                        </Menu>\r\n                      }\r\n                      trigger={[\"click\"]}\r\n                      placement=\"bottomRight\"\r\n                    >\r\n                      <a\r\n                        className=\"ant-dropdown-link\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        <EllipsisOutlined />\r\n                      </a>\r\n                    </Dropdown>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            }\r\n            description={moment(post.createdAt).fromNow()}\r\n          />\r\n          {isRepost && (\r\n          <Card\r\n            bodyStyle={{ padding: \"10px 12px\" }}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              borderRadius: 10,\r\n              background: \"white\",\r\n              padding: 0,\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              <p className=\"ic-location-small\" style={{ margin: 0 }} />\r\n              <div style={{ fontWeight: 600, paddingLeft: 10 }}>\r\n                {repostAddress}\r\n              </div>\r\n            </div>\r\n            <span style={{ fontSize: 12 }}>\r\n              {moment(repost.createdAt).fromNow()}\r\n            </span>\r\n            {repost.media?(\r\n              repost.media.length == 1 ? (\r\n                <Image\r\n                  style={{ width: \"100%\", borderRadius: 10, objectFit: \"cover\", maxHeight: 300, objectFit: \"cover\" }}\r\n                  src={repost.media}\r\n                />\r\n              ) : null\r\n              ) : null}\r\n            <div style={{ marginTop: 5 }}>{repost.text}</div>\r\n          </Card>\r\n        )}\r\n\r\n          {post.text}\r\n          {/* mediaaaaaaaaaaaaaa */}\r\n\r\n          {post.media ? (\r\n          post.media.length == 1 ? (\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                borderRadius: 10,\r\n                objectFit: \"cover\",\r\n                maxHeight: 300,\r\n              }}\r\n              src={post.media}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n\r\n        {post.media ? (\r\n          post.media.length == 2 ? (\r\n            <table className=\"row-card-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <Image.PreviewGroup>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={post.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Image\r\n                        style={{ borderRadius: \"0px 10px 10px 0px\" }}\r\n                        src={post.media[1]}\r\n                      />\r\n                    </td>\r\n                  </Image.PreviewGroup>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n        {post.media ? (\r\n          post.media.length >= 3 ? (\r\n            <table className=\"photo-grid-3\">\r\n              <Image.PreviewGroup>\r\n                <tbody>\r\n                  <tr style={{ margin: 0, padding: 0 }}>\r\n                    <td\r\n                      rowSpan=\"2\"\r\n                      style={{ width: \"50%\", verticalAlign: \"top\" }}\r\n                    >\r\n                      <Image\r\n                        className=\"pict1-3\"\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={post.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        className=\"pict2-3\"\r\n                        style={{ borderRadius: \"0px 10px 0px 0px\" }}\r\n                        src={post.media[1]}\r\n                      />\r\n                      <div\r\n                        className=\"text-container\"\r\n                        style={{ marginTop: \"-6px\" }}\r\n                      >\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={\r\n                            post.media.length > 3\r\n                              ? {\r\n                                  borderRadius: \"0px 0px 10px 0px\",\r\n                                  filter: \"blur(2px)\",\r\n                                }\r\n                              : { borderRadius: \"0px 0px 10px 0px\" }\r\n                          }\r\n                          src={post.media[2]}\r\n                        />\r\n                        <div className=\"text-center\">\r\n                          {post.media.length > 3\r\n                            ? \"+\" + (post.media.length - 3)\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  {post.media.length > 3 ? (\r\n                    <div>\r\n                      <Image\r\n                        className=\"pict3-3\"\r\n                        style={{ display: \"none\" }}\r\n                        src={post.media[3]}\r\n                      />\r\n                      {post.media.length > 4 ? (\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={{ display: \"none\" }}\r\n                          src={post.media[4]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </tbody>\r\n              </Image.PreviewGroup>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n          {/* mediaaaaaaaaaaaa end */}\r\n        </Skeleton>\r\n      </List.Item>\r\n      {post && post.comments && post.comments.length == 0 ? (null) : <Comments post={post} loading={loading} user={user} setReply={setReply} form={form} />}\r\n      <Form\r\n       form={form}\r\n        style={{ marginTop: 21, paddingBottom: -20 }}\r\n        name=\"basic\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinish}\r\n      >\r\n        \r\n        {fileList.length > 0 && (\r\n          <div style={{backgroundColor: \"white\"}}>\r\n          <div style={{height:120, borderTopRightRadius: 30, borderTopLeftRadius: 30, backgroundColor: \"white\", padding: 10}}>\r\n            <Form.Item name=\"foto\" style={{ marginBottom: 0 }} >\r\n              <div className=\"centeringButton\" style={{ marginTop: -38}}>\r\n              <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                accept=\"video/*, image/*\"\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n              >\r\n              </Upload>\r\n              </div>\r\n            </Form.Item>\r\n            </div>\r\n          </div>\r\n          \r\n          )}\r\n        \r\n        <Row>\r\n          <Col span={2}>\r\n            <Form.Item name=\"upload\" className=\"centeringButton\" style={{marginTop: -6}} >\r\n              <Upload\r\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n              fileList={fileList}\r\n              accept=\"video/*, image/*\"\r\n              onPreview={handlePreview}\r\n              onChange={handleChange}\r\n              showUploadList={false}\r\n              >\r\n                <Button\r\n                  style={{ border: \"none\" }}\r\n                  icon={<PlusOutlined style={{ color: \"#7f57ff\" }} />}\r\n                />\r\n              </Upload>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={19}>\r\n            <Form.Item\r\n              name=\"comment\"\r\n              rules={[\r\n                { required: true, message: \"Isi komennya dulu ya broooo!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n              name=\"comment\"\r\n\r\n                placeholder=\"Write your comment...\"\r\n                style={{ borderRadius: 20 }}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={3}>\r\n            <Form.Item className=\"centeringButton\" style={{ marginTop: -6}}>\r\n              <Button\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  borderRadius: 20,\r\n                  backgroundColor: \"#7f57ff\",\r\n                  display: \"inline-block\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {loadingCreate ? <LoadingOutlined />: 'Post'}\r\n                \r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n       </div>\r\n     ) : (\r\n     <div style={{margin:20}}>\r\n       <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n     </div>\r\n     )}\r\n    </List>\r\n    </div>\r\n  )\r\n  \r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\search\\index.jsx",["355","356","357","358","359","360"],"import { Input, Row, Col } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nimport AppBar from '../../components/AppBar';\r\n\r\nimport './style.css';\r\nimport { useContext, useEffect } from 'react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst Search = () => {\r\n  const history = useHistory().location.pathname\r\n\r\n  const { setPathname } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        setPathname(history)\r\n    }, [])\r\n\r\n  return (\r\n    <>\r\n    <AppBar title=\"Seach\" />\r\n\r\n    <div className=\"search_page\">\r\n      <Input placeholder=\"default size\" prefix={<SearchOutlined />} />\r\n      <div className=\"explore-place\">\r\n        <span className=\"title\">Explore Place</span>\r\n        <div className=\"explore-place__btn-more\">More</div>\r\n        <div className=\"list-place\">\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"popular-section\">\r\n        <div className=\"popular-section__header\">\r\n          <h3>More For You</h3>\r\n          <span>The most popular posts around the world</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\reset-password\\index.jsx",["361","362"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\confirm-password\\index.jsx",["363","364"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../util/Firebase';\r\n\r\nimport '../reset-password/style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function ReserPassword(props) {\r\n  const context = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const search = history.location.search.substring(1);\r\n  const querystring = search && JSON.parse(\r\n    '{\"' + search.replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}',\r\n    function(key, value) { return key===\"\"?value:decodeURIComponent(value)\r\n  });\r\n\r\n  const { oobCode } = querystring;\r\n\r\n  // Local State\r\n  const [alert, setAlert] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [login] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login } }) {\r\n      \r\n      context.login(login)\r\n      props.history.push('/')\r\n    },\r\n    onError(err) {\r\n      setMessage(err.message)\r\n    }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n    const { password } = values\r\n\r\n    if (!oobCode) {\r\n      setAlert('error');\r\n      setMessage('Verify code is not valid or expired');\r\n    }\r\n\r\n    auth.confirmPasswordReset(oobCode, password).then(\r\n      () => {\r\n        setAlert('success');\r\n        setMessage('Success reset your password, will redirect to login page in a few seconds');\r\n\r\n        setTimeout(() => {\r\n          history.replace('/login');\r\n        }, 1500)\r\n      }\r\n    )\r\n    .catch(error => {\r\n      const { message, code } = error;\r\n      setAlert('error');\r\n\r\n      if (code === 'auth/user-not-found') {\r\n          setMessage('Email atau Username tidak ditemukan');\r\n\r\n          return;\r\n      }\r\n\r\n      setMessage(message);\r\n    })\r\n  };\r\n\r\n  const onCloseErr = () => {\r\n    setAlert('');\r\n    setMessage('');\r\n  };\r\n  \r\n  return (\r\n    <div style={{background: 'white'}}>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n        </Link>\r\n      <div className=\"body-page ui card container\">\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Change Password</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"password\"\r\n                className=\"body-page__textfield\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your new password!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Input your new password\" type=\"password\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" >\r\n                    Send\r\n                </button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </div>\r\n      {!!(message && alert) && (\r\n        <Alert\r\n          message={message}\r\n          type={alert}\r\n          className=\"message-response\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\landing-page\\index.jsx",["365","366"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Queries.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Mutations.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\auth.jsx",["367","368","369","370"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SkeletonLoading.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\posts.jsx",["371","372","373","374","375","376"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\home.jsx",["377","378","379","380","381","382"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\n\r\nimport { useLazyQuery, useQuery } from '@apollo/client'\r\nimport { GET_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport SkeletonLoading from '../components/SkeletonLoading'\r\n\r\nimport { getSession, getRangeSearch } from '../util/Session';\r\n\r\n//gambar\r\nimport Radius from '../assets/radius.png'\r\nimport SidebarMobile from '../components/SidebarMobile'\r\nimport BackDrop from '../components/BackDrop'\r\nimport NotificationMobile from '../components/NotificationMobile'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\nfunction Home() {\r\n    const history = useHistory().location.pathname\r\n    const [burger, setBurger] = useState({\r\n        toggle : false\r\n    })\r\n    const [notif, setNotif] = useState({\r\n        toggle : false\r\n    })\r\n\r\n    const _isMounted = useRef(false);\r\n    \r\n    const { posts, setPosts, loadingData, loading } = useContext(PostContext)\r\n    const { user, setPathname } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        setPathname(history)\r\n    }, [])\r\n\r\n    const handleBurger = () => {\r\n        setBurger(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    const handleNotif = () => {\r\n        setNotif(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    const handleBackdropClose = () => {\r\n        setBurger({toggle: false})\r\n    }\r\n\r\n    const { location } = getSession();\r\n    const range = getRangeSearch();\r\n\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POSTS, {\r\n        fetchPolicy: \"network-only\"\r\n      });\r\n\r\n    \r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n            getPosts({ variables: { ...loc, range: range ? parseFloat(range) : undefined } });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            \r\n            setPosts(data.getPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n\r\n\r\n    return (\r\n        <div style={{height: \"100%\"}}>\r\n            <NavBar toggleOpen={handleBurger} toggleOpenNotif={handleNotif} />\r\n            <NotificationMobile show={notif.toggle} />\r\n            <SidebarMobile show={burger.toggle} />\r\n            {burger.toggle ? <BackDrop click={handleBackdropClose} /> : null}\r\n\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {!_isMounted.current && <SkeletonLoading />}\r\n                {(_isMounted.current && !loading && !posts.length) ? (\r\n                <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>There is no Nearby post around you</h4>\r\n                <h4 style={{textAlign: 'center'}}>be the first to post in your area!</h4>\r\n                <h4 style={{textAlign: 'center'}}>or change your location to see other post around</h4>\r\n            </div>\r\n                )\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                         return(\r\n                            <div key={`posts${id} ${key}`} style={key == 0 ? { marginTop: 16 }: { marginTop: 0 }} >\r\n                                {!isMuted && <PostCard post={post} type=\"nearby\" loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : \"hai\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\ConfigMap.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\style\\mapstyle.jsx",["383"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"gamma\": 0.26\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"lightness\": -50\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 50\r\n            },\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\InfiniteScroll.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NotificationMobile.jsx",["384","385","386","387"],"import React, { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  READ_ALL_NOTIFICATIONS,\r\n  READ_NOTIFICATION,\r\n} from \"../GraphQL/Mutations\";\r\nimport { Row, Col, Dropdown, Menu } from \"antd\";\r\n\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { CLEAR_ALL_NOTIF } from \"../GraphQL/Mutations\";\r\nimport NoNotif from \"../assets/NoNotif.jpg\";\r\n\r\nexport default function NotificationMobile(props) {\r\n  const { notifications, notificationRead, readAllNotificatons } =\r\n    useContext(AuthContext);\r\n  const { clearNotifications } = useContext(AuthContext);\r\n\r\n  const [readNotification] = useMutation(READ_NOTIFICATION, {\r\n    update(_, { data: { readNotification } }) {\r\n      notificationRead(readNotification);\r\n    },\r\n  });\r\n\r\n  const [readNotifications] = useMutation(READ_ALL_NOTIFICATIONS, {\r\n    update(_, { data: { readAllNotification } }) {\r\n      readAllNotificatons(readAllNotification);\r\n    },\r\n  });\r\n\r\n  const [clearNotif] = useMutation(CLEAR_ALL_NOTIF, {\r\n    update(_, { data: { clearAllNotif } }) {\r\n      clearNotifications();\r\n      alert(clearAllNotif);\r\n    },\r\n  });\r\n  let notifClasses = 'notifmobilecoy'\r\n  \r\n  if(props.show) {\r\n    notifClasses = 'notifmobilecoy open' \r\n  }\r\n  return (\r\n    <div className={notifClasses} style={{ position: \"sticky\", zIndex: 102, height: '100%' }}>\r\n      <div style={{ position: \"absolute\", left: 0, right: 0, width: \"100%\" }}>\r\n        <Card\r\n        \r\n          title=\"Notification\"\r\n          extra={\r\n            <Dropdown\r\n              overlay={\r\n                <Menu>\r\n                  <Menu.Item key=\"0\" onClick={readNotifications}>\r\n                    READ ALL\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"1\" onClick={clearNotif}>\r\n                    CLEAR ALL\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              trigger={[\"click\"]}\r\n              placement=\"bottomRight\"\r\n            >\r\n              <a\r\n                className=\"ant-dropdown-link\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <EllipsisOutlined />\r\n              </a>\r\n            </Dropdown>\r\n          }\r\n          style={{ width: \"100%\" }}\r\n          className=\"testttttt\"\r\n        >\r\n          <div style={{ margin: -22, height: '100vh' }}>\r\n            {(notifications && notifications.length ? (\r\n                notifications.map((notif, key) => {\r\n                  let type = \"\";\r\n                  let text = \"\";\r\n                  switch (notif.type) {\r\n                    case \"LIKE\":\r\n                      type = \"liked\";\r\n                      text = \"iike\";\r\n                      break;\r\n                    case \"REPOST\":\r\n                      type = \"repost\";\r\n                      text = \"repost\";\r\n                      break;\r\n                    case \"COMMENT\":\r\n                      type = \"commented\";\r\n                      text = \"comment\";\r\n                    default:\r\n                      break;\r\n                  }\r\n\r\n                  return (\r\n                    <Link\r\n                      to={`/post/${notif.postId}`}\r\n                      onClick={() =>\r\n                        readNotification({ variables: { id: notif.id } })\r\n                      }\r\n                      name={notif.id}\r\n                      key={`notif${key}`}\r\n                      style={\r\n                        notif.read\r\n                          ? { fontSize: 13, color: \"black\" }\r\n                          : { fontSize: 13, fontWeight: \"bold\", color: \"black\" }\r\n                      }\r\n                    >\r\n                      <div className=\"notifContainer\">\r\n                        <Row>\r\n                          <Col span={22}>\r\n                            <p style={{ marginBottom: 15 }}>\r\n                              {notif.displayName}{\" \"}\r\n                              <span>{`${type} your post.`}</span>{\" \"}\r\n                            </p>\r\n                          </Col>\r\n                          <Col span={2} style={{ color: \"#7958f5\" }}>\r\n                            {!notif.read && <p>&#8226;</p>}\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })\r\n              ) : (\r\n              <img src={NoNotif} className=\"centeringButton\" style={{height: 200}} />\r\n              )\r\n            )\r\n            }\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Countries.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostCard\\index.jsx",["388","389","390","391","392","393","394","395"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { List } from \"antd\";\r\nimport { Row, Col, Menu, Dropdown, Image, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { get } from \"lodash\";\r\n\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport Pin from \"../../assets/pin-svg-25px.svg\";\r\nimport LikeButton from \"../Buttons/LikeButton/index\";\r\nimport CommentButton from \"../Buttons/CommentButton/index\";\r\nimport RepostButton from \"../Buttons/RepostButton/index\";\r\nimport Photo from '../Photo'\r\n\r\nimport { DropIcon } from \"../../library/Icon\";\r\nimport { MessageOutlined, RetweetOutlined } from '@ant-design/icons';\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  DELETE_POST,\r\n  MUTE_POST,\r\n  SUBSCRIBE_POST,\r\n} from \"../../GraphQL/Mutations\";\r\nimport { PostContext } from \"../../context/posts\";\r\n\r\nimport \"./style.css\";\r\nimport { MAP_API_KEY } from \"../../util/ConfigMap\";\r\n\r\nGeocode.setApiKey(MAP_API_KEY);\r\n\r\nGeocode.setLanguage(\"id\");\r\n\r\nexport default function PostCard({ post, loading, type }) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [repostAddress, setRepostAddress] = useState(\"\");\r\n  const [repostData, setRepostData] = useState(\"\");\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const postContext = useContext(PostContext);\r\n\r\n  const [deletePost] = useMutation(DELETE_POST, {\r\n    update(_, { data: { deletePost } }) {\r\n      alert(deletePost);\r\n      postContext.deletePost(post.id, post.room);\r\n    },\r\n  });\r\n\r\n  const [mutePost] = useMutation(MUTE_POST, {\r\n    update(_, { data: { mutePost } }) {\r\n      postContext.mutePost(mutePost, post.room);\r\n    },\r\n  });\r\n\r\n  const [subscribePost] = useMutation(SUBSCRIBE_POST, {\r\n    update(_, { data: { subscribePost } }) {\r\n      postContext.subscribePost(subscribePost, post);\r\n    },\r\n  });\r\n  const userName = user && user.username;\r\n  const repost = get(post, \"repost\") || {};\r\n  const isRepost = get(repost, \"id\") || \"\";\r\n\r\n  const { muted, subscribe } = post;\r\n  const isMuted = user && muted && muted.find((mute) => mute.owner === user.username);\r\n\r\n  const isSubscribe = user && subscribe && subscribe.find((sub) => sub.owner === user.username);\r\n\r\n  useEffect(() => {\r\n    if (post.location) {\r\n      Geocode.fromLatLng(post.location.lat, post.location.lng).then(\r\n        (response) => {\r\n          const address = response.results[0].address_components[1].short_name;\r\n          setAddress(address);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n\r\n      if (isRepost) {\r\n        const { location } = repost;\r\n        Geocode.fromLatLng(location.lat, location.lng).then(\r\n          (response) => {\r\n            const address =\r\n              response.results[0].address_components[1].short_name;\r\n            setRepostAddress(address);\r\n            setRepostData(repost);\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [post, isRepost]);\r\n\r\n\r\n  return (\r\n    <List itemLayout=\"vertical\" size=\"large\" style={{\r\n      background: 'white',\r\n      marginBottom: '16px',\r\n\r\n      borderRadius: 5\r\n      }}>\r\n      <List.Item\r\n        key={post.id}\r\n        className=\"list-actions\"\r\n        actions={\r\n          !loading && [\r\n            <>\r\n              <div className=\"action-post\">\r\n                <div className=\"action-post__item\">\r\n                  <LikeButton\r\n                    likeCount={post.likeCount}\r\n                    likes={post.likes}\r\n                    id={post.id}\r\n                    room={post.room}\r\n                    type={type}\r\n                  />\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <Link to={`/${post.room ? post.room : \"post\"}/${post.id}`}>\r\n                  <CommentButton commentCount={post.commentCount} icon={<MessageOutlined />} />\r\n                  </Link>\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <RepostButton idPost={post.id} room={post.room} repostCount={post.repostCount} icon={<RetweetOutlined />} />\r\n                </div>\r\n              </div>\r\n            </>,\r\n          ]\r\n        }\r\n      >\r\n        <List.Item.Meta\r\n          title={\r\n            <div>\r\n              <Row>\r\n                <Col span={20}>\r\n                  <Link to={`/${post.room ? post.room : \"post\"}/${post.id}`} style={{ fontSize: 15 }}>\r\n                    <img src={Pin} style={{ width: 15, marginTop: -4 }} />\r\n                    {address}\r\n                  </Link>\r\n                  {userName == post.owner && (\r\n                    <div\r\n                      style={{\r\n                        width: 60,\r\n                        height: 20,\r\n                        border: \"1px black solid\",\r\n                        borderRadius: 5,\r\n                        textAlign: \"center\",\r\n                        display: \"inline-block\",\r\n                        marginLeft: 6,\r\n                      }}\r\n                    >\r\n                      <p style={{ fontSize: 14 }}>My Post</p>\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: \"right\" }}>\r\n                  <Dropdown\r\n                    overlay={\r\n                      <Menu>\r\n                        {!post.room && (<Menu.Item\r\n                          key=\"0\"\r\n                          onClick={() =>\r\n                            subscribePost({ variables: { id: post.id, room: post.room } })\r\n                          }\r\n                        >\r\n                          {isSubscribe ? \"Unsubscribe\" : \"Subscribe\"}\r\n                        </Menu.Item>)}\r\n                        {!post.room && (<Menu.Item\r\n                          key=\"1\"\r\n                          onClick={() =>\r\n                            mutePost({ variables: { postId: post.id, room: post.room} })\r\n                          }\r\n                        >\r\n                          {isMuted ? \"Unmute\" : \"Mute\"}\r\n                        </Menu.Item>)}\r\n                        <Menu.Item key=\"3\">Report</Menu.Item>\r\n                        {userName === post.owner ? (\r\n                          <Menu.Item\r\n                            key=\"4\"\r\n                            onClick={() =>\r\n                              deletePost({ variables: { id: post.id, room: post.room } })\r\n                            }\r\n                          >\r\n                            Delete Post\r\n                          </Menu.Item>\r\n                        ) : null}\r\n                      </Menu>\r\n                    }\r\n                    trigger={[\"click\"]}\r\n                    placement=\"bottomRight\"\r\n                  >\r\n                    <a\r\n                      className=\"ant-dropdown-link\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                    >\r\n                      <DropIcon style={{background: 'red'}} />\r\n                    </a>\r\n                  </Dropdown>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          }\r\n          description={<div>{moment(post.createdAt).fromNow()}</div>}\r\n        ></List.Item.Meta>\r\n        {isRepost && (\r\n          <Card\r\n            bodyStyle={{ padding: \"10px 12px\" }}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              borderRadius: 10,\r\n              backgroundColor: \"#f5f5f5\",\r\n              borderColor: \"#ededed\",\r\n              padding: 0,\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <Link to={`/post/${post.id}`} style={{ fontSize: 15 }}>\r\n              <img src={Pin} style={{ width: 15, marginTop: -4 }} />\r\n              {repostAddress}\r\n            </Link>\r\n            {userName == post.owner && (\r\n              <div\r\n                style={{\r\n                  width: 60,\r\n                  height: 20,\r\n                  border: \"1px black solid\",\r\n                  borderRadius: 5,\r\n                  textAlign: \"center\",\r\n                  display: \"inline-block\",\r\n                  marginLeft: 6,\r\n                }}\r\n              >\r\n                <p style={{ fontSize: 14 }}>My Post</p>\r\n              </div>\r\n            )}\r\n            <span style={{ fontSize: 12 }}>\r\n              {<div style={{marginBottom: 16}}>{moment(repost.createdAt).fromNow()}</div>}\r\n            </span>\r\n            {repost.media && <Photo photo={repost.media} />}\r\n            <div style={{ marginTop: 5 }}>{repost.text}</div>\r\n          </Card>\r\n        )}\r\n        <p style={{ marginTop: -9 }}>{post.text}</p>\r\n        <Photo photo={post.media} />\r\n\r\n      </List.Item>\r\n    </List>\r\n  );\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\comments.jsx",["396","397","398"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport {\r\n    List,\r\n    Card,\r\n    Row,\r\n    Avatar,\r\n    Col,\r\n    Dropdown,\r\n    Menu,\r\n    Button,\r\n    Image\r\n} from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_COMMENT } from \"../../GraphQL/Mutations\";\r\nimport { PostContext } from '../../context/posts';\r\n\r\nexport default function Comments({ post, loading, user, setReply, form }) {\r\n    const [ parentComments, setParentComment ] = useState([])\r\n\r\n    const { commentDelete } = useContext(PostContext)\r\n\r\n    const [deleteComment] = useMutation(DELETE_COMMENT, {\r\n        onError(err) {\r\n            console.log(err.message);\r\n        }, update(_, { data: { deleteComment: commentData } }) {\r\n            \r\n            commentDelete(commentData)\r\n        },\r\n    })\r\n\r\n    //reply func\r\n    const handleReply = item => {\r\n        setReply({\r\n            username: item.owner,\r\n            id: item.id\r\n        })\r\n\r\n        form.setFieldsValue({\r\n            comment: `Reply to ${item.displayName}: `\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parentComments = post.comments.filter(comment => !comment.reply.id && !comment.reply.username)\r\n        setParentComment(parentComments)\r\n    }, [post])\r\n    \r\n    return (\r\n        <div>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                dataSource={parentComments || []}\r\n                renderItem={(comment) => (\r\n                    <Card\r\n                        style={{\r\n                            width: \"100%\",\r\n                            backgroundColor: \"#ececec\",\r\n                            marginBottom: -20,\r\n                        }}\r\n                        loading={loading}\r\n                    >\r\n                        <Meta\r\n                            avatar={\r\n                                <div>\r\n                                    {post.comments.filter(data => data.reply.id === comment.id) && post.comments.filter(data => data.reply.id === comment.id).length && <div className=\"commentContainer\" />}\r\n                                    <Avatar\r\n                                        size={50}\r\n                                        style={{\r\n                                            backgroundImage: `url(${comment.displayImage})`,\r\n                                            backgroundColor: comment.colorCode,\r\n                                            backgroundSize: 50,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            }\r\n                            title={\r\n                                <Row>\r\n                                    <Col span={12}>\r\n                                        <p style={{ fontWeight: \"bold\" }}>{comment.displayName}</p>\r\n                                    </Col>\r\n                                    <Col span={12} style={{ textAlign: \"right\" }}>\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu>\r\n                                                    {comment.owner === user.username ? (\r\n                                                        <Menu.Item onClick={() => deleteComment({ variables: { postId: post.id, commentId: comment.id, room: post.room } })}>Delete Comment</Menu.Item>\r\n                                                    ) : null}\r\n                                                    <Menu.Item key=\"3\">Report</Menu.Item>\r\n                                                    <Menu.Item key=\"4\">Delete</Menu.Item>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={[\"click\"]}\r\n                                            placement=\"bottomRight\"\r\n                                        >\r\n                                            <a\r\n                                                className=\"ant-dropdown-link\"\r\n                                                onClick={(e) => e.preventDefault()}\r\n                                            >\r\n                                                <EllipsisOutlined />\r\n                                            </a>\r\n                                        </Dropdown>\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n                            description={<div>\r\n                                <p style={{ color: \"black\" }}>{comment.text}</p>\r\n                                {comment.photo ? (\r\n                                    <div style={{ width: '80%' }}>\r\n                                        <Image\r\n                                            style={{\r\n                                                height: 220,\r\n                                                borderRadius: 10,\r\n                                                objectFit: \"cover\",\r\n                                                maxHeight: 300,\r\n                                                objectFit: \"cover\",\r\n                                            }}\r\n                                            src={comment.photo}\r\n                                        />\r\n                                    </div>\r\n\r\n                                ) : null}\r\n                            </div>}\r\n                        />\r\n                        <div\r\n                            style={{\r\n                                marginTop: 20,\r\n                                display: \"inline-block\",\r\n                                marginBottom: -20,\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                {moment(comment.createdAt).fromNow()}\r\n\r\n                                <Button\r\n                                    type=\"link\"\r\n                                    onClick={() => handleReply(comment)}\r\n                                    style={{\r\n                                        fontWeight: \"bold\",\r\n                                        display: \"inline-block\",\r\n                                        marginLeft: 10,\r\n                                        color: \"black\"\r\n                                    }}\r\n                                >\r\n                                    Reply\r\n                                </Button>\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <List\r\n                                className=\"commentContainerReply\"\r\n                                itemLayout=\"vertical\"\r\n                                size=\"large\"\r\n                                dataSource={post.comments.filter(data => data.reply.id === comment.id) || []}\r\n                                renderItem={(item, key) => (\r\n                                    <Card\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            backgroundColor: \"#ececec\",\r\n                                            marginBottom: -20,\r\n                                        }}\r\n                                        loading={loading}\r\n                                    >\r\n                                        <Meta\r\n                                            avatar={\r\n                                                <>\r\n                                                    {comment && post.comments.filter(data => data.reply.id === comment.id).length !== key + 1 && <div className=\"commentContainer\" />}\r\n                                                    <Avatar\r\n                                                        size={50}\r\n                                                        style={{\r\n                                                            backgroundColor: item.colorCode,\r\n                                                            backgroundImage: `url('${item.displayImage}')`,\r\n                                                            backgroundSize: 50,\r\n                                                        }}\r\n                                                    />\r\n                                                </>\r\n                                            }\r\n                                            title={\r\n                                                <Row>\r\n                                                    <Col span={12}>\r\n                                                        <p style={{ fontWeight: \"bold\" }}>{item.displayName}</p>\r\n                                                    </Col>\r\n                                                    <Col span={12} style={{ textAlign: \"right\" }}>\r\n                                                        <Dropdown\r\n                                                            overlay={\r\n                                                                <Menu>\r\n                                                                    {item.owner === user.username ? (\r\n                                                                        <Menu.Item onClick={() => deleteComment({ variables: { postId: post.id, commentId: item.id, room: post.room } })}>Delete Comment</Menu.Item>\r\n                                                                    ) : null}\r\n                                                                    <Menu.Item key=\"3\">Report</Menu.Item>\r\n                                                                </Menu>\r\n                                                            }\r\n                                                            trigger={[\"click\"]}\r\n                                                            placement=\"bottomRight\"\r\n                                                        >\r\n                                                            <a\r\n                                                                className=\"ant-dropdown-link\"\r\n                                                                onClick={(e) => e.preventDefault()}\r\n                                                            >\r\n                                                                <EllipsisOutlined />\r\n                                                            </a>\r\n                                                        </Dropdown>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            }\r\n                                            description={<p style={{ color: \"black\" }}>{item.text}</p>}\r\n                                        />\r\n                                        <div\r\n                                            style={{\r\n                                                marginTop: 20,\r\n                                                display: \"inline-block\",\r\n                                                marginBottom: -20,\r\n                                            }}\r\n                                        >\r\n                                            <p>\r\n                                                {moment(item.createdAt).fromNow()}\r\n\r\n                                                <Button\r\n                                                    type=\"link\"\r\n                                                    onClick={() => handleReply({ displayName: item.displayName, id: comment.id, username: item.owner })}\r\n                                                    style={{\r\n                                                        fontWeight: \"bold\",\r\n                                                        display: \"inline-block\",\r\n                                                        marginLeft: 10,\r\n                                                        color: \"black\"\r\n                                                    }}\r\n                                                >\r\n                                                    Reply\r\n                                                </Button>\r\n                                            </p>\r\n                                        </div>\r\n                                        <div>\r\n                                        </div>\r\n                                    </Card>\r\n                                )}>\r\n                            </List>\r\n                        </div>\r\n                    </Card>\r\n                )}>\r\n            </List>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Fragment.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Firebase.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AppBar\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginGoogleButton.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginFacebookButton.jsx",["399"],"import React, { useContext, useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { FacebookProvider, auth } from '../util/Firebase'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { LOGIN_USER_FACEBOOK } from '../GraphQL/Mutations'\r\n\r\nconst CHECK_USER_BY_FACEBOOK = gql`\r\n  mutation check($username: String!){\r\n    checkUserWithFacebook(username: $username)\r\n  }\r\n`\r\n\r\nexport default function LoginFacebookButton({ props }) {\r\n  const { loadFacebookData, login } = useContext(AuthContext)\r\n  const [dataFacebook, setFacebookData] = useState({})\r\n\r\n  // const [loginFacebook] = useMutation(LOGIN_USER_FACEBOOK, {\r\n  //   update(_, { data: { loginWithFacebook } }) {\r\n\r\n  //     login(loginWithFacebook)\r\n  //   }\r\n  // })\r\n\r\n  const [check] = useMutation(CHECK_USER_BY_FACEBOOK, {\r\n    update(_, { data: { checkUserWithFacebook } }) {\r\n      if (!checkUserWithFacebook) {\r\n        loadFacebookData(dataFacebook)\r\n        props.history.push('/register/facebook')\r\n      } else {\r\n        const { token } = dataFacebook\r\n        // loginFacebook({ variables: { username, token } })\r\n        login(token)\r\n        props.history.push('/')\r\n      }\r\n    },\r\n    onError(err) {\r\n      console.log(err.message)\r\n    }\r\n  })\r\n\r\n  const signInWithFacebook = async () => {\r\n    auth.signInWithPopup(FacebookProvider).then(function (result) {\r\n      let user = result.user;\r\n      let facebookData = {\r\n        username: user.displayName,\r\n        email: user.email,\r\n        imageUrl: user.photoURL,\r\n        id: user.uid\r\n      }\r\n      user.getIdToken().then(token => {\r\n        facebookData.token = token\r\n      })\r\n      setFacebookData(facebookData)\r\n\r\n      check({ variables: { username: user.displayName } })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Button onClick={signInWithFacebook} className=\"landing-big-button\" style={{fontSize: '18px', color: 'white', background: '#7F57FF' }}>\r\n      <i className=\"facebook icon\" />\r\n          Continue with Facebook\r\n    </Button>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Container.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SidebarMobile.jsx",["400","401"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Sidebar.jsx",["402","403"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BackDrop.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NavBar.jsx",["404","405"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\index.jsx",["406","407","408","409","410","411","412","413","414","415","416","417"],"// Modules\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useMutation, useLazyQuery } from '@apollo/client';\r\nimport { Modal, Button, Form, Input, Col, Upload, Card, Skeleton, Space, Collapse, Radio, Image } from \"antd\";\r\nimport { DownOutlined } from '@ant-design/icons'\r\nimport { PlusOutlined, PictureOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { get } from 'lodash';\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n// Styles\r\nimport \"../../App.css\";\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\n\r\n// Context\r\nimport { PostContext } from \"../../context/posts\";\r\nimport Pin from \"../../assets/pin-svg-25px.svg\";\r\nimport Gorila from \"../../assets/gorila.jpg\";\r\nimport Bmw from \"../../assets/bmw.jpg\";\r\n\r\n// Query\r\nimport { GET_POST } from '../../GraphQL/Queries';\r\nimport { CREATE_POST } from '../../GraphQL/Mutations'\r\n\r\n// Init Firebase\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport { AuthContext } from \"../../context/auth\";\r\nconst storage = firebase.storage()\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst InitialState = {\r\n  previewVisible: false,\r\n  confirmLoading: false,\r\n  visible: false,\r\n  previewImage: '',\r\n  previewTitle: '',\r\n  fileList: [],\r\n  lat: '',\r\n  lng: '',\r\n  uploaded: [],\r\n  isFinishUpload: false,\r\n  text: ''\r\n};\r\n\r\nconst UploadButton = () => (\r\n  <div>\r\n    <PlusOutlined />\r\n    <div style={{ marginTop: 8 }}>Upload</div>\r\n  </div>\r\n);\r\n\r\nexport default function ModalPost() {\r\n  // Context\r\n  const {\r\n    isOpenNewPost,\r\n    repost = null,\r\n    toggleOpenNewPost,\r\n    createPost: updatePosts\r\n  } = useContext(PostContext);\r\n\r\n  // Local State\r\n  const [state, setState] = useState(InitialState);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressRepost, setAddressRepost] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n  const { room, setRoom } = useContext(AuthContext)\r\n  const [open, setOpen] = useState([])\r\n\r\n  //changeroom func\r\n  const handleCollapse = () => {\r\n    if (open.length) {\r\n      setOpen([])\r\n    } else {\r\n      setOpen([1])\r\n    }\r\n  }\r\n  const handleRoom = (e) => {\r\n    setRoom('Nearby')\r\n    setOpen([])\r\n\r\n  }\r\n  //set location\r\n\r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n\r\n\r\n  // Query\r\n  const [getRepost, { data: dataRepost, loading }] = useLazyQuery(GET_POST);\r\n  const getPost = get(dataRepost, 'getPost') || {};\r\n\r\n\r\n  if (getPost.location) {\r\n    Geocode.fromLatLng(getPost.location.lat, getPost.location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddressRepost(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  const [createPost, {data, loading : loadingCreatePost }] = useMutation(\r\n    CREATE_POST,\r\n    {\r\n      onCompleted: (data) => {\r\n        const { createPost } = data;\r\n\r\n        // Reset Form\r\n        setState(InitialState);\r\n        form.resetFields();\r\n\r\n        // Update Redux\r\n        toggleOpenNewPost(false)\r\n        updatePosts({\r\n          ...createPost,\r\n          repost: getPost\r\n        });\r\n      }\r\n    }\r\n  )\r\n\r\n  const { isFinishUpload, previewVisible, previewImage, fileList, previewTitle, lat, lng, uploaded } = state;\r\n\r\n  ///////// location /////////\r\n  function showPosition(position) {\r\n    setState({\r\n      ...state,\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpenNewPost) navigator.geolocation.getCurrentPosition(showPosition)\r\n  }, [isOpenNewPost]);\r\n\r\n  useEffect(() => {\r\n    if (repost) {\r\n      getRepost({ variables: { id: repost.repost } });\r\n    }\r\n  }, [repost]);\r\n\r\n  useEffect(() => {\r\n    if (isOpenNewPost && !!uploaded.length || (state.text && !uploaded.length && isFinishUpload)) {\r\n      const { text = '' } = state;\r\n      const variables = {\r\n        text,\r\n        media: uploaded,\r\n        location: {\r\n          lat,\r\n          lng\r\n        },\r\n        repost: repost.repost || '',\r\n        roomRepost: repost.room || '',\r\n        room\r\n      };\r\n      \r\n      createPost({ variables });\r\n    }\r\n  }, [uploaded, isFinishUpload]);\r\n\r\n  //////////////////// Upload Photo Function Start//////////////////////////////////\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleCancel = () => setState({ ...state, previewVisible: false });\r\n\r\n  const handleCancelModal = () => {\r\n    toggleOpenNewPost(false);\r\n  };\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => {\r\n    const newFiles = fileList.map(file => ({ ...file, status: 'done' }))\r\n    setState({\r\n      ...state,\r\n      fileList: newFiles\r\n    });\r\n\r\n    \r\n  }\r\n  const handleRemove = file => {\r\n    const newFile = fileList.filter(item => item !== file);\r\n    setState({\r\n      ...state,\r\n      fileList: newFile\r\n    })\r\n  }\r\n\r\n  //////////////////// Upload Photo Function Finish/////////////////////////////////\r\n\r\n  const onFinish = async (value) => {\r\n    let uploaded = [];\r\n    ////////////////fungsi upload///////////////////\r\n    if (fileList.length) {\r\n      uploaded = await Promise.all(fileList.map(async (elem) => {\r\n        const uploadTask = storage.ref(`images/${elem.originFileObj.name}`).put(elem.originFileObj)\r\n\r\n        const url = await new Promise((resolve, reject) => {\r\n          uploadTask.on('state_changed',\r\n            () => { },\r\n            error => {\r\n              fileList.push({ ...elem, status: 'error' })\r\n              reject()\r\n            },\r\n            async () => {\r\n              const downloadUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n\r\n              resolve(downloadUrl);\r\n            }\r\n          )\r\n        })\r\n\r\n        return url\r\n      }));\r\n\r\n      setState({ ...state, uploaded, fileList, isFinishUpload: true, text: value.text });\r\n\r\n      return;\r\n    }\r\n\r\n\r\n    setState({ ...state, uploaded: [], isFinishUpload: true, text: value.text })\r\n\r\n    return;\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Modal\r\n        key=\"addPost\"\r\n        visible={isOpenNewPost}\r\n        title={[\r\n          <p key=\"paragraf\">{repost ? 'Repost' : 'Post to'}</p>,\r\n          <div>\r\n            <Collapse ghost accordion activeKey={open} onChange={handleCollapse}>\r\n              <Panel onChange={handleCollapse} header={\r\n                <div>\r\n                  <Radio.Button onClick={handleRoom} value=\"Nearby\" style={{ border: 'none', color: 'black', backgroundColor: 'none', height: 50   }}>\r\n                    <img src={Pin} style={{ display: 'inline-block', width: 40,  }} />\r\n                  </Radio.Button>\r\n                  <div style={{ display: 'inline-block' }}>\r\n                    <h3 style={{ fontWeight: \"bold\" }}>{room ? room : \"Nearby\"}</h3>\r\n                    <Link to='/maps'><p style={{ fontSize: 12, marginTop: -10 }}>{address}</p></Link>\r\n                  </div>\r\n                  <DownOutlined style={{ float: 'right', width: 46, marginTop: 15 }} />\r\n                </div>\r\n              } key=\"1\" showArrow={false}>\r\n                <p onClick={handleRoom}>Nearby</p>\r\n                <p>Available Room</p>\r\n                <Radio.Button className='addpostRoom' onClick={handleRoom} value=\"Insvire E-Sport\" style={{ border: 'none', color: 'black', backgroundColor: 'none', width: '100%', height: 55 }}>\r\n                  <img src={Gorila} style={{ display: 'inline-block', width: 40, marginTop: -21, marginBottom: \"auto\", borderRadius: '50%', marginRight: 5 }} />\r\n                  <div style={{ display: 'inline-block' }}>\r\n                    <h4 style={{ fontWeight: \"bold\" }}>Insvire E-Sport</h4>\r\n                    <p style={{ fontSize: 12, marginTop: -15 }}>bermain dan besenang senang adalah jalan ninja kami</p>\r\n                  </div>\r\n                </Radio.Button>\r\n\r\n                <Radio.Button className='addpostRoom' onClick={handleRoom} value=\"BMW Club Bandung\" style={{ border: 'none', color: 'black', backgroundColor: 'none', width: '100%', height: 55 }}>\r\n                  <img src={Bmw} style={{ display: 'inline-block', width: 40, marginTop: -21, marginBottom: \"auto\", borderRadius: '50%', marginRight: 5 }} />\r\n                  <div style={{ display: 'inline-block' }}>\r\n                    <h4 style={{ fontWeight: \"bold\" }}>BMW Club Bandung</h4>\r\n                    <p style={{ fontSize: 12, marginTop: -15 }}>masuk clubnya walau belom punya mobilnya</p>\r\n                  </div>\r\n                </Radio.Button>\r\n              </Panel>\r\n            </Collapse>\r\n\r\n          </div>\r\n\r\n\r\n          ,\r\n        ]}\r\n        onCancel={handleCancelModal}\r\n        footer={null}\r\n      >\r\n        {!!repost && (\r\n          <>\r\n            {loading ?\r\n              (\r\n                <div style={{ marginBottom: 10 }}>\r\n                  <Space>\r\n                    <Skeleton.Avatar active={true} size={\"large\"} />\r\n                    <Skeleton.Button style={{ width: window.isMobile ? '200px' : '400px' }} size={\"small\"} />\r\n                  </Space>\r\n                  <Skeleton.Button style={{ width: window.isMobile ? '250px' : '450px', marginTop: 10 }} size={\"small\"} />\r\n                </div>\r\n              )\r\n              : (\r\n                <Card bodyStyle={{ padding: '10px 12px' }} style={{ width: '100%', height: '100%', borderRadius: 10, backgroundColor: '#f5f5f5', borderColor: '#ededed', padding: 0, marginBottom: 12 }}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <p className=\"ic-location-small\" style={{ margin: 0 }} />\r\n                    <div style={{ fontWeight: 600, paddingLeft: 10 }}>{addressRepost}</div>\r\n                  </div>\r\n                  <span style={{ fontSize: 12 }}>{moment(getPost.createdAt).fromNow()}</span>\r\n                  <div style={{ marginTop: 5 }}>{getPost.text}</div>\r\n                  \r\n                  {getPost.media ? (\r\n          getPost.media.length == 1 ? (\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                borderRadius: 10,\r\n                objectFit: \"cover\",\r\n                maxHeight: 300,\r\n              }}\r\n              src={getPost.media}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n\r\n        {getPost.media ? (\r\n          getPost.media.length == 2 ? (\r\n            <table className=\"row-card-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <Image.PreviewGroup>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={getPost.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Image\r\n                        style={{ borderRadius: \"0px 10px 10px 0px\" }}\r\n                        src={getPost.media[1]}\r\n                      />\r\n                    </td>\r\n                  </Image.PreviewGroup>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n        {getPost.media ? (\r\n          getPost.media.length >= 3 ? (\r\n            <table className=\"photo-grid-3\">\r\n              <Image.PreviewGroup>\r\n                <tbody>\r\n                  <tr style={{ margin: 0, padding: 0 }}>\r\n                    <td\r\n                      rowspan=\"2\"\r\n                      style={{ width: \"50%\", verticalAlign: \"top\" }}\r\n                    >\r\n                      <Image\r\n                        className=\"pict1-3\"\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={getPost.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        className=\"pict2-3\"\r\n                        style={{ borderRadius: \"0px 10px 0px 0px\" }}\r\n                        src={getPost.media[1]}\r\n                      />\r\n                      <div\r\n                        className=\"text-container\"\r\n                        style={{ marginTop: \"-6px\" }}\r\n                      >\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={\r\n                            getPost.media.length > 3\r\n                              ? {\r\n                                  borderRadius: \"0px 0px 10px 0px\",\r\n                                  filter: \"blur(2px)\",\r\n                                }\r\n                              : { borderRadius: \"0px 0px 10px 0px\" }\r\n                          }\r\n                          src={getPost.media[2]}\r\n                        />\r\n                        <div className=\"text-center\">\r\n                          {getPost.media.length > 3\r\n                            ? \"+\" + (getPost.media.length - 3)\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  {getPost.media.length > 3 ? (\r\n                    <div>\r\n                      <Image\r\n                        className=\"pict3-3\"\r\n                        style={{ display: \"none\" }}\r\n                        src={getPost.media[3]}\r\n                      />\r\n                      {getPost.media.length > 4 ? (\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={{ display: \"none\" }}\r\n                          src={getPost.media[4]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </tbody>\r\n              </Image.PreviewGroup>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n                  \r\n                </Card>\r\n              )}\r\n          </>\r\n        )}\r\n        <Form form={form} name=\"nest-messages\" onFinish={onFinish}>\r\n          <Form.Item name=\"text\"  >\r\n            <Input.TextArea bordered={false} placeholder=\"What's your story\" />\r\n          </Form.Item>\r\n          {fileList.length > 0 && (\r\n            <Form.Item name=\"foto\" style={{ marginBottom: 0 }} >\r\n              <Upload\r\n                onRemove={handleRemove}\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                accept=\"video/*, image/*\"\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n              >\r\n                {fileList.length >= 5 ? null : <UploadButton />}\r\n              </Upload>\r\n            </Form.Item>\r\n          )}\r\n          \r\n          <div style={{ position: 'relative', width: '100%' }}>\r\n            {/* <Divider /> */}\r\n            <hr style={{\r\n              border: 'none',\r\n              borderTop: '1px solid #d9d9d9',\r\n              height: '0.2px'\r\n            }} />\r\n            <Col span={12}>\r\n              <Form.Item name=\"foto\" style={{ marginBottom: 0 }}>\r\n                <Upload\r\n                  accept=\"video/*, image/*\"\r\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                  fileList={fileList}\r\n                  showUploadList={null}\r\n                  onChange={handleChange}\r\n                  onRemove={handleRemove}\r\n                >\r\n                  <PictureOutlined />\r\n                </Upload>\r\n              </Form.Item>\r\n            </Col>\r\n            <Button htmlType=\"submit\" key=\"submit\" type=\"primary\" loading={loadingCreatePost}\r\n              style={{ backgroundColor: '#7958f5', borderRadius: 20, position: \"absolute\", bottom: \"3%\", right: 0, height: 25, fontSize: 10 }}>\r\n              Post\r\n            </Button>\r\n          </div>\r\n\r\n        </Form>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Notification\\Notification.jsx",["418","419","420","421","422","423"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Icon.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Photo.jsx",["424","425"],"import React from 'react'\r\n\r\nimport {Image } from \"antd\";\r\n\r\nexport default function Photo({photo}) {\r\n    return (\r\n        <div>\r\n            {photo ? (\r\n          photo.length == 1 ? (\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                borderRadius: 10,\r\n                objectFit: \"cover\",\r\n                maxHeight: 300,\r\n              }}\r\n              src={photo}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n\r\n        {photo ? (\r\n          photo.length == 2 ? (\r\n            <table className=\"row-card-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <Image.PreviewGroup>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={photo[0]}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Image\r\n                        style={{ borderRadius: \"0px 10px 10px 0px\" }}\r\n                        src={photo[1]}\r\n                      />\r\n                    </td>\r\n                  </Image.PreviewGroup>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n{photo ? (\r\n          photo.length >= 3 ? (\r\n            <table className=\"photo-grid-3\">\r\n              <Image.PreviewGroup>\r\n                <tbody>\r\n                  <tr style={{ margin: 0, padding: 0 }}>\r\n                    <td\r\n                      rowspan=\"2\"\r\n                      style={{ width: \"50%\", verticalAlign: \"top\" }}\r\n                    >\r\n                      <Image\r\n                        className=\"pict1-3\"\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={photo[0]}\r\n                      />\r\n                    </td>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        className=\"pict2-3\"\r\n                        style={{ borderRadius: \"0px 10px 0px 0px\" }}\r\n                        src={photo[1]}\r\n                      />\r\n                      <div\r\n                        className=\"text-container\"\r\n                        style={{ marginTop: \"-6px\" }}\r\n                      >\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={\r\n                            photo.length > 3\r\n                              ? {\r\n                                  borderRadius: \"0px 0px 10px 0px\",\r\n                                  filter: \"blur(2px)\",\r\n                                }\r\n                              : { borderRadius: \"0px 0px 10px 0px\" }\r\n                          }\r\n                          src={photo[2]}\r\n                        />\r\n                        <div className=\"text-center\">\r\n                          {photo.length > 3\r\n                            ? \"+\" + (photo.length - 3)\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  {photo.length > 3 ? (\r\n                    <div>\r\n                      <Image\r\n                        className=\"pict3-3\"\r\n                        style={{ display: \"none\" }}\r\n                        src={photo[3]}\r\n                      />\r\n                      {photo.length > 4 ? (\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={{ display: \"none\" }}\r\n                          src={photo[4]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </tbody>\r\n              </Image.PreviewGroup>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n        </div>\r\n    )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx",["426"],"import React, { useContext, useEffect } from \"react\";\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LIKE_POST } from \"../../../GraphQL/Mutations\";\r\nimport { PostContext } from \"../../../context/posts\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nimport './style.css';\r\n\r\nexport default function LikeButton({ likeCount, id, likes, room, type }) {\r\n  const { like } = useContext(PostContext);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [likePost] = useMutation(LIKE_POST, {\r\n    update(_, { data: { likePost } }) {\r\n      like(likePost, id, room, type);\r\n    },\r\n  });\r\n\r\n  const onLike = () => {\r\n    likePost({ variables: { id, room } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui labeled btn-like\" tabIndex=\"0\">\r\n      <div className=\"btn-like__icon\" >\r\n        <Button\r\n          onClick={onLike}\r\n          shape=\"circle\"\r\n          className=\"likeButton\"\r\n          icon={\r\n            // <HeartOutlined />\r\n            user && likes.find((like) => like.owner === user.username) ? (\r\n              <HeartOutlined style={{ color: \"red\" }} />\r\n            ) : (\r\n              <HeartOutlined />\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"btn-like__wrapper\">\r\n        <div className=\"ui basic label float btn-like__label\">\r\n          <p>{likeCount} likes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Config.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BottomBar\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostNavBar.jsx",["427","428","429","430","431","432","433"],"import { Button, Radio, Tabs } from 'antd';\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function PostNavBar() {\r\nconst [nav, setNav] = useState({value2: \"Latest\"})\r\n//back button\r\nlet history = useHistory();\r\n\r\n\r\n\r\nconst onChange2 = e => {\r\n    setNav({\r\n        value2: e.target.value,\r\n    });\r\n  };\r\n\r\nconst { value2 } = nav;\r\n\r\n    return (\r\n      <StickyContainer>\r\n        <Menu pointing secondary size='massive'>\r\n          <div style={{display: \"inline-block\",marginLeft: 20, padding: \"10px 0\"}} onClick={() => history.goBack()}>\r\n          <ArrowLeftOutlined />\r\n          </div>\r\n          <p style={{padding: \"10px 0\",marginLeft: 20, fontWeight: 'bolder',}}>Post</p>\r\n        </Menu>\r\n      </StickyContainer>\r\n        )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Subsriptions.js",["434"],"import { gql } from \"@apollo/client\";\r\nimport { notificationDetailFragment } from './Fragment'\r\n\r\nexport const NOTIFICATION_ADDED = gql`\r\n    subscription {\r\n      notificationAdded {\r\n        recipient\r\n        sender\r\n        read\r\n        postId\r\n        id\r\n        type\r\n        createdAt\r\n        displayName\r\n        displayImage\r\n        colorCode\r\n    }\r\n  }\r\n`;",{"ruleId":"435","severity":1,"message":"436","line":55,"column":11,"nodeType":"437","messageId":"438","endLine":56,"endColumn":40},{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"443","severity":1,"message":"444","line":52,"column":26,"nodeType":"445","messageId":"446","endLine":52,"endColumn":30},{"ruleId":"447","severity":1,"message":"448","line":66,"column":6,"nodeType":"449","endLine":66,"endColumn":44,"suggestions":"450"},{"ruleId":"447","severity":1,"message":"451","line":98,"column":6,"nodeType":"449","endLine":98,"endColumn":27,"suggestions":"452"},{"ruleId":"453","severity":1,"message":"454","line":121,"column":55,"nodeType":"455","messageId":"456","endLine":121,"endColumn":57},{"ruleId":"457","severity":1,"message":"458","line":172,"column":17,"nodeType":"459","endLine":172,"endColumn":59},{"ruleId":"460","severity":1,"message":"461","line":188,"column":45,"nodeType":"462","messageId":"463","endLine":188,"endColumn":47},{"ruleId":"460","severity":1,"message":"461","line":189,"column":44,"nodeType":"462","messageId":"463","endLine":189,"endColumn":46},{"ruleId":"460","severity":1,"message":"464","line":190,"column":39,"nodeType":"462","messageId":"463","endLine":190,"endColumn":41},{"ruleId":"460","severity":1,"message":"464","line":190,"column":51,"nodeType":"462","messageId":"463","endLine":190,"endColumn":53},{"ruleId":"465","severity":1,"message":"466","line":193,"column":21,"nodeType":"459","endLine":202,"endColumn":23},{"ruleId":"457","severity":1,"message":"458","line":209,"column":17,"nodeType":"459","endLine":209,"endColumn":59},{"ruleId":"457","severity":1,"message":"458","line":231,"column":11,"nodeType":"459","endLine":239,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":265,"column":11,"nodeType":"459","endLine":265,"endColumn":65},{"ruleId":"443","severity":1,"message":"467","line":1,"column":22,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},{"ruleId":"443","severity":1,"message":"468","line":57,"column":9,"nodeType":"445","messageId":"446","endLine":57,"endColumn":14},{"ruleId":"443","severity":1,"message":"469","line":2,"column":10,"nodeType":"445","messageId":"446","endLine":2,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":13,"column":13,"nodeType":"459","endLine":13,"endColumn":55},{"ruleId":"457","severity":1,"message":"458","line":19,"column":64,"nodeType":"459","endLine":19,"endColumn":108},{"ruleId":"443","severity":1,"message":"470","line":4,"column":27,"nodeType":"445","messageId":"446","endLine":4,"endColumn":36},{"ruleId":"443","severity":1,"message":"471","line":7,"column":8,"nodeType":"445","messageId":"446","endLine":7,"endColumn":22},{"ruleId":"447","severity":1,"message":"472","line":27,"column":10,"nodeType":"449","endLine":27,"endColumn":12,"suggestions":"473"},{"ruleId":"447","severity":1,"message":"474","line":44,"column":8,"nodeType":"449","endLine":44,"endColumn":26,"suggestions":"475"},{"ruleId":"457","severity":1,"message":"458","line":52,"column":25,"nodeType":"459","endLine":52,"endColumn":67},{"ruleId":"460","severity":1,"message":"461","line":59,"column":80,"nodeType":"462","messageId":"463","endLine":59,"endColumn":82},{"ruleId":"443","severity":1,"message":"476","line":8,"column":5,"nodeType":"445","messageId":"446","endLine":8,"endColumn":11},{"ruleId":"443","severity":1,"message":"444","line":55,"column":37,"nodeType":"445","messageId":"446","endLine":55,"endColumn":41},{"ruleId":"447","severity":1,"message":"472","line":22,"column":10,"nodeType":"449","endLine":22,"endColumn":12,"suggestions":"477"},{"ruleId":"447","severity":1,"message":"478","line":47,"column":8,"nodeType":"449","endLine":47,"endColumn":26,"suggestions":"479"},{"ruleId":"457","severity":1,"message":"458","line":55,"column":17,"nodeType":"459","endLine":55,"endColumn":59},{"ruleId":"460","severity":1,"message":"461","line":62,"column":72,"nodeType":"462","messageId":"463","endLine":62,"endColumn":74},{"ruleId":"443","severity":1,"message":"480","line":5,"column":5,"nodeType":"445","messageId":"446","endLine":5,"endColumn":12},{"ruleId":"443","severity":1,"message":"481","line":1,"column":16,"nodeType":"445","messageId":"446","endLine":1,"endColumn":23},{"ruleId":"443","severity":1,"message":"482","line":1,"column":25,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},{"ruleId":"443","severity":1,"message":"483","line":1,"column":33,"nodeType":"445","messageId":"446","endLine":1,"endColumn":37},{"ruleId":"443","severity":1,"message":"484","line":2,"column":40,"nodeType":"445","messageId":"446","endLine":2,"endColumn":46},{"ruleId":"443","severity":1,"message":"485","line":2,"column":48,"nodeType":"445","messageId":"446","endLine":2,"endColumn":56},{"ruleId":"447","severity":1,"message":"472","line":19,"column":8,"nodeType":"449","endLine":19,"endColumn":10,"suggestions":"486"},{"ruleId":"447","severity":1,"message":"487","line":21,"column":10,"nodeType":"449","endLine":21,"endColumn":19,"suggestions":"488"},{"ruleId":"443","severity":1,"message":"489","line":28,"column":40,"nodeType":"445","messageId":"446","endLine":28,"endColumn":52},{"ruleId":"447","severity":1,"message":"490","line":36,"column":8,"nodeType":"449","endLine":36,"endColumn":14,"suggestions":"491"},{"ruleId":"447","severity":1,"message":"492","line":54,"column":8,"nodeType":"449","endLine":54,"endColumn":26,"suggestions":"493"},{"ruleId":"447","severity":1,"message":"490","line":53,"column":8,"nodeType":"449","endLine":53,"endColumn":18,"suggestions":"494"},{"ruleId":"447","severity":1,"message":"495","line":69,"column":8,"nodeType":"449","endLine":69,"endColumn":26,"suggestions":"496"},{"ruleId":"460","severity":1,"message":"461","line":83,"column":71,"nodeType":"462","messageId":"463","endLine":83,"endColumn":73},{"ruleId":"443","severity":1,"message":"467","line":1,"column":39,"nodeType":"445","messageId":"446","endLine":1,"endColumn":48},{"ruleId":"447","severity":1,"message":"497","line":27,"column":9,"nodeType":"498","endLine":27,"endColumn":41},{"ruleId":"447","severity":1,"message":"472","line":35,"column":8,"nodeType":"449","endLine":35,"endColumn":10,"suggestions":"499"},{"ruleId":"460","severity":1,"message":"461","line":85,"column":67,"nodeType":"462","messageId":"463","endLine":85,"endColumn":69},{"ruleId":"460","severity":1,"message":"461","line":86,"column":66,"nodeType":"462","messageId":"463","endLine":86,"endColumn":68},{"ruleId":"460","severity":1,"message":"464","line":87,"column":60,"nodeType":"462","messageId":"463","endLine":87,"endColumn":62},{"ruleId":"460","severity":1,"message":"464","line":87,"column":72,"nodeType":"462","messageId":"463","endLine":87,"endColumn":74},{"ruleId":"443","severity":1,"message":"500","line":75,"column":11,"nodeType":"445","messageId":"446","endLine":75,"endColumn":25},{"ruleId":"443","severity":1,"message":"501","line":75,"column":27,"nodeType":"445","messageId":"446","endLine":75,"endColumn":39},{"ruleId":"443","severity":1,"message":"502","line":75,"column":51,"nodeType":"445","messageId":"446","endLine":75,"endColumn":63},{"ruleId":"447","severity":1,"message":"503","line":111,"column":6,"nodeType":"449","endLine":111,"endColumn":10,"suggestions":"504"},{"ruleId":"447","severity":1,"message":"505","line":141,"column":6,"nodeType":"449","endLine":141,"endColumn":24,"suggestions":"506"},{"ruleId":"447","severity":1,"message":"507","line":162,"column":6,"nodeType":"449","endLine":162,"endColumn":22,"suggestions":"508"},{"ruleId":"460","severity":1,"message":"461","line":177,"column":37,"nodeType":"462","messageId":"463","endLine":177,"endColumn":39},{"ruleId":"457","severity":1,"message":"458","line":265,"column":21,"nodeType":"459","endLine":265,"endColumn":80},{"ruleId":"509","severity":1,"message":"510","line":282,"column":23,"nodeType":"459","endLine":285,"endColumn":24},{"ruleId":"460","severity":1,"message":"461","line":317,"column":35,"nodeType":"462","messageId":"463","endLine":317,"endColumn":37},{"ruleId":"511","severity":1,"message":"512","line":319,"column":97,"nodeType":"513","messageId":"463","endLine":319,"endColumn":106},{"ruleId":"460","severity":1,"message":"461","line":332,"column":29,"nodeType":"462","messageId":"463","endLine":332,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":346,"column":29,"nodeType":"462","messageId":"463","endLine":346,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":441,"column":54,"nodeType":"462","messageId":"463","endLine":441,"endColumn":56},{"ruleId":"443","severity":1,"message":"514","line":1,"column":17,"nodeType":"445","messageId":"446","endLine":1,"endColumn":20},{"ruleId":"447","severity":1,"message":"515","line":18,"column":8,"nodeType":"449","endLine":18,"endColumn":10,"suggestions":"516"},{"ruleId":"457","severity":1,"message":"458","line":31,"column":13,"nodeType":"459","endLine":31,"endColumn":132},{"ruleId":"457","severity":1,"message":"458","line":36,"column":13,"nodeType":"459","endLine":36,"endColumn":132},{"ruleId":"457","severity":1,"message":"458","line":41,"column":13,"nodeType":"459","endLine":41,"endColumn":132},{"ruleId":"457","severity":1,"message":"458","line":46,"column":13,"nodeType":"459","endLine":46,"endColumn":132},{"ruleId":"443","severity":1,"message":"467","line":1,"column":39,"nodeType":"445","messageId":"446","endLine":1,"endColumn":48},{"ruleId":"443","severity":1,"message":"517","line":27,"column":10,"nodeType":"445","messageId":"446","endLine":27,"endColumn":15},{"ruleId":"443","severity":1,"message":"467","line":1,"column":39,"nodeType":"445","messageId":"446","endLine":1,"endColumn":48},{"ruleId":"443","severity":1,"message":"517","line":39,"column":10,"nodeType":"445","messageId":"446","endLine":39,"endColumn":15},{"ruleId":"443","severity":1,"message":"518","line":12,"column":10,"nodeType":"445","messageId":"446","endLine":12,"endColumn":21},{"ruleId":"457","severity":1,"message":"458","line":23,"column":7,"nodeType":"459","endLine":23,"endColumn":62},{"ruleId":"519","severity":1,"message":"520","line":137,"column":3,"nodeType":"521","messageId":"522","endLine":150,"endColumn":4},{"ruleId":"447","severity":1,"message":"523","line":186,"column":6,"nodeType":"449","endLine":186,"endColumn":13,"suggestions":"524"},{"ruleId":"447","severity":1,"message":"525","line":215,"column":6,"nodeType":"449","endLine":215,"endColumn":21,"suggestions":"526"},{"ruleId":"447","severity":1,"message":"527","line":316,"column":5,"nodeType":"449","endLine":316,"endColumn":12,"suggestions":"528"},{"ruleId":"443","severity":1,"message":"529","line":1,"column":32,"nodeType":"445","messageId":"446","endLine":1,"endColumn":39},{"ruleId":"460","severity":1,"message":"461","line":854,"column":14,"nodeType":"462","messageId":"463","endLine":854,"endColumn":16},{"ruleId":"460","severity":1,"message":"461","line":856,"column":21,"nodeType":"462","messageId":"463","endLine":856,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":858,"column":21,"nodeType":"462","messageId":"463","endLine":858,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":860,"column":21,"nodeType":"462","messageId":"463","endLine":860,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":862,"column":21,"nodeType":"462","messageId":"463","endLine":862,"endColumn":23},{"ruleId":"443","severity":1,"message":"530","line":3,"column":24,"nodeType":"445","messageId":"446","endLine":3,"endColumn":32},{"ruleId":"447","severity":1,"message":"515","line":40,"column":8,"nodeType":"449","endLine":40,"endColumn":10,"suggestions":"531"},{"ruleId":"447","severity":1,"message":"532","line":73,"column":8,"nodeType":"449","endLine":73,"endColumn":18,"suggestions":"533"},{"ruleId":"447","severity":1,"message":"495","line":90,"column":8,"nodeType":"449","endLine":90,"endColumn":26,"suggestions":"534"},{"ruleId":"457","severity":1,"message":"458","line":105,"column":17,"nodeType":"459","endLine":105,"endColumn":59},{"ruleId":"460","severity":1,"message":"461","line":115,"column":71,"nodeType":"462","messageId":"463","endLine":115,"endColumn":73},{"ruleId":"535","severity":1,"message":"536","line":1,"column":1,"nodeType":"537","endLine":110,"endColumn":2},{"ruleId":"509","severity":1,"message":"510","line":65,"column":15,"nodeType":"459","endLine":68,"endColumn":16},{"ruleId":"443","severity":1,"message":"538","line":92,"column":23,"nodeType":"445","messageId":"446","endLine":92,"endColumn":27},{"ruleId":"435","severity":1,"message":"436","line":93,"column":21,"nodeType":"437","messageId":"438","endLine":94,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":128,"column":15,"nodeType":"459","endLine":128,"endColumn":86},{"ruleId":"443","severity":1,"message":"539","line":3,"column":36,"nodeType":"445","messageId":"446","endLine":3,"endColumn":41},{"ruleId":"443","severity":1,"message":"540","line":37,"column":10,"nodeType":"445","messageId":"446","endLine":37,"endColumn":20},{"ruleId":"447","severity":1,"message":"507","line":96,"column":6,"nodeType":"449","endLine":96,"endColumn":22,"suggestions":"541"},{"ruleId":"457","severity":1,"message":"458","line":141,"column":21,"nodeType":"459","endLine":141,"endColumn":75},{"ruleId":"460","severity":1,"message":"461","line":144,"column":29,"nodeType":"462","messageId":"463","endLine":144,"endColumn":31},{"ruleId":"509","severity":1,"message":"510","line":196,"column":21,"nodeType":"459","endLine":199,"endColumn":22},{"ruleId":"457","severity":1,"message":"458","line":223,"column":15,"nodeType":"459","endLine":223,"endColumn":69},{"ruleId":"460","severity":1,"message":"461","line":226,"column":23,"nodeType":"462","messageId":"463","endLine":226,"endColumn":25},{"ruleId":"509","severity":1,"message":"510","line":101,"column":45,"nodeType":"459","endLine":104,"endColumn":46},{"ruleId":"511","severity":1,"message":"512","line":121,"column":49,"nodeType":"513","messageId":"463","endLine":121,"endColumn":58},{"ruleId":"509","severity":1,"message":"510","line":201,"column":61,"nodeType":"459","endLine":204,"endColumn":62},{"ruleId":"443","severity":1,"message":"542","line":7,"column":10,"nodeType":"445","messageId":"446","endLine":7,"endColumn":29},{"ruleId":"443","severity":1,"message":"543","line":27,"column":10,"nodeType":"445","messageId":"446","endLine":27,"endColumn":19},{"ruleId":"457","severity":1,"message":"458","line":97,"column":19,"nodeType":"459","endLine":97,"endColumn":73},{"ruleId":"443","severity":1,"message":"544","line":3,"column":16,"nodeType":"445","messageId":"446","endLine":3,"endColumn":26},{"ruleId":"457","severity":1,"message":"458","line":99,"column":19,"nodeType":"459","endLine":99,"endColumn":73},{"ruleId":"460","severity":1,"message":"461","line":35,"column":42,"nodeType":"462","messageId":"463","endLine":35,"endColumn":44},{"ruleId":"460","severity":1,"message":"461","line":40,"column":42,"nodeType":"462","messageId":"463","endLine":40,"endColumn":44},{"ruleId":"443","severity":1,"message":"545","line":6,"column":41,"nodeType":"445","messageId":"446","endLine":6,"endColumn":56},{"ruleId":"443","severity":1,"message":"444","line":125,"column":23,"nodeType":"445","messageId":"446","endLine":125,"endColumn":27},{"ruleId":"447","severity":1,"message":"546","line":158,"column":6,"nodeType":"449","endLine":158,"endColumn":21,"suggestions":"547"},{"ruleId":"447","severity":1,"message":"548","line":164,"column":6,"nodeType":"449","endLine":164,"endColumn":14,"suggestions":"549"},{"ruleId":"550","severity":1,"message":"551","line":167,"column":23,"nodeType":"552","messageId":"553","endLine":167,"endColumn":25},{"ruleId":"550","severity":1,"message":"551","line":167,"column":44,"nodeType":"552","messageId":"553","endLine":167,"endColumn":46},{"ruleId":"447","severity":1,"message":"554","line":183,"column":6,"nodeType":"449","endLine":183,"endColumn":32,"suggestions":"555"},{"ruleId":"457","severity":1,"message":"458","line":283,"column":21,"nodeType":"459","endLine":283,"endColumn":87},{"ruleId":"457","severity":1,"message":"458","line":295,"column":19,"nodeType":"459","endLine":295,"endColumn":161},{"ruleId":"457","severity":1,"message":"458","line":303,"column":19,"nodeType":"459","endLine":303,"endColumn":158},{"ruleId":"460","severity":1,"message":"461","line":342,"column":32,"nodeType":"462","messageId":"463","endLine":342,"endColumn":34},{"ruleId":"460","severity":1,"message":"461","line":356,"column":32,"nodeType":"462","messageId":"463","endLine":356,"endColumn":34},{"ruleId":"443","severity":1,"message":"556","line":19,"column":65,"nodeType":"445","messageId":"446","endLine":19,"endColumn":82},{"ruleId":"443","severity":1,"message":"444","line":22,"column":10,"nodeType":"445","messageId":"446","endLine":22,"endColumn":14},{"ruleId":"443","severity":1,"message":"557","line":22,"column":16,"nodeType":"445","messageId":"446","endLine":22,"endColumn":23},{"ruleId":"443","severity":1,"message":"558","line":22,"column":25,"nodeType":"445","messageId":"446","endLine":22,"endColumn":30},{"ruleId":"509","severity":1,"message":"510","line":71,"column":15,"nodeType":"459","endLine":74,"endColumn":16},{"ruleId":"443","severity":1,"message":"538","line":103,"column":23,"nodeType":"445","messageId":"446","endLine":103,"endColumn":27},{"ruleId":"460","severity":1,"message":"461","line":9,"column":24,"nodeType":"462","messageId":"463","endLine":9,"endColumn":26},{"ruleId":"460","severity":1,"message":"461","line":23,"column":24,"nodeType":"462","messageId":"463","endLine":23,"endColumn":26},{"ruleId":"443","severity":1,"message":"467","line":1,"column":29,"nodeType":"445","messageId":"446","endLine":1,"endColumn":38},{"ruleId":"443","severity":1,"message":"476","line":1,"column":10,"nodeType":"445","messageId":"446","endLine":1,"endColumn":16},{"ruleId":"443","severity":1,"message":"559","line":1,"column":18,"nodeType":"445","messageId":"446","endLine":1,"endColumn":23},{"ruleId":"443","severity":1,"message":"560","line":1,"column":25,"nodeType":"445","messageId":"446","endLine":1,"endColumn":29},{"ruleId":"443","severity":1,"message":"561","line":3,"column":17,"nodeType":"445","messageId":"446","endLine":3,"endColumn":27},{"ruleId":"443","severity":1,"message":"562","line":6,"column":27,"nodeType":"445","messageId":"446","endLine":6,"endColumn":33},{"ruleId":"443","severity":1,"message":"563","line":20,"column":7,"nodeType":"445","messageId":"446","endLine":20,"endColumn":16},{"ruleId":"443","severity":1,"message":"564","line":26,"column":9,"nodeType":"445","messageId":"446","endLine":26,"endColumn":15},{"ruleId":"443","severity":1,"message":"565","line":2,"column":10,"nodeType":"445","messageId":"446","endLine":2,"endColumn":36},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["566"],"no-negated-in-lhs",["567"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setLikedPosts' and 'setPosts'. Either include them or remove the dependency array.","ArrayExpression",["568"],"React Hook useEffect has a missing dependency: 'changePPuser'. Either include it or remove the dependency array.",["569"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","'range' is assigned a value but never used.","'Link' is defined but never used.","'GET_POSTS' is defined but never used.","'InfiniteScroll' is defined but never used.","React Hook useEffect has missing dependencies: 'path' and 'setPathname'. Either include them or remove the dependency array.",["570"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setMutedPost'. Either include them or remove the dependency array.",["571"],"'Button' is defined but never used.",["572"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setSubscribePosts'. Either include them or remove the dependency array.",["573"],"'Tooltip' is defined but never used.","'message' is defined but never used.","'Avatar' is defined but never used.","'Spin' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.",["574"],"React Hook useEffect has a missing dependency: 'setPathname'. Either include it or remove the dependency array.",["575"],"'loadingPosts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["576"],"React Hook useEffect has missing dependencies: 'loadingData', 'room_1.length', 'room_2.length', and 'setRoom'. Either include them or remove the dependency array.",["577"],["578"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPosts'. Either include them or remove the dependency array.",["579"],"The 'visited' logical expression could make the dependencies of useEffect Hook (at line 42) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'visited' in its own useMemo() Hook.","VariableDeclarator",["580"],"'previewVisible' is assigned a value but never used.","'previewImage' is assigned a value but never used.","'previewTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPost' and 'room'. Either include them or remove the dependency array.",["581"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPost'. Either include them or remove the dependency array.",["582"],"React Hook useEffect has a missing dependency: 'repost'. Either include it or remove the dependency array.",["583"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-dupe-keys","Duplicate key 'objectFit'.","ObjectExpression","'Row' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setPathname'. Either include them or remove the dependency array.",["584"],"'login' is assigned a value but never used.","'AuthContext' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'called', 'loadDataUser', and 'refetch'. Either include them or remove the dependency array.",["585"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["586"],"React Hook useMemo has missing dependencies: 'facebookData', 'googleData', 'liked', 'login', 'notifications', 'pathname', 'room', and 'user'. Either include them or remove the dependency array.",["587"],"'useMemo' is defined but never used.","'useQuery' is defined but never used.",["588"],"React Hook useEffect has missing dependencies: 'getPosts' and 'range'. Either include them or remove the dependency array.",["589"],["590"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'text' is assigned a value but never used.","'Image' is defined but never used.","'repostData' is assigned a value but never used.",["591"],"'LOGIN_USER_FACEBOOK' is defined but never used.","'OmitProps' is defined but never used.","'useHistory' is defined but never used.","'LoadingOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'showPosition'. Either include it or remove the dependency array.",["592"],"React Hook useEffect has a missing dependency: 'getRepost'. Either include it or remove the dependency array.",["593"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'createPost', 'isOpenNewPost', 'lat', 'lng', 'repost.repost', 'repost.room', 'room', and 'state'. Either include them or remove the dependency array.",["594"],"'notificationAdded' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Radio' is defined but never used.","'Tabs' is defined but never used.","'useContext' is defined but never used.","'Sticky' is defined but never used.","'onChange2' is assigned a value but never used.","'value2' is assigned a value but never used.","'notificationDetailFragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"599","fix":"603"},{"desc":"604","fix":"605"},{"desc":"599","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"599","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"607","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"607","fix":"631"},{"desc":"632","fix":"633"},{"desc":"615","fix":"634"},{"desc":"622","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},"Update the dependencies array to be: [getProfilePosts, getProfileLikedPost, setPosts, setLikedPosts]",{"range":"642","text":"643"},"Update the dependencies array to be: [url, isFinishUpload, changePPuser]",{"range":"644","text":"645"},"Update the dependencies array to be: [path, setPathname]",{"range":"646","text":"647"},"Update the dependencies array to be: [data, _isMounted, setMutedPost, loadingData]",{"range":"648","text":"649"},{"range":"650","text":"647"},"Update the dependencies array to be: [data, _isMounted, setSubscribePosts, loadingData]",{"range":"651","text":"652"},{"range":"653","text":"647"},"Update the dependencies array to be: [history, setPathname]",{"range":"654","text":"655"},"Update the dependencies array to be: [getPosts, room]",{"range":"656","text":"657"},"Update the dependencies array to be: [data, _isMounted, setRoom, room_1.length, room_2.length, loadingData]",{"range":"658","text":"659"},"Update the dependencies array to be: [getPosts, location]",{"range":"660","text":"661"},"Update the dependencies array to be: [data, _isMounted, setPosts, loadingData]",{"range":"662","text":"663"},{"range":"664","text":"647"},"Update the dependencies array to be: [getPost, id, room]",{"range":"665","text":"666"},"Update the dependencies array to be: [data, _isMounted, setPost, loadingData]",{"range":"667","text":"668"},"Update the dependencies array to be: [post, isRepost, repost]",{"range":"669","text":"670"},{"range":"671","text":"655"},"Update the dependencies array to be: [called, loadDataUser, refetch, token]",{"range":"672","text":"673"},"Update the dependencies array to be: [loading, data, error]",{"range":"674","text":"675"},"Update the dependencies array to be: [facebookData, googleData, liked, login, notifications, pathname, room, user]",{"range":"676","text":"677"},{"range":"678","text":"655"},"Update the dependencies array to be: [getPosts, location, range]",{"range":"679","text":"680"},{"range":"681","text":"663"},{"range":"682","text":"670"},"Update the dependencies array to be: [isOpenNewPost, showPosition]",{"range":"683","text":"684"},"Update the dependencies array to be: [getRepost, repost]",{"range":"685","text":"686"},"Update the dependencies array to be: [uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost.repost, repost.room, room, createPost]",{"range":"687","text":"688"},[2276,2314],"[getProfilePosts, getProfileLikedPost, setPosts, setLikedPosts]",[3075,3096],"[url, isFinishUpload, changePPuser]",[961,963],"[path, setPathname]",[1342,1360],"[data, _isMounted, setMutedPost, loadingData]",[739,741],[1421,1439],"[data, _isMounted, setSubscribePosts, loadingData]",[687,689],[636,645],"[history, setPathname]",[1113,1119],"[getPosts, room]",[1550,1568],"[data, _isMounted, setRoom, room_1.length, room_2.length, loadingData]",[1597,1607],"[getPosts, location]",[1974,1992],"[data, _isMounted, setPosts, loadingData]",[1020,1022],[3264,3268],"[getPost, id, room]",[3874,3892],"[data, _isMounted, setPost, loadingData]",[4427,4443],"[post, isRepost, repost]",[531,533],[4203,4210],"[called, loadDataUser, refetch, token]",[4894,4909],"[loading, data, error]",[6832,6839],"[facebookData, googleData, liked, login, notifications, pathname, room, user]",[1329,1331],[2204,2214],"[getPosts, location, range]",[2600,2618],[3052,3068],[4088,4103],"[isOpenNewPost, showPosition]",[4217,4225],"[getRepost, repost]",[4677,4703],"[uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost.repost, repost.room, room, createPost]"]