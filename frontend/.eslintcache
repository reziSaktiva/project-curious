[{"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\index.js":"1","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\App.js":"2","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Session.jsx":"3","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\UserRoute.jsx":"4","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\GoogleAuthRoute.jsx":"5","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\AuthRoute.jsx":"6","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\HomeRoute.jsx":"7","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\FacebookAuthRoute.jsx":"8","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\Context.jsx":"9","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\nearby.jsx":"10","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\register.jsx":"11","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\registerFacebook.jsx":"12","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\popular.jsx":"13","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\mutedPosts.jsx":"14","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\subscribePosts.jsx":"15","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\room.jsx":"16","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Settings.jsx":"17","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\map\\index.jsx":"18","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\search\\index.jsx":"19","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\login\\index.jsx":"20","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\GoogleRegs\\registerGoogle.jsx":"21","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\grid\\grid.jsx":"22","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\detailPost.jsx":"23","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\chat.jsx":"24","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\visited\\index.jsx":"25","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\constant.jsx":"26","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\reset-password\\index.jsx":"27","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\confirm-password\\index.jsx":"28","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\landing-page\\index.jsx":"29","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Queries.js":"30","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Mutations.js":"31","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\home.jsx":"32","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\auth.jsx":"33","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\posts.jsx":"34","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostCard\\index.jsx":"35","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\ConfigMap.jsx":"36","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Photo.jsx":"37","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostNavBar.jsx":"38","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\comments.jsx":"39","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Container.jsx":"40","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx":"41","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\index.jsx":"42","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Notification\\Notification.jsx":"43","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx":"44","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx":"45","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx":"46","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Sidebar.jsx":"47","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Fragment.js":"48","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Countries.jsx":"49","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginGoogleButton.jsx":"50","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AppBar\\index.jsx":"51","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BottomBar\\index.jsx":"52","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NotificationMobile.jsx":"53","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BackDrop.jsx":"54","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SidebarMobile.jsx":"55","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Firebase.jsx":"56","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SkeletonLoading.jsx":"57","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\InfiniteScroll.jsx":"58","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NavBar.jsx":"59","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginFacebookButton.jsx":"60","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Icon.jsx":"61","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\style\\mapstyle.jsx":"62","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Modal\\index.jsx":"63","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Config.jsx":"64","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Subsriptions.js":"65","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Profile\\Profile.jsx":"66","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Profile\\editProfile.jsx":"67"},{"size":2759,"mtime":1627021832119,"results":"68","hashOfConfig":"69"},{"size":3251,"mtime":1627026049808,"results":"70","hashOfConfig":"69"},{"size":1470,"mtime":1623083693178,"results":"71","hashOfConfig":"69"},{"size":396,"mtime":1626711156841,"results":"72","hashOfConfig":"69"},{"size":495,"mtime":1626711156838,"results":"73","hashOfConfig":"69"},{"size":395,"mtime":1619713886231,"results":"74","hashOfConfig":"69"},{"size":442,"mtime":1626711156840,"results":"75","hashOfConfig":"69"},{"size":503,"mtime":1618587940560,"results":"76","hashOfConfig":"69"},{"size":307,"mtime":1618587940550,"results":"77","hashOfConfig":"69"},{"size":1431,"mtime":1623083693161,"results":"78","hashOfConfig":"69"},{"size":9029,"mtime":1627026049825,"results":"79","hashOfConfig":"69"},{"size":5685,"mtime":1626711156815,"results":"80","hashOfConfig":"69"},{"size":2968,"mtime":1626711156810,"results":"81","hashOfConfig":"69"},{"size":2378,"mtime":1626711156807,"results":"82","hashOfConfig":"69"},{"size":2433,"mtime":1626711156825,"results":"83","hashOfConfig":"69"},{"size":2851,"mtime":1626711156821,"results":"84","hashOfConfig":"69"},{"size":2947,"mtime":1627026049821,"results":"85","hashOfConfig":"69"},{"size":4447,"mtime":1626948438488,"results":"86","hashOfConfig":"69"},{"size":3516,"mtime":1627026049855,"results":"87","hashOfConfig":"69"},{"size":3239,"mtime":1626711156801,"results":"88","hashOfConfig":"69"},{"size":5506,"mtime":1626711156781,"results":"89","hashOfConfig":"69"},{"size":1421,"mtime":1626711156795,"results":"90","hashOfConfig":"69"},{"size":13004,"mtime":1626713880173,"results":"91","hashOfConfig":"69"},{"size":1116,"mtime":1626711156757,"results":"92","hashOfConfig":"69"},{"size":4764,"mtime":1626711156831,"results":"93","hashOfConfig":"69"},{"size":747,"mtime":1627025044309,"results":"94","hashOfConfig":"69"},{"size":2995,"mtime":1627026049828,"results":"95","hashOfConfig":"69"},{"size":3522,"mtime":1626711156787,"results":"96","hashOfConfig":"69"},{"size":2843,"mtime":1626711156798,"results":"97","hashOfConfig":"69"},{"size":2063,"mtime":1626711156450,"results":"98","hashOfConfig":"69"},{"size":5956,"mtime":1626861335902,"results":"99","hashOfConfig":"69"},{"size":4104,"mtime":1626948456694,"results":"100","hashOfConfig":"69"},{"size":7218,"mtime":1627025597665,"results":"101","hashOfConfig":"69"},{"size":23510,"mtime":1626948455804,"results":"102","hashOfConfig":"69"},{"size":9170,"mtime":1627026049816,"results":"103","hashOfConfig":"69"},{"size":145,"mtime":1626711156836,"results":"104","hashOfConfig":"69"},{"size":3874,"mtime":1626711156732,"results":"105","hashOfConfig":"69"},{"size":1003,"mtime":1623083693138,"results":"106","hashOfConfig":"69"},{"size":9799,"mtime":1626948457593,"results":"107","hashOfConfig":"69"},{"size":201,"mtime":1626711156769,"results":"108","hashOfConfig":"69"},{"size":712,"mtime":1627026049810,"results":"109","hashOfConfig":"69"},{"size":17483,"mtime":1627026049811,"results":"110","hashOfConfig":"69"},{"size":5523,"mtime":1627025935667,"results":"111","hashOfConfig":"69"},{"size":611,"mtime":1626711156712,"results":"112","hashOfConfig":"69"},{"size":882,"mtime":1626711156718,"results":"113","hashOfConfig":"69"},{"size":1469,"mtime":1626711156715,"results":"114","hashOfConfig":"69"},{"size":5228,"mtime":1626711156753,"results":"115","hashOfConfig":"69"},{"size":2152,"mtime":1626711156448,"results":"116","hashOfConfig":"69"},{"size":13067,"mtime":1626711156777,"results":"117","hashOfConfig":"69"},{"size":1700,"mtime":1626711156724,"results":"118","hashOfConfig":"69"},{"size":951,"mtime":1626711156705,"results":"119","hashOfConfig":"69"},{"size":2034,"mtime":1626711156708,"results":"120","hashOfConfig":"69"},{"size":5091,"mtime":1626711156730,"results":"121","hashOfConfig":"69"},{"size":318,"mtime":1626711156706,"results":"122","hashOfConfig":"69"},{"size":4781,"mtime":1626711156756,"results":"123","hashOfConfig":"69"},{"size":417,"mtime":1623083693175,"results":"124","hashOfConfig":"69"},{"size":631,"mtime":1623083693140,"results":"125","hashOfConfig":"69"},{"size":1609,"mtime":1626711156721,"results":"126","hashOfConfig":"69"},{"size":2405,"mtime":1626948314946,"results":"127","hashOfConfig":"69"},{"size":2043,"mtime":1626711156722,"results":"128","hashOfConfig":"69"},{"size":313,"mtime":1626711156772,"results":"129","hashOfConfig":"69"},{"size":2304,"mtime":1618587940562,"results":"130","hashOfConfig":"69"},{"size":1281,"mtime":1627026049813,"results":"131","hashOfConfig":"69"},{"size":346,"mtime":1626711156833,"results":"132","hashOfConfig":"69"},{"size":325,"mtime":1627024877984,"results":"133","hashOfConfig":"69"},{"size":10992,"mtime":1627026049857,"results":"134","hashOfConfig":"69"},{"size":4670,"mtime":1627026049819,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bxa3pn",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"142"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"142"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"142"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"142"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"142"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"142"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"142"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\index.js",["295"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\App.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Session.jsx",[],["296","297"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\UserRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\GoogleAuthRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\AuthRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\HomeRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\FacebookAuthRoute.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\Context.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\nearby.jsx",["298"],"import { useContext, useEffect } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport PostCard from \"../components/PostCard/index\";\r\nimport InfiniteScroll from \"../components/InfiniteScroll\";\r\n\r\nimport { GET_POSTS_BASED_ON_NEAREST_LOC } from \"../GraphQL/Queries\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nconst NearbyPost = (props) => {\r\n  const { user } = useContext(AuthContext)\r\n  const lat = JSON.parse(localStorage.location).lat;\r\n  const lng = JSON.parse(localStorage.location).lng;\r\n\r\n  const { data, loading: loadingPosts } = useQuery(\r\n    GET_POSTS_BASED_ON_NEAREST_LOC,\r\n    {\r\n      variables: { lat: lat.toString(), lng: lng.toString() },\r\n    }\r\n  );\r\n\r\n  const posts = get(data, \"getPostBasedOnNearestLoc\") || [];\r\n\r\n  if (loadingPosts) return <div>loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <InfiniteScroll isLoading={loadingPosts}>\r\n        {!posts\r\n          ? null\r\n          : posts.map((post, key) => {\r\n              return user &&\r\n                post.muted.find((mute) => mute.owner === user.username) ? (\r\n                <div key={`posts${post.id} ${key}`}></div>\r\n              ) : (\r\n                <div key={`posts${post.id} ${key}`}>\r\n                  <PostCard post={post} loading={loadingPosts} />\r\n                </div>\r\n              );\r\n            })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearbyPost;\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\register.jsx",["299"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\registerFacebook.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\popular.jsx",["300","301","302"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_POPULAR_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\nimport SidebarMobile from '../components/SidebarMobile'\r\nimport NotificationMobile from '../components/NotificationMobile'\r\n\r\nimport { getSession } from '../util/Session';\r\n\r\n\r\nfunction Popular() {\r\n    const _isMounted = useRef(false);\r\n    const [burger, setBurger] = useState({\r\n        toggle : false\r\n    })\r\n    const [notif, setNotif] = useState({\r\n        toggle : false\r\n    })\r\n\r\n    const { posts, setPosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const { location } = getSession();\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POPULAR_POSTS);\r\n\r\n    const handleBurger = () => {\r\n        setBurger(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    const handleNotif = () => {\r\n        setNotif(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n\r\n            getPosts({ variables: loc });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (data  && !_isMounted.current) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            setPosts(data.getPopularPosts)\r\n\r\n            _isMounted.current = true\r\n            // set did mount react\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar toggleOpen={handleBurger} toggleOpenNotif={handleNotif} />\r\n            <NotificationMobile show={notif.toggle} />\r\n            <SidebarMobile show={burger.toggle} />\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {!posts ? null\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`} style={key == 0 ? { marginTop: 16 } : { marginTop: 0 }}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popular","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\mutedPosts.jsx",["303","304","305","306","307","308"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_MUTED_POSTS, GET_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport Radius from '../assets/Radius.jpg'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nfunction MutedPost() {\r\n    const { data } = useQuery(GET_MUTED_POSTS);\r\n\r\n    const _isMounted = useRef(false);\r\n    const { mutedPost, setMutedPost, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const path = useHistory().location.pathname\r\n\r\n    const { setPathname } = useContext(AuthContext)\r\n  \r\n      useEffect(() => {\r\n          setPathname(path)\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setMutedPost(data.mutedPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!mutedPost || mutedPost.length < 1 ? (\r\n                    <div className=\"centeringButton\">\r\n                        <img src={Radius} style={{ width: 300}} />\r\n                        <h4 style={{textAlign: 'center'}}>Here you can mute a post u dont like</h4>\r\n                        <h4 style={{textAlign: 'center'}}>and unmute to see it again</h4>\r\n                    </div>\r\n                )\r\n                    : mutedPost.map((post, key) => {\r\n                        return (\r\n                                <div key={`posts${post.id} ${key}`} style={key == 0 ? { marginTop: 40 }: { marginTop: 0 }}>\r\n                                <PostCard post={post} type=\"muted_posts\" loading={loading} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>) : <p className='centeringButton'>test</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MutedPost","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\subscribePosts.jsx",["309","310","311","312"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_SUBSCRIBED_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\nimport SkeletonLoading from '../components/SkeletonLoading'\r\nimport Radius from '../assets/Radius.jpg'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nfunction SubscribePosts() {\r\n\r\n    const path = useHistory().location.pathname\r\n\r\n    const { setPathname } = useContext(AuthContext)\r\n  \r\n      useEffect(() => {\r\n          setPathname(path)\r\n      }, [])\r\n\r\n    const { data } = useQuery(GET_SUBSCRIBED_POSTS, {\r\n        fetchPolicy: \"network-only\"\r\n      });\r\n\r\n    const _isMounted = useRef(false);\r\n    const { subscribePosts, setSubscribePosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setSubscribePosts(data.getSubscribePosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!subscribePosts || !subscribePosts.length ? (\r\n                <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>Subcribe to a Post that goes fire</h4>\r\n                <h4 style={{textAlign: 'center'}}>So you will get an Update on Notification</h4>\r\n                <h4 style={{textAlign: 'center'}}>and never miss what's happening</h4>\r\n            </div>\r\n                )\r\n                    : subscribePosts.map((post, key) => (\r\n                        <div key={`posts subscribe ${key}`} style={key == 0 ? { marginTop: 40 }: { marginTop: 0 }}>\r\n                        <PostCard post={post} type=\"subscribe_posts\" loading={loading} />\r\n                    </div>\r\n                ))}\r\n            </div>) : <SkeletonLoading />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubscribePosts","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\room.jsx",["313","314","315","316"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_ROOM_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\n\r\nfunction Room(props) {\r\n    const history = useHistory().location.pathname\r\n\r\n    const { setPathname } = useContext(AuthContext)\r\n  \r\n      useEffect(() => {\r\n          setPathname(history)\r\n      }, [history])\r\n\r\n    const room = props.match.path\r\n    const _isMounted = useRef(false);\r\n    const { room_1, setRoom, room_2, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_ROOM_POSTS, {\r\n        fetchPolicy: \"network-only\",\r\n      });\r\n    \r\n    useEffect(() => {\r\n        if (room) {\r\n            getPosts({ variables: { room } });\r\n        }\r\n    }, [room]);\r\n\r\n    useEffect(() => {\r\n        if (data  && !_isMounted.current) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            setRoom(data.getRoomPosts)\r\n\r\n            if(room_1.length && room_2.length){\r\n                _isMounted.current = true\r\n            }\r\n            // set did mount react\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {room === \"/Insvire E-Sport\" ? (user ? ( !room_1 ? null\r\n                    : room_1.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })) : null) : (user ? ( !room_2 ? null\r\n                        : room_2.map((post, key) => {\r\n                            const { muted, id } = post;\r\n                            const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                            \r\n                            return (\r\n                                <div key={`posts${id} ${key}`}>\r\n                                    {!isMuted && <PostCard post={post} loading={loading} />}\r\n                                </div>\r\n                            )\r\n                        })) : null)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Settings.jsx",["317","318","319","320","321","322"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\map\\index.jsx",["323","324","325","326","327","328","329","330","331","332"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Slider } from 'antd'\r\nimport {\r\n    GoogleMap,\r\n    useLoadScript,\r\n    Marker,\r\n    Circle\r\n} from '@react-google-maps/api'\r\nimport { Button } from 'antd';\r\nimport { AimOutlined, LeftOutlined } from '@ant-design/icons';\r\n\r\nimport { getRangeSearch } from '../../util/Session';\r\n\r\n// Constant\r\nimport { LS_LOCATION, R_SEARCH } from '../../context/constant'\r\nimport { MAP_API_KEY } from '../../util/ConfigMap';\r\n\r\n// Styles\r\nimport mapStyle from '../../util/style/mapstyle'\r\nimport './style.css';\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: '70vh'\r\n}\r\nconst options = {\r\n  styles: mapStyle,\r\n  disableDefaultUI: true,\r\n  zoomControl: true\r\n}\r\n\r\n\r\nconst sliderValidator = () => {\r\n\r\n  if ( !localStorage.getItem('rng') ) {\r\n    return  0\r\n  }\r\n    if ( localStorage.getItem('rng') == 1 ) {\r\n    return  0\r\n  }\r\n   if ( localStorage.getItem('rng') == 5 ) {\r\n      return 33\r\n  }\r\n   if ( localStorage.getItem('rng') == 10 ) {\r\n    return  66\r\n  }\r\n  if ( localStorage.getItem('rng') == 15 ) {\r\n    return 100\r\n  }\r\n}\r\n// console.log(sliderValidator());\r\n\r\nconst MapHeader = props => {\r\n  \r\n  const { onSetCurrentLoc, onBack } = props;\r\n\r\n  return (\r\n    <div className=\"header-map\">\r\n      <LeftOutlined\r\n        onClick={onBack}\r\n        className=\"header-map__navigate-left\"\r\n      />\r\n      <div className=\"header-map__title\">Change Location</div>\r\n      <AimOutlined\r\n        onClick={onSetCurrentLoc}\r\n        className=\"header-map__navigate-right\"\r\n      />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nconst Map = () => {\r\n  \r\n  const currentPosition = localStorage.location && JSON.parse(localStorage.location)\r\n  \r\n  const [position, setPosition] = useState(currentPosition);\r\n  const history = useHistory();\r\n  \r\n  // Hooks Map\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: MAP_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [radius, setRadius] = useState(1000)\r\n\r\n  const marks = {\r\n    0: \"1km\",\r\n    33: \"5km\",\r\n    66: \"10km\",\r\n    100: \"15km\"\r\n  }\r\n\r\n  const handleBackPage = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const setCurrentLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const location = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n\r\n      localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n      setPosition(location);\r\n    })\r\n  }\r\n\r\n  const oSaveRangePosts = () => {\r\n    localStorage.setItem(R_SEARCH, radius / 1000);\r\n    history.push(\"/\");\r\n  }\r\n    \r\n  const onChangeSlider = (value) => {\r\n    let range = 1000\r\n    if (value == 0) {\r\n      range = 1000\r\n    }  if (value == 33) {\r\n      range = 5000\r\n    }  if (value ==66) {\r\n      range = 10000\r\n    }  if (value == 100) {\r\n      range = 15000\r\n    }\r\n\r\n    setRadius(range);\r\n  }\r\n\r\n  if (loadError) return 'Error loading page'\r\n  if (!isLoaded) return 'Loading Maps'\r\n\r\n  return (\r\n      <div>\r\n        <MapHeader\r\n          onSetCurrentLoc={setCurrentLocation}\r\n          onBack={handleBackPage}\r\n        />\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={radius >= 15000 ? 11 : 15}\r\n          center={position}\r\n          options={options}>\r\n          <Marker \r\n            position={position}\r\n            icon={{\r\n                url: 'https://firebasestorage.googleapis.com/v0/b/insvire-curious-app12.appspot.com/o/mapRadius%2Fpin-figma.png?alt=media&token=3d842f6c-3338-486c-8605-4940e05b96b6',\r\n                scaledSize: new window.google.maps.Size(15, 18)\r\n          }}/>\r\n          <Circle \r\n            center={position}\r\n            radius={radius}\r\n            options={{\r\n              fillColor: \"#e8e2d8\",\r\n              strokeColor: '#f6c059',\r\n              strokeWeight: 1\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n        <Slider\r\n         style={{margin:\"20px 40px 20px 40px\"}} \r\n         marks={marks} \r\n         step={null} \r\n         defaultValue={sliderValidator()} \r\n         onChange={onChangeSlider} tooltipVisible={false}/>\r\n        <div className=\"footer-map\">\r\n          <Button\r\n            onClick={oSaveRangePosts}\r\n            className=\"footer-map__btn-confirm btn-curious-colors\"\r\n            type=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Map;","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\search\\index.jsx",["333","334","335","336","337"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\login\\index.jsx",["338"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport '../reset-password/style.css';\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const context = useContext(AuthContext)\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [login, { loading }] = useMutation(LOGIN_USER, {\r\n      update(_, { data: { login } }) {\r\n          \r\n          context.login(login)\r\n          props.history.push('/')\r\n      },\r\n      onError(err) {\r\n          setErrors(err.message)\r\n      }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n      const { username, password } = values\r\n\r\n      login({ variables: { username, password } })\r\n  };\r\n\r\n  const onCloseErr = (e) => {\r\n      console.log(e, 'I was closed.');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n      </Link>\r\n      <div className=\"landing-card\">\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Sign in</h1>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your email or username!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input \r\n               style={{width:\"100%\"}}\r\n             placeholder=\"Email / Username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input.Password \r\n            style={{backgroundColor: '#FAFAFF', borderRadius: 10, paddingTop: 0, paddingBottom: 0, width: \"100%\"}}\r\n             placeholder=\"Password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <button className=\"ui  facebook button body-page__btn-send\" type=\"submit\" \r\n              style={{ fontSize: '18px',padding: 0, width:\"100%\" }}>\r\n                {loading ? (<LoadingOutlined />): (\"Sign in\")} \r\n              </button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Link to='/resetPassword'>\r\n            <p style={{ textAlign: 'center' }}>Forgot Password?</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <p style={{ textAlign: 'center', marginTop: 30, fontSize: 14 }}>Don't have an account yet? <Link to=\"/register\" style={{ fontWeight: 'bold' }}>Sign Up</Link> now</p>\r\n      {Object.keys(errors).length > 0 && (\r\n        <Alert\r\n          message={errors}\r\n          type=\"error\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\GoogleRegs\\registerGoogle.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\grid\\grid.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\detailPost.jsx",["339","340","341","342","343","344","345","346","347","348"],"//GQL\r\nimport moment from \"moment\";\r\nimport Geocode from \"react-geocode\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { CREATE_COMMENT } from \"../../GraphQL/Mutations\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Comments from './comments'\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { get } from \"lodash\";\r\n\r\nimport '../../components/PostCard/style.css';\r\n\r\n//antd\r\nimport {\r\n  Skeleton,\r\n  List,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  Form,\r\n} from \"antd\";\r\n\r\n//component\r\nimport Pin from \"../../assets/pin-svg-25px.svg\";\r\nimport LikeButton from \"../../components/Buttons/LikeButton/index\";\r\nimport CommentButton from \"../../components/Buttons/CommentButton/index\";\r\nimport RepostButton from \"../../components/Buttons/RepostButton/index\";\r\nimport { EllipsisOutlined, PlusOutlined,  LoadingOutlined, MessageOutlined } from \"@ant-design/icons\";\r\nimport Photo from \"../../components/Photo\";\r\nimport PostNavBar from \"../../components/PostNavBar\";\r\n\r\n// Query\r\nimport { GET_POST } from \"../../GraphQL/Queries\";\r\nimport { PostContext } from \"../../context/posts\";\r\n\r\n// Init Firebase\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { MAP_API_KEY } from \"../../util/ConfigMap\";\r\nconst  storage = firebase.storage()\r\n\r\n//location\r\nGeocode.setApiKey(MAP_API_KEY);\r\nGeocode.setLanguage(\"id\");\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default function SinglePost(props) {\r\n  const _isMounted = useRef(false)\r\n  const { post, setPost, loading, loadingData, setComment } = useContext(PostContext);\r\n  const { user } = useContext(AuthContext)\r\n  const [address, setAddress] = useState(\"\");\r\n  const [repostAddress, setRepostAddress] = useState(\"\");\r\n  const [reply, setReply] = useState({username: null, id: null});\r\n  const [form] = Form.useForm()\r\n  const [state, setState] = useState({\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    fileList: []\r\n  })\r\n  const { previewVisible, previewImage, fileList, previewTitle } = state;\r\n\r\n  // upload photo comment /////////////////////////////\r\n\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => {\r\n    const newFiles = fileList.map(file => ({ ...file, status: 'done'}))\r\n    setState({\r\n      ...state, \r\n      fileList: newFiles\r\n    });\r\n  };\r\n  \r\n  const id = props.match.params.id;\r\n  const room = props.match.params.room === \"post\" ? null : props.match.params.room\r\n\r\n  const [getPost, { data }] = useLazyQuery(GET_POST ,{\r\n    fetchPolicy: \"network-only\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getPost({ variables: { id, room } });\r\n    }\r\n  }, [id]);\r\n\r\n  //input form\r\n\r\n  useEffect(() => {\r\n    if (!_isMounted.current && data) {\r\n      if (!data) {\r\n        loadingData()\r\n\r\n        return;\r\n      }\r\n\r\n      const post = data.getPost\r\n      setPost(post);\r\n\r\n      Geocode.fromLatLng(post.location.lat, post.location.lng).then(\r\n        (response) => {\r\n          const address = response.results[0].address_components[1].short_name;\r\n          setAddress(address);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n\r\n      // set did mount react\r\n      _isMounted.current = true;\r\n\r\n      return;\r\n    }\r\n  }, [data, _isMounted]);\r\n\r\n  //repost\r\n  \r\n  const repost = get(post, \"repost\") || {};\r\n  const isRepost = get(repost, \"id\") || \"\";\r\n\r\n  useEffect(() => {\r\n      if (isRepost) {\r\n        const { location } = repost;\r\n        Geocode.fromLatLng(location.lat, location.lng).then(\r\n          (response) => {\r\n            const address =\r\n              response.results[0].address_components[1].short_name;\r\n            setRepostAddress(address);\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      }\r\n  }, [post, isRepost]);\r\n\r\n\r\n  const [createComment, {loading : loadingCreate}] = useMutation(CREATE_COMMENT, {\r\n    onError(err) {\r\n      console.log(err.message);\r\n    },update(_, { data: { createComment: commentData } }){\r\n\r\n      setComment(commentData)\r\n  },\r\n  });\r\n\r\n  const onFinish = async value => {\r\n    const { comment } = value;\r\n    const newComment = comment ? comment.substring(comment.indexOf(':')+1) : ''\r\n    const finalComment = newComment == undefined ? comment : newComment\r\n    \r\n    const isReply = form.getFieldValue([\"comment\"]).includes(reply.username && reply.id)\r\n\r\n    if(!isReply){\r\n      setReply({username: null, id: null})\r\n    }\r\n    let uploaded = [];\r\n    ////////////////fungsi upload///////////////////\r\n    if (fileList.length) {\r\n      uploaded = await Promise.all(fileList.map(async (elem) => {\r\n        const uploadTask = storage.ref(`images/${elem.originFileObj.name}`).put(elem.originFileObj)\r\n  \r\n        const url = await new Promise((resolve, reject) => {\r\n          uploadTask.on('state_changed',\r\n            () => {},\r\n            error => {\r\n              fileList.push({ ...elem, status: 'error' })\r\n              reject()\r\n            },\r\n            async () => {\r\n              const downloadUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n  \r\n              resolve(downloadUrl);\r\n            }\r\n          )\r\n        })\r\n  \r\n        return url\r\n      }));\r\n      \r\n      setState({ ...state, uploaded, fileList, isFinishUpload: true, text: value.text });\r\n      createComment({ variables: { text: finalComment, id: id, reply: reply, photo: uploaded[0], room: post.room } });\r\n      setState({...state, fileList: []})\r\n      form.resetFields()\r\n      return;\r\n    }\r\n\r\n\r\n    setState({ ...state, uploaded: [], isFinishUpload: true, text: value.text})\r\n    createComment({ variables: { text: finalComment, id: id, reply: reply, photo: '' , room: post.room } });\r\n    form.resetFields()\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <PostNavBar />\r\n    <List itemLayout=\"vertical\" size=\"large\" style={{ background: 'white', margin: 10, borderRadius: 5}}>\r\n     {post ? (\r\n       <div>\r\n          <List.Item\r\n        key={post.id || ''}\r\n        actions={\r\n          !loading && [\r\n            <>\r\n              <div className=\"action-post\">\r\n                <div className=\"action-post__item\">\r\n                  <LikeButton\r\n                    likeCount={post.likeCount}\r\n                    likes={post.likes}\r\n                    id={post.id}\r\n                    room={post.room}\r\n                    type=\"detail_post\"\r\n                  />\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <Link to={`/post/${post.id}`}>\r\n\r\n                  <CommentButton commentCount={post.commentCount} icon={<MessageOutlined />} />\r\n\r\n                  </Link>\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <RepostButton idPost={post.id} room={post.room} repostCount={post.repostCount} />\r\n                </div>\r\n              </div>\r\n            </>,\r\n          ]\r\n        }\r\n      >\r\n        <Skeleton loading={loading} active avatar>\r\n          <List.Item.Meta\r\n            title={\r\n              <div>\r\n                <Row>\r\n                  <Col span={18}>\r\n                    <img src={Pin} style={{ width: 20, position: \"center\" }} />\r\n                    {address}\r\n                  </Col>\r\n                  <Col span={6} style={{ textAlign: \"right\" }}>\r\n                    <Dropdown\r\n                      overlay={\r\n                        <Menu>\r\n                          <Menu.Item key=\"0\">Subscribe</Menu.Item>\r\n                          <Menu.Item key=\"1\" onClick={(e) => console.log(e)}>\r\n                            Mute\r\n                          </Menu.Item>\r\n                          <Menu.Item key=\"3\">Report</Menu.Item>\r\n                        </Menu>\r\n                      }\r\n                      trigger={[\"click\"]}\r\n                      placement=\"bottomRight\"\r\n                    >\r\n                      <a\r\n                        className=\"ant-dropdown-link\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        <EllipsisOutlined />\r\n                      </a>\r\n                    </Dropdown>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            }\r\n            description={moment(post.createdAt).fromNow()}\r\n          />\r\n          {isRepost && (\r\n          <Card\r\n            bodyStyle={{ padding: \"10px 12px\" }}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              borderRadius: 10,\r\n              backgroundColor: \"#f5f5f5\",\r\n              borderColor: \"#ededed\",\r\n              padding: 0,\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              <p className=\"ic-location-small\" style={{ margin: 0 }} />\r\n              <div style={{ fontWeight: 600, paddingLeft: 10 }}>\r\n                {repostAddress}\r\n              </div>\r\n            </div>\r\n            <span style={{ fontSize: 12 }}>\r\n              {moment(repost.createdAt).fromNow()}\r\n            </span>\r\n            <Photo photo={repost.media} />\r\n            \r\n            <div style={{ marginTop: 5 }}>{repost.text}</div>\r\n          </Card>\r\n        )}\r\n          {post.text}\r\n          <Photo photo={post.media} />\r\n\r\n        </Skeleton>\r\n      </List.Item>\r\n      {post && post.comments && post.comments.length == 0 ? (\r\n        null) :\r\n         <Comments post={post} loading={loading} user={user} setReply={setReply} form={form} />}\r\n      <Form\r\n       form={form}\r\n        style={{ paddingBottom: -20, }}\r\n        name=\"basic\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinish}\r\n      >\r\n        \r\n        {fileList.length > 0 && (\r\n          <div style={{backgroundColor: \"white\"}}>\r\n          <div style={{height:120, borderTopRightRadius: 30, borderTopLeftRadius: 30, backgroundColor: \"white\", padding: 10}}>\r\n            <Form.Item name=\"foto\" style={{ marginBottom: 0 }} >\r\n              <div className=\"centeringButton\" style={{ marginTop: -38}}>\r\n              <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                accept=\"video/*, image/*\"\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n              >\r\n              </Upload>\r\n              </div>\r\n            </Form.Item>\r\n            </div>\r\n          </div>\r\n          \r\n          )}\r\n        <div\r\n         className=\"sticky-input__container\" // clas hanya aktif di mobile menggunakan media query\r\n        >\r\n              <Form.Item name=\"upload\"  style={{marginLeft:5}}>\r\n                <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                fileList={fileList}\r\n                accept=\"video/*, image/*\"\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n                showUploadList={false}\r\n                >\r\n                  <Button\r\n                    icon={<PlusOutlined style={{ color: \"#7f57ff\" }} />}\r\n                  />\r\n                </Upload>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"comment\"\r\n                rules={[\r\n                  { required: true, message: \"Isi komennya dulu ya broooo!\" },\r\n                ]}\r\n              >\r\n                <Input\r\n                name=\"comment\"\r\n\r\n                  placeholder=\"Write your comment...\"\r\n                  style={{ borderRadius: 15, width:'100%', height:30, }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item  style={{ marginLeft: 10}}>\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{\r\n                    borderRadius: 20,\r\n                    backgroundColor: \"#7f57ff\",\r\n                    display: \"inline-block\",\r\n                    color: \"white\",\r\n                    \r\n                  }}\r\n                >\r\n                  {loadingCreate ? <LoadingOutlined />: 'Post'}\r\n                  \r\n                </Button>\r\n              </Form.Item>\r\n        </div>\r\n        \r\n      </Form>\r\n       </div>\r\n     ) : (\r\n     <div style={{margin:20}}>\r\n       <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n     </div>\r\n     )}\r\n    </List>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\chat.jsx",["349","350","351"],"import { Button } from 'antd'\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport React from 'react'\r\nimport PlayStore from '../assets/buttonGoogle.png'\r\nimport Radius from '../assets/Radius.jpg'\r\nimport AppBar from './AppBar';\r\nexport default function Chat() {\r\n\r\n    return (\r\n        <div  style={{padding: 20}}>\r\n            <AppBar title=\"Chat\" />\r\n            <div className=\"centeringImage\">\r\n            <img src={Radius} style={{ width: 300}} />\r\n            </div>\r\n                <h4 style={{textAlign: 'center'}}>Download our Mobile Version To Use This Features</h4>\r\n                \r\n                <div className=\"centeringButton\">\r\n                    <a href=\"https://play.google.com/store/apps/details?id=com.ramadhan.curious\">\r\n                    <Button type=\"link\" style={{ width: 150}}> <img src={PlayStore} style={{width: 150}} /></Button>\r\n                    </a>\r\n                </div>\r\n\r\n                <h4 style={{textAlign: 'center', marginTop: 90}}> Click This Button Below To Download Mobile Version to get best experience</h4>\r\n            </div>\r\n    )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\visited\\index.jsx",["352","353","354","355","356","357"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport cn from 'classnames';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport { chunk } from 'lodash';\r\nimport { Row, Card, Skeleton, Space } from 'antd';\r\nimport AppBar from '../../components/AppBar';\r\n\r\n// Assets\r\nimport imageOne from '../../assets/beachone.jfif'\r\n\r\n// Queries\r\nimport { GET_VISITED } from '../../GraphQL/Queries';\r\n\r\nimport { LS_LOCATION } from '../../context/constant'\r\n\r\nimport './style.css';\r\nimport { AuthContext } from '../../context/auth';\r\n\r\nexport default function Visited() {\r\n  const [location, setLocation] = useState([]);\r\n  const history = useHistory();\r\n  const { data, loading } = useQuery(GET_VISITED);\r\n  const visited = data?.getVisited || [];\r\n\r\n  const path = useHistory().location.pathname\r\n\r\n  const { setPathname } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        setPathname(path)\r\n    }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    if (!loading && visited.length) {\r\n      setLocation(chunk(visited, 4));\r\n    }\r\n  }, [loading, visited]);\r\n\r\n  const onChangeLocation = ({ lat, lng }) => {\r\n    const location = { lat, lng };\r\n\r\n    localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n\r\n    setTimeout(() => {\r\n      history.push('/');\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n      <div>\r\n          <AppBar title=\"Visited Places\"/>\r\n\r\n          {loading ? (\r\n            <div className=\"site-card-wrapper\" style={{margin: 10}}>\r\n              <Row style={{margin: 5}}>\r\n                <Space>\r\n                  <Skeleton.Button style={{ width: 187, height: 200, margin: 5 }} active />\r\n                </Space>\r\n                <Space>\r\n                  <Skeleton.Button style={{ width: 187, height: 200, margin: 5 }} active />\r\n                </Space>\r\n              </Row>\r\n            </div>\r\n          ) : (\r\n            <div className=\"site-card-wrapper\">\r\n                {location.length ? location.map(subLoc => {\r\n                  return (\r\n                    <div className=\"gallery-location\">\r\n                        {subLoc.length && subLoc.map((loc, idx) => {\r\n                            const {\r\n                              administrative_area_level_1: province,\r\n                              administrative_area_level_2: city,\r\n                              administrative_area_level_3: districts,\r\n                              createAt,\r\n                              location\r\n                            } = loc;\r\n                            \r\n                            const containerClass = cn({\r\n                              'VisitedClass': true,\r\n                              'gallery-location__item-right': idx == 1,\r\n                              'gallery-location__item-left': idx == 2,\r\n                              'gallery-location__img': idx != 1 || idx != 2\r\n                            });\r\n                            const address = `${province}, ${city}, ${districts}`;\r\n\r\n                            return (\r\n                              <Card \r\n                                className= {containerClass}\r\n                                bordered={false}\r\n                                onClick={() => {\r\n                                  onChangeLocation(location)\r\n                                }}\r\n                                cover={\r\n                                <>\r\n                                  <img alt=\"example\" src={imageOne} style={{width: '100%', height: '100%', borderRadius: 15}} />\r\n                                  <div style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: 10,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    width: 180,\r\n                                  }}>\r\n                                    <h3 style={{\r\n                                      color: \"white\",\r\n                                      fontWeight: \"1200\",\r\n                                      fontSize: 16,\r\n                                      margin: 0,\r\n                                      overflow: \"hidden\",\r\n                                      textOverflow: \"ellipsis\"\r\n                                    }}>{address}</h3> \r\n                                    <p>{moment(createAt).fromNow()}</p>\r\n                                  </div>\r\n                                </>}\r\n                              />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                  )}\r\n                ) : <></>}\r\n            </div>\r\n          )}\r\n      </div>\r\n\r\n  )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\constant.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\reset-password\\index.jsx",["358","359","360"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\confirm-password\\index.jsx",["361","362"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../util/Firebase';\r\n\r\nimport '../reset-password/style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function ReserPassword(props) {\r\n  const context = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const search = history.location.search.substring(1);\r\n  const querystring = search && JSON.parse(\r\n    '{\"' + search.replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}',\r\n    function(key, value) { return key===\"\"?value:decodeURIComponent(value)\r\n  });\r\n\r\n  const { oobCode } = querystring;\r\n\r\n  // Local State\r\n  const [alert, setAlert] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [login] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login } }) {\r\n      \r\n      context.login(login)\r\n      props.history.push('/')\r\n    },\r\n    onError(err) {\r\n      setMessage(err.message)\r\n    }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n    const { password } = values\r\n\r\n    if (!oobCode) {\r\n      setAlert('error');\r\n      setMessage('Verify code is not valid or expired');\r\n    }\r\n\r\n    auth.confirmPasswordReset(oobCode, password).then(\r\n      () => {\r\n        setAlert('success');\r\n        setMessage('Success reset your password, will redirect to login page in a few seconds');\r\n\r\n        setTimeout(() => {\r\n          history.replace('/login');\r\n        }, 1500)\r\n      }\r\n    )\r\n    .catch(error => {\r\n      const { message, code } = error;\r\n      setAlert('error');\r\n\r\n      if (code === 'auth/user-not-found') {\r\n          setMessage('Email atau Username tidak ditemukan');\r\n\r\n          return;\r\n      }\r\n\r\n      setMessage(message);\r\n    })\r\n  };\r\n\r\n  const onCloseErr = () => {\r\n    setAlert('');\r\n    setMessage('');\r\n  };\r\n  \r\n  return (\r\n    <div style={{background: 'white'}}>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n        </Link>\r\n      <div className=\"body-page ui card container\">\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Change Password</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"password\"\r\n                className=\"body-page__textfield\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your new password!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Input your new password\" type=\"password\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" >\r\n                    Send\r\n                </button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </div>\r\n      {!!(message && alert) && (\r\n        <Alert\r\n          message={message}\r\n          type={alert}\r\n          className=\"message-response\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\landing-page\\index.jsx",["363","364"],"import React from 'react'\r\nimport { Col, Row, Button } from 'antd'\r\n\r\nimport LoginFacebook from '../../components/LoginFacebookButton';\r\nimport LoginGoogle from '../../components/LoginGoogleButton';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport BGLanding from '../../assets/bg-landing.png';\r\n\r\nimport './style.css';\r\n\r\nimport { AuthContext } from '../../context/auth'\r\n\r\nexport default function SignIn(props) {\r\n  return (\r\n  <div className=\"landing-container\">\r\n    <div className=\"left-grid__wrapper\">\r\n      <div className=\"landingimage\" />\r\n      <div className=\"curiouslanding\" />\r\n    </div>\r\n    <div className=\"right-grid__wrapper\" >\r\n    <div className=\"content__wrapper\">\r\n      <img src={BGLanding}  className=\"landing-bg__mobile\" />\r\n        <div >\r\n        <h1>Welcome to <br/> Curious! </h1>\r\n        </div>\r\n        <div  style={{maxWidth: 343}}>\r\n          <LoginFacebook props={props} />\r\n          <LoginGoogle props={props} />\r\n        </div>\r\n        <Row  style={{marginTop: 15}}>\r\n              <Col span={12} style={{ paddingRight:7.5}}>\r\n              <Button className=\"landing-sm-button\">\r\n                  <Link to='/register'>\r\n                      Sign Up\r\n                  </Link>\r\n              </Button>\r\n              </Col>\r\n\r\n              <Col span={12} style={{ paddingLeft:7.5}}>\r\n              <Button  className=\"landing-sm-button\">\r\n                  <Link to='login'>\r\n                      Login\r\n                  </Link>\r\n              </Button>\r\n              </Col>\r\n          </Row>\r\n\r\n        <p style={{ marginTop: 10, fontSize: 14, color: \"#352A39\" }}>By signing up, you agree to our <span className=\"terms\">Terms & Privacy Policy</span></p>\r\n        \r\n    </div>\r\n    </div>\r\n     <div style={{backgroundColor: 'white'}}>\r\n     <footer>\r\n    <p className=\"copy-right\" style={{textAlign: 'center'}}>&copy; 2020 Curious</p> \r\n      <Row style={{textAlign: 'center'}}>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Terms of Service\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Privacy Policy\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Cookie Policy\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Ads Info\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n      </footer>\r\n      </div>    \r\n  </div>)\r\n}\r\n\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Queries.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Mutations.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\home.jsx",["365","366","367","368","369","370"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport SkeletonLoading from '../components/SkeletonLoading'\r\n\r\nimport { getSession, getRangeSearch } from '../util/Session';\r\n\r\n//gambar\r\nimport Radius from '../assets/radius.png'\r\nimport SidebarMobile from '../components/SidebarMobile'\r\nimport BackDrop from '../components/BackDrop'\r\nimport NotificationMobile from '../components/NotificationMobile'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport Modal from '../components/Modal'\r\n\r\n\r\nfunction Home() {\r\n    const history = useHistory().location.pathname\r\n    const [burger, setBurger] = useState({\r\n        toggle : false\r\n    })\r\n\r\n    const _isMounted = useRef(false);\r\n    \r\n    const { posts, setPosts, setNavMobileOpen,  loadingData, loading } = useContext(PostContext)\r\n    const { user, setPathname } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        setPathname(history)\r\n    }, [])\r\n\r\n    const handleBurger = () => {\r\n        setBurger(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    const handleNotif = () => {\r\n        setNavMobileOpen(true)\r\n    }\r\n    const handleBackdropClose = () => {\r\n        setBurger({toggle: false})\r\n    }\r\n\r\n    const { location } = getSession();\r\n    const range = getRangeSearch();\r\n\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POSTS, {\r\n        fetchPolicy: \"network-only\"\r\n      });\r\n\r\n    console.log(\"range\", range);\r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n            getPosts({ variables: { ...loc, range: range ? parseFloat(range) : undefined } });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            \r\n            setPosts(data.getPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n\r\n\r\n    return (\r\n        <div style={{height: \"100%\"}}>\r\n            <NavBar toggleOpen={handleBurger} toggleOpenNotif={handleNotif} />\r\n            <NotificationMobile />\r\n            <SidebarMobile show={burger.toggle} />\r\n            \r\n            {burger.toggle ? <BackDrop click={handleBackdropClose} /> : null}\r\n\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {console.log(\"test di 5km\", loadingPosts, user, posts, !_isMounted.current)}\r\n                {!_isMounted.current && <SkeletonLoading />}\r\n                {(_isMounted.current && !loading && !posts.length) ? (\r\n                <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>There is no Nearby post around you</h4>\r\n                <h4 style={{textAlign: 'center'}}>be the first to post in your area!</h4>\r\n                <h4 style={{textAlign: 'center'}}>or change your location to see other post around</h4>\r\n            </div>\r\n                )\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                         return(\r\n                            <div key={`posts${id} ${key}`} style={key == 0 ? { marginTop: 16 }: { marginTop: 0 }} >\r\n                                {!isMuted && <PostCard post={post} type=\"nearby\" loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\auth.jsx",["371","372","373","374"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\context\\posts.jsx",["375","376","377","378","379","380"],"import React, { createContext, useMemo, useReducer } from \"react\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_DATA\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"SET_POSTS\":\r\n      let lastIdPosts = action.payload.length && action.payload[action.payload.length - 1].id;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: action.payload,\r\n        lastIdPosts,\r\n      };\r\n\r\n      case \"SET_NAV\":\r\n\r\n      return {\r\n        ...state,\r\n        active: action.payload,\r\n      };\r\n      case \"SET_NAV_MOBILE_OPEN\":\r\n\r\n      return {\r\n        ...state,\r\n        isNavMobileOpen: action.payload,\r\n      };\r\n    case \"SET_Insvire E-Sport\":\r\n      // let lastIdPosts = action.payload[action.payload.length - 1].id;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_1: action.payload,\r\n        // lastIdPosts,\r\n      };\r\n    case \"SET_BMW Club Bandung\":\r\n      // let lastIdPosts = action.payload[action.payload.length - 1].id;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_2: action.payload,\r\n        // lastIdPosts,\r\n      };\r\n    case \"SET_POST\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        post: action.payload,\r\n      };\r\n    case \"SET_MUTED_POST\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        mutedPost: action.payload,\r\n      };\r\n    case \"SET_LIKED_POSTS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        likedPosts: action.payload,\r\n      };\r\n    case \"SET_SUBSCRIBE_POSTS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        subscribePosts: action.payload,\r\n      };\r\n    case \"MORE_POSTS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: [...state.posts, ...action.payload],\r\n        isMorePost: action.payload.length === 3,\r\n        lastIdPosts: state.posts[state.posts.length - 1].id,\r\n      };\r\n    case \"CREATE_POST_ROOM_1\":\r\n      const before = cloneDeep(state.posts) || [];\r\n      const after = [action.payload, ...before];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_1: after,\r\n      };\r\n    case \"CREATE_POST_ROOM_2\":\r\n      const first = cloneDeep(state.posts) || [];\r\n      const second = [action.payload, ...first];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_2: second,\r\n      };\r\n    case \"CREATE_POST\":\r\n      const oldPosts = cloneDeep(state.posts) || [];\r\n      const posts = [action.payload, ...oldPosts];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts,\r\n      };\r\n    case \"DELETE_POST\":\r\n      const deleteId = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== deleteId),\r\n      };\r\n    case \"DELETE_POST_ROOM_1\":\r\n      const id = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.filter((post) => post.id !== id),\r\n      };\r\n    case \"DELETE_POST_ROOM_2\":\r\n      const idDelete = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.filter((post) => post.id !== idDelete),\r\n      };\r\n    case \"SET_COMMENT\":\r\n      // const { payload } = action;\r\n      // const hasReply = payload.reply && payload.reply.id;\r\n\r\n      // if (hasReply) {\r\n      //   const match = state.post.comments.findIndex(\r\n      //     (itm) => itm.id == payload.reply.id\r\n      //   );\r\n\r\n      //   if (!match) {\r\n      //     if (state.post.comments.length > 1) {\r\n      //       const recursive = (list) => {\r\n      //         return list.map((itm) => {\r\n      //           if (itm.id === payload.reply.id) {\r\n  \r\n      //             return { ...itm, replyList: itm.replyList.concat(payload) };\r\n  \r\n      //           } else {\r\n      //             if (!itm.replyList) return itm;\r\n  \r\n      //             return recursive(itm.replyList);\r\n      //           }\r\n      //         });\r\n      //       };\r\n  \r\n      //       const newComments = recursive(state.post.comments);\r\n  \r\n      //       return {\r\n      //         ...state,\r\n      //         post: {\r\n      //           ...state.post,\r\n      //           comments: newComments,\r\n      //           commentsCount: state.post.comments + 1,\r\n      //         },\r\n      //       };\r\n      //     }\r\n\r\n      //     if (state.post.comments.length === 1) {\r\n      //       const newComments = state.post.comments;\r\n      //       newComments[0].replyList = [action.payload];\r\n\r\n      //       return {\r\n      //         ...state,\r\n      //         post: {\r\n      //           ...state.post,\r\n      //           comments: newComments,\r\n      //           commentsCount: state.post.comments + 1,\r\n      //         },\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // }\r\n\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: [...state.post.comments, action.payload],\r\n          commentsCount: state.post.comments + 1,\r\n        },\r\n      };\r\n    case \"DELETE_COMMENT\":\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment.id !== action.payload.id\r\n          ),\r\n        },\r\n      };\r\n    case \"LIKE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_SUBSCRIBE\":\r\n      return {\r\n        ...state,\r\n        subscribePosts: state.subscribePosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n      case \"SET_MODAL\":\r\n        return {\r\n          ...state,\r\n          isModalActive: action.payload\r\n        }\r\n    case \"LIKE_MUTED\":\r\n      return {\r\n        ...state,\r\n        mutedPost: state.mutedPost.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_LIKED\":\r\n      return {\r\n        ...state,\r\n        likedPosts: state.likedPosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_DETAIL\":\r\n      return {\r\n        ...state,\r\n        post: state.post && {\r\n          ...state.post,\r\n          likes: state.post.likes && [...state.post.likes, action.payload.data],\r\n          likeCount: state.post.likeCount + 1,\r\n        },\r\n      };\r\n    case \"UNLIKE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_SUBSCRIBE\":\r\n      return {\r\n        ...state,\r\n        subscribePosts: state.subscribePosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_MUTED\":\r\n      return {\r\n        ...state,\r\n        mutedPost: state.mutedPost.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_LIKED\":\r\n      return {\r\n        ...state,\r\n        likedPosts: state.likedPosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_DETAIL\":\r\n      return {\r\n        ...state,\r\n        post: state.post && {\r\n          ...state.post,\r\n          likes: state.post.likes.filter(\r\n            (like) => like.owner !== action.payload.data.owner\r\n          ),\r\n          likeCount: state.post.likeCount - 1,\r\n        },\r\n      };\r\n    case \"LIKE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"SUBCRIBE_POST\":\r\n      const { subscribeData, post } = action.payload;\r\n\r\n      const subscribePosts = [...state.subscribePosts, post];\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === subscribeData.postId) {\r\n            const update = {\r\n              ...post,\r\n              subscribe: [...post.subscribe, subscribeData],\r\n            };\r\n            return update;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n        subscribePosts,\r\n      };\r\n    case \"UNSUBCRIBE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.subscribeData.postId) {\r\n            const update = {\r\n              ...post,\r\n              subscribe: post.subscribe.filter(\r\n                (data) => data.owner !== action.payload.subscribeData.owner\r\n              ),\r\n            };\r\n            return update;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n        subscribePosts: state.subscribePosts.filter(\r\n          (post) => post.id !== action.payload.subscribeData.postId\r\n        ),\r\n      };\r\n    case \"MUTE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatePosts = {\r\n              ...post,\r\n              muted: [...post.muted, action.payload],\r\n            };\r\n            return updatePosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNMUTE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              muted: post.muted.filter(\r\n                (mute) => mute.owner !== action.payload.owner\r\n              ),\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"MUTE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatePosts = {\r\n              ...post,\r\n              muted: [...post.muted, action.payload],\r\n            };\r\n            return updatePosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNMUTE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              muted: post.muted.filter(\r\n                (mute) => mute.owner !== action.payload.owner\r\n              ),\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"MUTE_POST_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatePosts = {\r\n              ...post,\r\n              muted: [...post.muted, action.payload],\r\n            };\r\n            return updatePosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNMUTE_POST_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              muted: post.muted.filter(\r\n                (mute) => mute.owner !== action.payload.owner\r\n              ),\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"OPEN_POST_CARD\":\r\n      const { repost, isOpenNewPost } = action.payload;\r\n      return {\r\n        ...state,\r\n        isOpenNewPost,\r\n        repost,\r\n      };\r\n    default:\r\n      throw new Error(\"Don't understand action\");\r\n  }\r\n};\r\n\r\nexport const PostContext = createContext({\r\n  posts: [],\r\n  room_1: [],\r\n  room_2: [],\r\n  mutedPost: [],\r\n  likedPosts: [],\r\n  subscribePosts: [],\r\n  post: null,\r\n  newPosts: null,\r\n  loading: false,\r\n  lastIdPosts: null,\r\n  isMorePost: true,\r\n  isOpenNewPost: false,\r\n  repost: false,\r\n  active: \"latest\",\r\n  isNavMobileOpen: false,\r\n  setModal: () => {},\r\n  setNavMobileOpen: () => {},\r\n  setRoom: () => {},\r\n  setLikedPosts: () => {},\r\n  setComment: () => {},\r\n  setPost: () => {},\r\n  setNav: () => {},\r\n  setSubscribePosts: () => {},\r\n  setMutedPost: () => {},\r\n  subscribePost: () => {},\r\n  loadingData: () => {},\r\n  setPosts: (posts) => {},\r\n  morePosts: () => {},\r\n  createPost: () => {},\r\n  deletePost: () => {},\r\n  like: () => {},\r\n  mutePost: () => {},\r\n  commentDelete: () => {},\r\n});\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  room_1: [],\r\n  room_2: [],\r\n  active: \"latest\",\r\n  isNavMobileOpen: false,\r\n  isModalActive: false,\r\n  likedPosts: [],\r\n  post: null,\r\n  mutedPost: [],\r\n  isMorePost: true,\r\n  newPosts: null,\r\n  loading: null,\r\n  lastIdPosts: null,\r\n  subscribePosts: [],\r\n};\r\n\r\n\r\nexport const PostProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const {\r\n    isNavMobileOpen,\r\n    isModalActive,\r\n    posts,\r\n    active,\r\n    post,\r\n    loading,\r\n    lastIdPosts,\r\n    isMorePost,\r\n    isOpenNewPost,\r\n    repost,\r\n    mutedPost,\r\n    subscribePosts,\r\n    likedPosts,\r\n    room_1,\r\n    room_2,\r\n  } = state;\r\n\r\n  const loadingData = () => {\r\n    dispatch({ type: \"LOADING_DATA\" });\r\n  };\r\n\r\n  const createPost = (post) => {\r\n    if (post.room) {\r\n      const room = post.room === \"Insvire E-Sport\" ? \"ROOM_1\" : \"ROOM_2\";\r\n\r\n      dispatch({\r\n        type: `CREATE_POST_${room}`,\r\n        payload: post,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"CREATE_POST\",\r\n        payload: post,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setPost = (post) => {\r\n    dispatch({\r\n      type: \"SET_POST\",\r\n      payload: post,\r\n    });\r\n  };\r\n\r\n  const setComment = (data) => {\r\n    dispatch({\r\n      type: \"SET_COMMENT\",\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  const commentDelete = (data) => {\r\n    dispatch({\r\n      type: \"DELETE_COMMENT\",\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const setLikedPosts = (posts) => {\r\n    if (posts.length > 0) {\r\n      dispatch({\r\n        type: \"SET_LIKED_POSTS\",\r\n        payload: posts,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setMutedPost = (posts) => {\r\n    if (posts.length > 0) {\r\n      dispatch({\r\n        type: \"SET_MUTED_POST\",\r\n        payload: posts,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSubscribePosts = (posts) => {\r\n    if (posts.length > 0) {\r\n      dispatch({\r\n        type: \"SET_SUBSCRIBE_POSTS\",\r\n        payload: posts,\r\n      });\r\n    }\r\n  };\r\n\r\n  const subscribePost = (data, post) => {\r\n    const subscribeData = {\r\n      owner: data.owner,\r\n      createdAt: data.createdAt,\r\n      displayName: data.displayName,\r\n      displayImage: data.displayImage,\r\n      colorCode: data.colorCode,\r\n      postId: data.postId,\r\n    };\r\n\r\n    if (data.isSubscribe) {\r\n      dispatch({\r\n        type: \"SUBCRIBE_POST\",\r\n        payload: {\r\n          subscribeData,\r\n          post,\r\n        },\r\n      });\r\n    } else if (!data.isSubscribe) {\r\n      dispatch({\r\n        type: \"UNSUBCRIBE_POST\",\r\n        payload: {\r\n          subscribeData,\r\n          post,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const deletePost = (id, room) => {\r\n    let locationRoom;\r\n\r\n    if (room === \"Insvire E-Sport\") {\r\n      locationRoom = \"ROOM_1\";\r\n    } else if (room === \"BMW Club Bandung\") {\r\n      locationRoom = \"ROOM_2\";\r\n    }\r\n\r\n    dispatch({\r\n      type: !room ? \"DELETE_POST\" : `DELETE_POST_${locationRoom}`,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const setRoom = (posts) => {\r\n    if (posts.length) {\r\n      if (posts[0].room === \"Insvire E-Sport\") {\r\n        dispatch({\r\n          type: `SET_${posts[0].room}`,\r\n          payload: posts,\r\n        });\r\n      } else if (posts[0].room === \"BMW Club Bandung\") {\r\n        dispatch({\r\n          type: `SET_${posts[0].room}`,\r\n          payload: posts,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const setPosts = (posts) => {\r\n      dispatch({\r\n        type: \"SET_POSTS\",\r\n        payload: posts.length === 0 ? [] : posts,\r\n      });\r\n  };\r\n\r\n  const setNav = (active) => {\r\n    dispatch({\r\n      type: \"SET_NAV\",\r\n      payload: active\r\n    })\r\n  }\r\n  const setModal = (isModalActive) => {\r\n    dispatch({\r\n      type: \"SET_MODAL\",\r\n      payload: isModalActive\r\n    })\r\n  }\r\n  const setNavMobileOpen = (isNavMobileOpen) => {\r\n    dispatch({\r\n      type: \"SET_NAV_MOBILE_OPEN\",\r\n      payload: isNavMobileOpen\r\n    })\r\n  }\r\n\r\n  const mutePost = (data, room) => {\r\n    const muteData = {\r\n      owner: data.owner,\r\n      id: data.id,\r\n      createAt: data.createdAt,\r\n      postId: data.postId,\r\n    };\r\n\r\n    let locationRoom;\r\n\r\n    if (room === \"Insvire E-Sport\") {\r\n      locationRoom = \"ROOM_1\";\r\n    } else if (room === \"BMW Club Bandung\") {\r\n      locationRoom = \"ROOM_2\";\r\n    }\r\n\r\n    if (data.mute) {\r\n      dispatch({\r\n        type: room ? `MUTE_POST_${locationRoom}` : \"MUTE_POST\",\r\n        payload: muteData,\r\n      });\r\n    } else if (!data.mute) {\r\n      dispatch({\r\n        type: room ? `UNMUTE_POST_${locationRoom}` : \"UNMUTE_POST\",\r\n        payload: muteData,\r\n      });\r\n    }\r\n  };\r\n\r\n  const morePosts = (posts) => {\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"MORE_POSTS\",\r\n        payload: posts,\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  const toggleOpenNewPost = (repost = false, room = false) => {\r\n    dispatch({\r\n      type: \"OPEN_POST_CARD\",\r\n      payload: {\r\n        isOpenNewPost: !isOpenNewPost,\r\n        repost: repost && {\r\n          repost,\r\n          room,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const like = (likeData, postId, room, type) => {\r\n    const data = {\r\n      id: likeData.id,\r\n      owner: likeData.owner,\r\n      createdAt: likeData.createdAt,\r\n      displayName: likeData.displayName,\r\n      displayImage: likeData.displayImage,\r\n      colorCode: likeData.colorCode,\r\n    };\r\n\r\n    let locationRoom;\r\n    let name;\r\n\r\n    if (room === \"Insvire E-Sport\") {\r\n      locationRoom = \"ROOM_1\";\r\n    } else if (room === \"BMW Club Bandung\") {\r\n      locationRoom = \"ROOM_2\";\r\n    }\r\n\r\n    if (type == \"subscribe_posts\") {\r\n      name = \"LIKE_SUBSCRIBE\";\r\n    } else if (type == \"muted_posts\") {\r\n      name = \"LIKE_MUTED\";\r\n    } else if (type == \"liked_posts\") {\r\n      name = \"LIKE_LIKED\";\r\n    } else if (type == \"nearby\") {\r\n      name = \"LIKE_POST\";\r\n    } else if (type == \"detail_post\") {\r\n      name = \"LIKE_DETAIL\";\r\n    }\r\n\r\n    if (likeData.isLike) {\r\n      dispatch({\r\n        type: room ? `LIKE_POST_${locationRoom}` : name,\r\n        payload: {\r\n          data,\r\n          postId,\r\n        },\r\n      });\r\n\r\n      return;\r\n    } else if (!likeData.isLike) {\r\n      dispatch({\r\n        type: room ? `UNLIKE_POST_${locationRoom}` : `UN${name}`,\r\n        payload: {\r\n          data,\r\n          postId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PostContext.Provider\r\n      value={{\r\n        posts,\r\n        post,\r\n        room_1,\r\n        room_2,\r\n        active,\r\n        isNavMobileOpen,\r\n        isModalActive,\r\n        setModal,\r\n        setPosts,\r\n        setNav,\r\n        setPost,\r\n        setComment,\r\n        loadingData,\r\n        morePosts,\r\n        createPost,\r\n        like,\r\n        deletePost,\r\n        mutePost,\r\n        toggleOpenNewPost,\r\n        setMutedPost,\r\n        setLikedPosts,\r\n        subscribePost,\r\n        setSubscribePosts,\r\n        setRoom,\r\n        commentDelete,\r\n        setNavMobileOpen,\r\n        likedPosts,\r\n        subscribePosts,\r\n        mutedPost,\r\n        loading,\r\n        lastIdPosts,\r\n        isMorePost,\r\n        isOpenNewPost,\r\n        repost,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostCard\\index.jsx",["381","382","383","384","385","386","387"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\ConfigMap.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Photo.jsx",["388","389"],"import React from 'react'\r\n\r\nimport {Image } from \"antd\";\r\n\r\nexport default function Photo({photo}) {\r\n    return (\r\n        <div>\r\n            {photo ? (\r\n          photo.length == 1 ? (\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                borderRadius: 10,\r\n                objectFit: \"cover\",\r\n                maxHeight: 300,\r\n              }}\r\n              src={photo}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n\r\n        {photo ? (\r\n          photo.length == 2 ? (\r\n            <table className=\"row-card-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <Image.PreviewGroup>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={photo[0]}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Image\r\n                        style={{ borderRadius: \"0px 10px 10px 0px\" }}\r\n                        src={photo[1]}\r\n                      />\r\n                    </td>\r\n                  </Image.PreviewGroup>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n{photo ? (\r\n          photo.length >= 3 ? (\r\n            <table className=\"photo-grid-3\">\r\n              <Image.PreviewGroup>\r\n                <tbody>\r\n                  <tr style={{ margin: 0, padding: 0 }}>\r\n                    <td\r\n                      rowspan=\"2\"\r\n                      style={{ width: \"50%\", verticalAlign: \"top\" }}\r\n                    >\r\n                      <Image\r\n                        className=\"pict1-3\"\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={photo[0]}\r\n                      />\r\n                    </td>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        className=\"pict2-3\"\r\n                        style={{ borderRadius: \"0px 10px 0px 0px\" }}\r\n                        src={photo[1]}\r\n                      />\r\n                      <div\r\n                        className=\"text-container\"\r\n                        style={{ marginTop: \"-6px\" }}\r\n                      >\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={\r\n                            photo.length > 3\r\n                              ? {\r\n                                  borderRadius: \"0px 0px 10px 0px\",\r\n                                  filter: \"blur(2px)\",\r\n                                }\r\n                              : { borderRadius: \"0px 0px 10px 0px\" }\r\n                          }\r\n                          src={photo[2]}\r\n                        />\r\n                        <div className=\"text-center\">\r\n                          {photo.length > 3\r\n                            ? \"+\" + (photo.length - 3)\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  {photo.length > 3 ? (\r\n                    <div>\r\n                      <Image\r\n                        className=\"pict3-3\"\r\n                        style={{ display: \"none\" }}\r\n                        src={photo[3]}\r\n                      />\r\n                      {photo.length > 4 ? (\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={{ display: \"none\" }}\r\n                          src={photo[4]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </tbody>\r\n              </Image.PreviewGroup>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n        </div>\r\n    )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\PostNavBar.jsx",["390","391","392","393","394","395","396"],"import { Button, Radio, Tabs } from 'antd';\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function PostNavBar() {\r\nconst [nav, setNav] = useState({value2: \"Latest\"})\r\n//back button\r\nlet history = useHistory();\r\n\r\n\r\n\r\nconst onChange2 = e => {\r\n    setNav({\r\n        value2: e.target.value,\r\n    });\r\n  };\r\n\r\nconst { value2 } = nav;\r\n\r\n    return (\r\n      <StickyContainer>\r\n        <Menu pointing secondary size='massive'>\r\n          <div style={{display: \"inline-block\",marginLeft: 20, padding: \"10px 0\"}} onClick={() => history.goBack()}>\r\n          <ArrowLeftOutlined />\r\n          </div>\r\n          <p style={{padding: \"10px 0\",marginLeft: 20, fontWeight: 'bolder',}}>Post</p>\r\n        </Menu>\r\n      </StickyContainer>\r\n        )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\detailPost\\comments.jsx",["397","398","399","400"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport {\r\n    List,\r\n    Card,\r\n    Row,\r\n    Avatar,\r\n    Col,\r\n    Dropdown,\r\n    Menu,\r\n    Button,\r\n    Image\r\n} from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_COMMENT } from \"../../GraphQL/Mutations\";\r\nimport { PostContext } from '../../context/posts';\r\nimport Photo from '../../components/Photo';\r\nimport './detail-post-style.css'\r\n\r\nexport default function Comments({ post, loading, user, setReply, form }) {\r\n    const [ parentComments, setParentComment ] = useState([])\r\n\r\n    const { commentDelete } = useContext(PostContext)\r\n\r\n    const [deleteComment] = useMutation(DELETE_COMMENT, {\r\n        onError(err) {\r\n            console.log(err.message);\r\n        }, update(_, { data: { deleteComment: commentData } }) {\r\n            \r\n            commentDelete(commentData)\r\n        },\r\n    })\r\n\r\n    //reply func\r\n    const handleReply = (item) => {\r\n        setReply({\r\n            username: item.owner,\r\n            id: item.id\r\n        })\r\n\r\n        form.setFieldsValue({\r\n            comment: `Reply to ${item.displayName}: `\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parentComments = post.comments.filter(comment => !comment.reply.id && !comment.reply.username)\r\n        setParentComment(parentComments)\r\n    }, [post])\r\n    \r\n    console.log(post.comments.filter(data => data.reply.id === data.id));\r\n    return (\r\n        <div>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                dataSource={parentComments || []}\r\n                renderItem={(comment) => (\r\n                    <Card className=\"commentCard\" loading={loading}>\r\n                        <Meta\r\n                            avatar={\r\n                                <div>\r\n                                    {post.comments.filter(data => data.reply.id === comment.id).length != 0 ? <div className=\"replyComment__stick\" />: <div className=\"replyComment__stick-none\" />}\r\n                                    <Avatar\r\n                                        size={50}\r\n                                        style={{\r\n                                            zIndex:3,\r\n                                            backgroundImage: `url(${comment.displayImage})`,\r\n                                            backgroundColor: comment.colorCode,\r\n                                            backgroundSize: 50,\r\n                                        }}\r\n                                    />\r\n                                </div>}\r\n                            title={\r\n                                <Row>\r\n                                    <Col span={12}>\r\n                                        <p style={{ fontWeight: \"bold\" }}>{comment.displayName}</p>\r\n                                    </Col>\r\n                                    <Col span={12} style={{ textAlign: \"right\" }}>\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu>\r\n                                                    {comment.owner === user.username ? (\r\n                                                        <Menu.Item onClick={() => deleteComment({ variables: { postId: post.id, commentId: comment.id, room: post.room } })}>Delete Comment</Menu.Item>\r\n                                                    ) : null}\r\n                                                    <Menu.Item key=\"3\">Report</Menu.Item>\r\n                                                    <Menu.Item key=\"4\">Delete</Menu.Item>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={[\"click\"]}\r\n                                            placement=\"bottomRight\"\r\n                                        >\r\n                                            <a\r\n                                                className=\"ant-dropdown-link\"\r\n                                                onClick={(e) => e.preventDefault()}\r\n                                            >\r\n                                                <EllipsisOutlined />\r\n                                            </a>\r\n                                        </Dropdown>\r\n                                    </Col>\r\n                                </Row>\r\n                            }\r\n                            description={<div>\r\n                                <p style={{ color: \"black\" }}>{comment.text}</p>\r\n                                \r\n                                {comment.photo &&\r\n                                    <div style={{ width: '80%' }}>\r\n                                        <Image className=\"mediaComment\" src={comment.photo}/>\r\n                                    </div>}\r\n\r\n\r\n                        <div className=\"descriptionContent\">\r\n                            <p> {moment(comment.createdAt).fromNow()}\r\n                                <Button type=\"link\" className=\"replyComment__button\" onClick={() => handleReply(comment)}>\r\n\r\n\r\n      \r\n\r\n                                    Reply\r\n                                </Button>\r\n                            </p>\r\n                        </div>\r\n                    </div>}/>\r\n                        \r\n                <div>\r\n                    <List\r\n                        className=\"commentContainerReply\"\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        dataSource={post.comments.filter(data => data.reply.id === comment.id) || []}\r\n                        renderItem={(item, key) => (\r\n                        <Card className=\"commentCard\" loading={loading}>\r\n                            <Meta\r\n                                avatar={\r\n                                    <>\r\n                                    {comment && post.comments.filter(data => data.reply.id === comment.id).length !== key + 1 ? <div className=\"replyComment__stick\" />: <div className=\"replyComment__stick-none\" />}\r\n                                        <Avatar\r\n                                            size={50}\r\n                                            style={{\r\n                                                zIndex:3,\r\n                                                backgroundColor: item.colorCode,\r\n                                                backgroundImage: `url('${item.displayImage}')`,\r\n                                                backgroundSize: 50,\r\n                                                }}/>\r\n                                    </>\r\n                                }\r\n                                title={\r\n                                    <Row>\r\n                                        <Col span={12}>\r\n                                            <p style={{ fontWeight: \"bold\" }}>{item.displayName}</p>\r\n                                        </Col>\r\n                                        <Col span={12} style={{ textAlign: \"right\" }}>\r\n                                            <Dropdown\r\n                                                overlay={\r\n                                                    <Menu>\r\n                                                        {item.owner === user.username &&\r\n                                                    <Menu.Item onClick={() => deleteComment({ variables: { postId: post.id, commentId: item.id, room: post.room } })}>Delete Comment</Menu.Item>}\r\n                                                    <Menu.Item key=\"3\">Report</Menu.Item>\r\n                                                    </Menu>}\r\n                                                trigger={[\"click\"]}\r\n                                                placement=\"bottomRight\">\r\n                                                    <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n                                                        <EllipsisOutlined />\r\n                                                    </a>\r\n                                                        </Dropdown>\r\n                                        </Col>\r\n                                    </Row>\r\n                                            }\r\n                                description={\r\n                                    <div>\r\n                                        <p style={{ color: \"black\" }}>{item.text}</p>    \r\n                                            {item.photo &&\r\n                                                <div style={{ width: '80%' }}>\r\n                                                    <Image className=\"mediaComment\" src={item.photo} />\r\n                                    </div>}\r\n                                    <div className=\"descriptionContent\">\r\n                                        <p> {moment(item.createdAt).fromNow()}\r\n                                        <Button\r\n                                            type=\"link\"\r\n                                            onClick={() => handleReply({ displayName: item.displayName, id: comment.id, username: item.owner })}\r\n                                            className=\"replyComment__button\">\r\n                                        Reply\r\n                                        </Button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>}/>\r\n                        </Card>\r\n                                )}>\r\n                            </List>\r\n                        </div>\r\n                    </Card>\r\n                )}>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Container.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AddPost\\index.jsx",["401","402","403","404","405","406","407","408","409"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Notification\\Notification.jsx",["410","411"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx",["412"],"import React, { useContext, useEffect } from \"react\";\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LIKE_POST } from \"../../../GraphQL/Mutations\";\r\nimport { PostContext } from \"../../../context/posts\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nimport './style.css';\r\n\r\nexport default function LikeButton({ likeCount, id, likes, room, type }) {\r\n  const { like } = useContext(PostContext);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [likePost] = useMutation(LIKE_POST, {\r\n    update(_, { data: { likePost } }) {\r\n      like(likePost, id, room, type);\r\n    },\r\n  });\r\n\r\n  const onLike = () => {\r\n    likePost({ variables: { id, room } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui labeled btn-like\" tabIndex=\"0\">\r\n      <div className=\"btn-like__icon\" >\r\n        <Button\r\n          onClick={onLike}\r\n          shape=\"circle\"\r\n          className=\"likeButton\"\r\n          icon={\r\n            // <HeartOutlined />\r\n            user && likes.find((like) => like.owner === user.username) ? (\r\n              <HeartOutlined style={{ color: \"red\" }} />\r\n            ) : (\r\n              <HeartOutlined />\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"btn-like__wrapper\">\r\n        <div className=\"ui basic label float btn-like__label\">\r\n          <p>{likeCount} likes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Sidebar.jsx",["413","414"],"/* eslint-disable react/display-name, jsx-a11y/click-events-have-key-events */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\n\r\n//css & assets\r\nimport \"../App.css\";\r\nimport Blank from \"../assets/blank.png\";\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\n\r\n//antd\r\nimport { Layout, Menu, List } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LaptopOutlined,\r\n  NotificationOutlined,\r\n  SettingOutlined,\r\n  SearchOutlined,\r\n  StarOutlined,\r\n  AudioMutedOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\n\r\nconst Sidebar = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const handleResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const { user, pathname } = useContext(AuthContext);\r\n\r\n  \r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {/* Sidebar */}\r\n      <div\r\n        className=\"sidebarcoy\"\r\n        style={{\r\n          position: \"fixed\",\r\n          backgroundColor: \"#FAFAFA\",\r\n          zIndex: 102,\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <Sider\r\n          className=\"site-layout-background\"\r\n          width={215}\r\n          style={{ backgroundColor: \"#FAFAFA\" }}\r\n          collapsed={windowWidth <= 1071 ? true : false}\r\n        >\r\n          <div style={{ width: 60, backgroundColor: \"#FAFAFA\" }}>\r\n            <Link to={`/profile/user/${user.id}`}>\r\n              <div\r\n                className=\"profilefoto\"\r\n                style={{ backgroundImage: `url(\"${user.profilePicture? user.profilePicture : Blank}\")`}}\r\n              />\r\n            </Link>\r\n          </div>\r\n          <Link to={`/profile/user/${user.id}`}>\r\n            <h3 style={{backgroundColor: \"#FAFAFA\", marginTop: 15, marginBottom: -1, fontSize: 15 }}>\r\n              {user.username ? user.username : \"My Account\"}\r\n            </h3>\r\n          </Link>\r\n\r\n          <List.Item.Meta\r\n            title={\r\n              <Link to=\"/maps\">\r\n                {\" \"}\r\n                {windowWidth > 993 ? (\r\n                  <img src={Pin} style={{ width: 20, marginTop: -5 }} />\r\n                ) : null}\r\n                \r\n                {address}\r\n              </Link>\r\n            }\r\n          />\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={[\"/\"]}\r\n            selectedKeys={[pathname]}\r\n            defaultOpenKeys={[\"/\"]}\r\n            style={{ height: \"100%\", border: \"none\", backgroundColor: '#FAFAFA' }}\r\n            inlineCollapsed=\"false\"\r\n          >\r\n            <Menu.Divider />\r\n            <Menu.Item key=\"/\" icon={<UserOutlined />}>\r\n              <Link to=\"/\">Nearby</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/search\" icon={<SearchOutlined />}>\r\n              <Link to=\"/search\">Search</Link>\r\n            </Menu.Item>\r\n\r\n            <SubMenu\r\n              key=\"Room\"\r\n              icon={<LaptopOutlined />}\r\n              title=\"Available Room\"\r\n            >\r\n              <Menu.Item key=\"/Insvire E-Sport\" className=\"sidebar-sub\">\r\n                <Link to=\"/Insvire E-Sport\">Insvire E-Sport</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/BMW Club Bandung\" className=\"sidebar-sub\">\r\n                <Link to=\"/BMW Club Bandung\">BMW Club Bandung</Link>\r\n                </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"/visited\" icon={<StarOutlined />}>\r\n              <Link to=\"/visited\">Visited Places</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/subscribePosts\" icon={<NotificationOutlined />}>\r\n              <Link to=\"/subscribePosts\">Subscribed Posts</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/MutedPost\" icon={<AudioMutedOutlined />}>\r\n              <Link to=\"/MutedPost\" >Muted Posts</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"/settings\" icon={<SettingOutlined />}>\r\n              <Link to=\"/settings\">Settings</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        {windowWidth <= 1071 ? null : <div>\r\n          <Link to='/' ><div className=\"curious\" /></Link>\r\n          <p style={{color: '#B7B7B7', fontSize:12, marginTop: 16}}>Terms of Use .  Community <br/> \r\n          Guidelines .  Privacy Policy <br/>\r\n© 2021 Curious</p>\r\n          </div>}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Fragment.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Countries.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginGoogleButton.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\AppBar\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BottomBar\\index.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NotificationMobile.jsx",["415","416","417","418","419"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  READ_ALL_NOTIFICATIONS,\r\n  READ_NOTIFICATION,\r\n} from \"../GraphQL/Mutations\";\r\nimport { Row, Col, Dropdown, Menu } from \"antd\";\r\n\r\nimport { DropIcon } from \"../library/Icon\";\r\nimport { CLEAR_ALL_NOTIF } from \"../GraphQL/Mutations\";\r\nimport NoNotif from \"../assets/NoNotif.jpg\";\r\nimport { PostContext } from \"../context/posts\";\r\n\r\nexport default function NotificationMobile() {\r\n\r\n  const { isNavMobileOpen, setNavMobileOpen } = useContext(PostContext)\r\n  const { notifications, notificationRead, readAllNotificatons } =\r\n    useContext(AuthContext);\r\n  const { clearNotifications } = useContext(AuthContext);\r\n\r\n  const [readNotification] = useMutation(READ_NOTIFICATION, {\r\n    update(_, { data: { readNotification } }) {\r\n      notificationRead(readNotification);\r\n    },\r\n  });\r\n\r\n  const [readNotifications] = useMutation(READ_ALL_NOTIFICATIONS, {\r\n    update(_, { data: { readAllNotification } }) {\r\n      readAllNotificatons(readAllNotification);\r\n    },\r\n  });\r\n\r\n  const [clearNotif] = useMutation(CLEAR_ALL_NOTIF, {\r\n    update(_, { data: { clearAllNotif } }) {\r\n      clearNotifications();\r\n      alert(clearAllNotif);\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <div className={isNavMobileOpen? \"notifmobilecoy open\" : \"notifmobilecoy\"}>\r\n      <div style={{ position: \"absolute\", left: 0, right: 0, width: \"100%\" }}>\r\n        <Card\r\n        >\r\n          <div style={{ margin: -22, height: '100vh' }}>\r\n          <div>\r\n                  <Row>\r\n          <Col span={6}>\r\n            <button className=\"ui inverted basic button\" type=\"text\" onClick={() => setNavMobileOpen(false)}>\r\n              <i className=\"chevron left icon\" style={{ color: 'black' }}></i>\r\n            </button>\r\n          </Col>\r\n          <Col span={12} style={{textAlign: \"center\", justifyContent: 'center', display: 'flex', alignItems: 'center'}}>\r\n            <h4>Notification</h4>\r\n          </Col>\r\n          <Col span={6} style={{textAlign: \"right\"}}>\r\n          <Dropdown\r\n              overlay={\r\n                <Menu>\r\n                  <Menu.Item key=\"0\" onClick={readNotifications}>\r\n                    READ ALL\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"1\" onClick={clearNotif}>\r\n                    CLEAR ALL\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              trigger={[\"click\"]}\r\n              placement=\"bottomRight\"\r\n            >\r\n              <a\r\n                className=\"ant-dropdown-link\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <DropIcon />\r\n              </a>\r\n            </Dropdown>\r\n          </Col>\r\n      </Row>\r\n          </div>\r\n            {(notifications && notifications.length ? (\r\n                notifications.map((notif, key) => {\r\n                  let type = \"\";\r\n                  let text = \"\";\r\n                  switch (notif.type) {\r\n                    case \"LIKE\":\r\n                      type = \"liked\";\r\n                      text = \"iike\";\r\n                      break;\r\n                    case \"REPOST\":\r\n                      type = \"repost\";\r\n                      text = \"repost\";\r\n                      break;\r\n                    case \"COMMENT\":\r\n                      type = \"commented\";\r\n                      text = \"comment\";\r\n                    default:\r\n                      break;\r\n                  }\r\n\r\n                  return (\r\n                    <Link\r\n                      to={`/post/${notif.postId}`}\r\n                      onClick={() =>\r\n                        readNotification({ variables: { id: notif.id } })\r\n                      }\r\n                      name={notif.id}\r\n                      key={`notif${key}`}\r\n                      style={\r\n                        notif.read\r\n                          ? { fontSize: 13, color: \"black\" }\r\n                          : { fontSize: 13, fontWeight: \"bold\", color: \"black\" }\r\n                      }\r\n                    >\r\n                      <div className=\"notifContainer\">\r\n                        <Row>\r\n                          <Col span={22}>\r\n                            <p style={{ marginBottom: 15 }}>\r\n                              {notif.displayName}{\" \"}\r\n                              <span>{`${type} your post.`}</span>{\" \"}\r\n                            </p>\r\n                          </Col>\r\n                          <Col span={2} style={{ color: \"#7958f5\" }}>\r\n                            {!notif.read && <p>&#8226;</p>}\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })\r\n              ) : (\r\n              <img src={NoNotif} className=\"centeringButton\" style={{height: 200}} />\r\n              )\r\n            )\r\n            }\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\BackDrop.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SidebarMobile.jsx",["420"],"/* eslint-disable react/display-name, jsx-a11y/click-events-have-key-events */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\n\r\n//css & assets\r\nimport \"../App.css\";\r\nimport Blank from \"../assets/blank.png\";\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\n\r\n//antd\r\nimport { Layout, Menu, List } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LaptopOutlined,\r\n  NotificationOutlined,\r\n  SettingOutlined,\r\n  SearchOutlined,\r\n  StarOutlined,\r\n  AudioMutedOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nexport default function SidebarMobile(props) {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const handleResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const { user } = useContext(AuthContext);\r\n  \r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  let siderClasses = 'sidebarmobilecoy'\r\n  \r\n  if(props.show) {\r\n    siderClasses = 'sidebarmobilecoy open' \r\n  }\r\n  return user && (\r\n    <React.Fragment>\r\n      {/* Sidebar */}\r\n      <div className={siderClasses}>\r\n        <Sider\r\n          width='100%'\r\n          className=\"site-layout-background\"\r\n          style={{ backgroundColor: \"white\" }}\r\n          collapsed={false}\r\n        >\r\n          <div style={{ width: 60 }}>\r\n            <Link to={`/profile/user/${user.id}`}>\r\n              <div\r\n                className=\"profilefoto\"\r\n                style={{marginLeft: 4, backgroundImage: `url(\"${user.profilePicture? user.profilePicture : Blank}\")`}}\r\n              />\r\n            </Link>\r\n          </div>\r\n          <Link to={`/profile/user/${user.id}`}>\r\n            <h3 style={{marginLeft: 4, marginTop: 15, marginBottom: -1, fontSize: 15 }}>\r\n              {user.username ? user.username : \"My Account\"}\r\n            </h3>\r\n          </Link>\r\n\r\n          <List.Item.Meta\r\n            title={\r\n              <Link to=\"/maps\" style={{marginLeft: 4,}}>\r\n                {\" \"}\r\n                {windowWidth > 993 ? (\r\n                  <img src={Pin} style={{ width: 20, marginTop: -5 }} />\r\n                ) : null}\r\n                \r\n                {address}\r\n              </Link>\r\n            }\r\n          />\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={[\"NearBy\"]}\r\n            defaultOpenKeys={[\"NearBy\"]}\r\n            style={{ height: \"100%\", border: \"none\" }}\r\n            inlineCollapsed=\"false\"\r\n          >\r\n            <Menu.Divider />\r\n            <Menu.Item key=\"NearBy\" icon={<UserOutlined />}>\r\n              <Link to=\"/\">Nearby</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Search\" icon={<SearchOutlined />}>\r\n              <Link to=\"/search\">Search</Link>\r\n            </Menu.Item>\r\n\r\n            <SubMenu\r\n              key=\"Room\"\r\n              icon={<LaptopOutlined />}\r\n              title=\"Available Room\"\r\n            >\r\n              <Menu.Item key=\"Room1\">\r\n                <Link to=\"/Insvire E-Sport\">Insvire E-Sport</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"Room2\">\r\n                <Link to=\"/BMW Club Bandung\">BMW Club Bandung</Link>\r\n                </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"Visited\" icon={<StarOutlined />}>\r\n              <Link to=\"/visited\">Visited Places</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Sub\" icon={<NotificationOutlined />}>\r\n              <Link to=\"/subscribePosts\">Subscribed Posts</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Muted\" icon={<AudioMutedOutlined />}>\r\n              <Link to=\"/MutedPost\" >Muted Posts</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"Settings\" icon={<SettingOutlined />}>\r\n              <Link to=\"/settings\">Settings</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        {windowWidth < 993 ? null : <Link to='/' ><div className=\"curious\" /></Link>}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Firebase.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\SkeletonLoading.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\InfiniteScroll.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\NavBar.jsx",["421","422"],"import React, { useContext } from 'react'\r\nimport { BellOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport '../App.css'\r\nimport { PostContext } from '../context/posts';\r\nimport { AuthContext } from '../context/auth';\r\n\r\nexport default function NavBar(props) {\r\n  const { notifications } = useContext(AuthContext);\r\n  const { setNav, active } = useContext(PostContext)\r\n  const handleToggle = e => {\r\n    setNav(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <header className=\"toolbar\">\r\n      <div className=\"toolbar__nav\">\r\n      \r\n      <nav >\r\n        <div style={{\r\n          display: 'flex',\r\n          width: '100vw',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div>\r\n          <button className=\"toggle-button\" onClick={props.toggleOpen}>\r\n          <div className=\"hamburger-line\"></div>\r\n          <div className=\"hamburger-line\"></div>\r\n          <div className=\"hamburger-line\"></div>\r\n        </button>\r\n          </div>\r\n          <div>\r\n            <div className=\"radio-center\">\r\n              <Link to='/'>\r\n              <button className={ active == 'latest' ? \"toogle-latest toggle-active__navbar\" : \"toogle-latest\"}\r\n                onClick={handleToggle}\r\n               value=\"latest\">Latest</button>\r\n              </Link>\r\n              <Link to='/popular'>\r\n              <button className={ active == 'popular' ? \"toogle-popular toggle-active__navbar\" : \"toogle-popular\"}\r\n                onClick={handleToggle}\r\n               value=\"popular\">Popular</button>\r\n              </Link>\r\n            </div>\r\n            \r\n          </div>\r\n          <div className='notif'>\r\n            <div className=\"toggle-button\">\r\n            <BellOutlined style={{\r\n              marginLeft: -10,\r\n              fontSize: \"25px\",\r\n              color: \"black\",\r\n              strokeWidth: \"30\",\r\n              }} onClick={props.toggleOpenNotif} />\r\n              {\r\n          notifications.length > 1 && <div className=\"notifCounter__mobile\">\r\n            <p style={{fontSize:10,display: 'flex', justifyContent: 'center'}}> {notifications.length > 99 ?\r\n               ('99+') :\r\n                (notifications.length)}</p>\r\n              \r\n                </div>}\r\n              \r\n            </div>\r\n          \r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <div className=\"toolbar__nav2\" />\r\n      </div>\r\n    </header>\r\n   )\r\n}","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\LoginFacebookButton.jsx",["423"],"import React, { useContext, useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { FacebookProvider, auth } from '../util/Firebase'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { LOGIN_USER_FACEBOOK } from '../GraphQL/Mutations'\r\n\r\nconst CHECK_USER_BY_FACEBOOK = gql`\r\n  mutation check($username: String!){\r\n    checkUserWithFacebook(username: $username)\r\n  }\r\n`\r\n\r\nexport default function LoginFacebookButton({ props }) {\r\n  const { loadFacebookData, login } = useContext(AuthContext)\r\n  const [dataFacebook, setFacebookData] = useState({})\r\n\r\n  // const [loginFacebook] = useMutation(LOGIN_USER_FACEBOOK, {\r\n  //   update(_, { data: { loginWithFacebook } }) {\r\n\r\n  //     login(loginWithFacebook)\r\n  //   }\r\n  // })\r\n\r\n  const [check] = useMutation(CHECK_USER_BY_FACEBOOK, {\r\n    update(_, { data: { checkUserWithFacebook } }) {\r\n      if (!checkUserWithFacebook) {\r\n        loadFacebookData(dataFacebook)\r\n        props.history.push('/register/facebook')\r\n      } else {\r\n        const { token } = dataFacebook\r\n        // loginFacebook({ variables: { username, token } })\r\n        login(token)\r\n        props.history.push('/')\r\n      }\r\n    },\r\n    onError(err) {\r\n      console.log(err.message)\r\n    }\r\n  })\r\n\r\n  const signInWithFacebook = async () => {\r\n    auth.signInWithPopup(FacebookProvider).then(function (result) {\r\n      let user = result.user;\r\n      let facebookData = {\r\n        username: user.displayName,\r\n        email: user.email,\r\n        imageUrl: user.photoURL,\r\n        id: user.uid\r\n      }\r\n      user.getIdToken().then(token => {\r\n        facebookData.token = token\r\n      })\r\n      setFacebookData(facebookData)\r\n\r\n      check({ variables: { username: user.displayName } })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Button onClick={signInWithFacebook} className=\"landing-big-button\" style={{fontSize: '18px', color: 'white', background: '#7F57FF' }}>\r\n      <i className=\"facebook icon\" />\r\n          Continue with Facebook\r\n    </Button>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\library\\Icon.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\style\\mapstyle.jsx",["424"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"gamma\": 0.26\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"lightness\": -50\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 50\r\n            },\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\components\\Modal\\index.jsx",["425","426"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\util\\Config.jsx",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\GraphQL\\Subsriptions.js",[],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Profile\\Profile.jsx",["427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445"],"C:\\Users\\Hp\\OneDrive\\Documents\\Web Development\\project-curious\\frontend\\src\\pages\\Profile\\editProfile.jsx",["446","447","448"],{"ruleId":"449","severity":1,"message":"450","line":55,"column":11,"nodeType":"451","messageId":"452","endLine":56,"endColumn":40},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","replacedBy":"456"},{"ruleId":"457","severity":1,"message":"458","line":1,"column":22,"nodeType":"459","messageId":"460","endLine":1,"endColumn":31},{"ruleId":"457","severity":1,"message":"461","line":54,"column":37,"nodeType":"459","messageId":"460","endLine":54,"endColumn":41},{"ruleId":"462","severity":1,"message":"463","line":53,"column":8,"nodeType":"464","endLine":53,"endColumn":18,"suggestions":"465"},{"ruleId":"462","severity":1,"message":"466","line":69,"column":8,"nodeType":"464","endLine":69,"endColumn":26,"suggestions":"467"},{"ruleId":"468","severity":1,"message":"469","line":83,"column":71,"nodeType":"470","messageId":"471","endLine":83,"endColumn":73},{"ruleId":"457","severity":1,"message":"472","line":4,"column":27,"nodeType":"459","messageId":"460","endLine":4,"endColumn":36},{"ruleId":"457","severity":1,"message":"473","line":7,"column":8,"nodeType":"459","messageId":"460","endLine":7,"endColumn":22},{"ruleId":"462","severity":1,"message":"474","line":27,"column":10,"nodeType":"464","endLine":27,"endColumn":12,"suggestions":"475"},{"ruleId":"462","severity":1,"message":"476","line":44,"column":8,"nodeType":"464","endLine":44,"endColumn":26,"suggestions":"477"},{"ruleId":"478","severity":1,"message":"479","line":52,"column":25,"nodeType":"480","endLine":52,"endColumn":67},{"ruleId":"468","severity":1,"message":"469","line":59,"column":80,"nodeType":"470","messageId":"471","endLine":59,"endColumn":82},{"ruleId":"462","severity":1,"message":"474","line":22,"column":10,"nodeType":"464","endLine":22,"endColumn":12,"suggestions":"481"},{"ruleId":"462","severity":1,"message":"482","line":47,"column":8,"nodeType":"464","endLine":47,"endColumn":26,"suggestions":"483"},{"ruleId":"478","severity":1,"message":"479","line":55,"column":17,"nodeType":"480","endLine":55,"endColumn":59},{"ruleId":"468","severity":1,"message":"469","line":62,"column":72,"nodeType":"470","messageId":"471","endLine":62,"endColumn":74},{"ruleId":"462","severity":1,"message":"484","line":21,"column":10,"nodeType":"464","endLine":21,"endColumn":19,"suggestions":"485"},{"ruleId":"457","severity":1,"message":"486","line":28,"column":40,"nodeType":"459","messageId":"460","endLine":28,"endColumn":52},{"ruleId":"462","severity":1,"message":"463","line":36,"column":8,"nodeType":"464","endLine":36,"endColumn":14,"suggestions":"487"},{"ruleId":"462","severity":1,"message":"488","line":54,"column":8,"nodeType":"464","endLine":54,"endColumn":26,"suggestions":"489"},{"ruleId":"457","severity":1,"message":"490","line":1,"column":16,"nodeType":"459","messageId":"460","endLine":1,"endColumn":23},{"ruleId":"457","severity":1,"message":"491","line":1,"column":25,"nodeType":"459","messageId":"460","endLine":1,"endColumn":31},{"ruleId":"457","severity":1,"message":"492","line":1,"column":33,"nodeType":"459","messageId":"460","endLine":1,"endColumn":37},{"ruleId":"457","severity":1,"message":"493","line":2,"column":40,"nodeType":"459","messageId":"460","endLine":2,"endColumn":46},{"ruleId":"457","severity":1,"message":"494","line":2,"column":48,"nodeType":"459","messageId":"460","endLine":2,"endColumn":56},{"ruleId":"462","severity":1,"message":"474","line":22,"column":8,"nodeType":"464","endLine":22,"endColumn":10,"suggestions":"495"},{"ruleId":"457","severity":1,"message":"458","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"496","line":13,"column":10,"nodeType":"459","messageId":"460","endLine":13,"endColumn":24},{"ruleId":"468","severity":1,"message":"469","line":40,"column":38,"nodeType":"470","messageId":"471","endLine":40,"endColumn":40},{"ruleId":"468","severity":1,"message":"469","line":43,"column":37,"nodeType":"470","messageId":"471","endLine":43,"endColumn":39},{"ruleId":"468","severity":1,"message":"469","line":46,"column":37,"nodeType":"470","messageId":"471","endLine":46,"endColumn":39},{"ruleId":"468","severity":1,"message":"469","line":49,"column":36,"nodeType":"470","messageId":"471","endLine":49,"endColumn":38},{"ruleId":"468","severity":1,"message":"469","line":120,"column":15,"nodeType":"470","messageId":"471","endLine":120,"endColumn":17},{"ruleId":"468","severity":1,"message":"469","line":122,"column":18,"nodeType":"470","messageId":"471","endLine":122,"endColumn":20},{"ruleId":"468","severity":1,"message":"469","line":124,"column":18,"nodeType":"470","messageId":"471","endLine":124,"endColumn":20},{"ruleId":"468","severity":1,"message":"469","line":126,"column":18,"nodeType":"470","messageId":"471","endLine":126,"endColumn":20},{"ruleId":"462","severity":1,"message":"497","line":44,"column":6,"nodeType":"464","endLine":44,"endColumn":8,"suggestions":"498"},{"ruleId":"478","severity":1,"message":"479","line":66,"column":19,"nodeType":"480","endLine":66,"endColumn":138},{"ruleId":"478","severity":1,"message":"479","line":71,"column":19,"nodeType":"480","endLine":71,"endColumn":138},{"ruleId":"478","severity":1,"message":"479","line":76,"column":19,"nodeType":"480","endLine":76,"endColumn":138},{"ruleId":"478","severity":1,"message":"479","line":81,"column":19,"nodeType":"480","endLine":81,"endColumn":138},{"ruleId":"457","severity":1,"message":"458","line":1,"column":39,"nodeType":"459","messageId":"460","endLine":1,"endColumn":48},{"ruleId":"457","severity":1,"message":"499","line":75,"column":11,"nodeType":"459","messageId":"460","endLine":75,"endColumn":25},{"ruleId":"457","severity":1,"message":"500","line":75,"column":27,"nodeType":"459","messageId":"460","endLine":75,"endColumn":39},{"ruleId":"457","severity":1,"message":"501","line":75,"column":51,"nodeType":"459","messageId":"460","endLine":75,"endColumn":63},{"ruleId":"462","severity":1,"message":"502","line":111,"column":6,"nodeType":"464","endLine":111,"endColumn":10,"suggestions":"503"},{"ruleId":"462","severity":1,"message":"504","line":141,"column":6,"nodeType":"464","endLine":141,"endColumn":24,"suggestions":"505"},{"ruleId":"462","severity":1,"message":"506","line":162,"column":6,"nodeType":"464","endLine":162,"endColumn":22,"suggestions":"507"},{"ruleId":"468","severity":1,"message":"469","line":177,"column":37,"nodeType":"470","messageId":"471","endLine":177,"endColumn":39},{"ruleId":"478","severity":1,"message":"479","line":265,"column":21,"nodeType":"480","endLine":265,"endColumn":80},{"ruleId":"508","severity":1,"message":"509","line":282,"column":23,"nodeType":"480","endLine":285,"endColumn":24},{"ruleId":"468","severity":1,"message":"469","line":327,"column":54,"nodeType":"470","messageId":"471","endLine":327,"endColumn":56},{"ruleId":"457","severity":1,"message":"510","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":14},{"ruleId":"478","severity":1,"message":"479","line":13,"column":13,"nodeType":"480","endLine":13,"endColumn":55},{"ruleId":"478","severity":1,"message":"479","line":19,"column":64,"nodeType":"480","endLine":19,"endColumn":108},{"ruleId":"462","severity":1,"message":"511","line":27,"column":9,"nodeType":"512","endLine":27,"endColumn":41},{"ruleId":"462","severity":1,"message":"474","line":35,"column":8,"nodeType":"464","endLine":35,"endColumn":10,"suggestions":"513"},{"ruleId":"468","severity":1,"message":"469","line":85,"column":67,"nodeType":"470","messageId":"471","endLine":85,"endColumn":69},{"ruleId":"468","severity":1,"message":"469","line":86,"column":66,"nodeType":"470","messageId":"471","endLine":86,"endColumn":68},{"ruleId":"468","severity":1,"message":"514","line":87,"column":60,"nodeType":"470","messageId":"471","endLine":87,"endColumn":62},{"ruleId":"468","severity":1,"message":"514","line":87,"column":72,"nodeType":"470","messageId":"471","endLine":87,"endColumn":74},{"ruleId":"457","severity":1,"message":"458","line":1,"column":39,"nodeType":"459","messageId":"460","endLine":1,"endColumn":48},{"ruleId":"457","severity":1,"message":"515","line":13,"column":7,"nodeType":"459","messageId":"460","endLine":13,"endColumn":13},{"ruleId":"457","severity":1,"message":"516","line":27,"column":10,"nodeType":"459","messageId":"460","endLine":27,"endColumn":15},{"ruleId":"457","severity":1,"message":"458","line":1,"column":39,"nodeType":"459","messageId":"460","endLine":1,"endColumn":48},{"ruleId":"457","severity":1,"message":"516","line":39,"column":10,"nodeType":"459","messageId":"460","endLine":39,"endColumn":15},{"ruleId":"457","severity":1,"message":"517","line":12,"column":10,"nodeType":"459","messageId":"460","endLine":12,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":23,"column":7,"nodeType":"480","endLine":23,"endColumn":62},{"ruleId":"457","severity":1,"message":"518","line":22,"column":8,"nodeType":"459","messageId":"460","endLine":22,"endColumn":13},{"ruleId":"462","severity":1,"message":"497","line":38,"column":8,"nodeType":"464","endLine":38,"endColumn":10,"suggestions":"519"},{"ruleId":"462","severity":1,"message":"520","line":67,"column":8,"nodeType":"464","endLine":67,"endColumn":18,"suggestions":"521"},{"ruleId":"462","severity":1,"message":"466","line":84,"column":8,"nodeType":"464","endLine":84,"endColumn":26,"suggestions":"522"},{"ruleId":"478","severity":1,"message":"479","line":101,"column":17,"nodeType":"480","endLine":101,"endColumn":59},{"ruleId":"468","severity":1,"message":"469","line":111,"column":71,"nodeType":"470","messageId":"471","endLine":111,"endColumn":73},{"ruleId":"523","severity":1,"message":"524","line":143,"column":3,"nodeType":"525","messageId":"526","endLine":156,"endColumn":4},{"ruleId":"462","severity":1,"message":"527","line":192,"column":6,"nodeType":"464","endLine":192,"endColumn":13,"suggestions":"528"},{"ruleId":"462","severity":1,"message":"529","line":221,"column":6,"nodeType":"464","endLine":221,"endColumn":21,"suggestions":"530"},{"ruleId":"462","severity":1,"message":"531","line":330,"column":5,"nodeType":"464","endLine":330,"endColumn":12,"suggestions":"532"},{"ruleId":"457","severity":1,"message":"533","line":1,"column":32,"nodeType":"459","messageId":"460","endLine":1,"endColumn":39},{"ruleId":"468","severity":1,"message":"469","line":885,"column":14,"nodeType":"470","messageId":"471","endLine":885,"endColumn":16},{"ruleId":"468","severity":1,"message":"469","line":887,"column":21,"nodeType":"470","messageId":"471","endLine":887,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":889,"column":21,"nodeType":"470","messageId":"471","endLine":889,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":891,"column":21,"nodeType":"470","messageId":"471","endLine":891,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":893,"column":21,"nodeType":"470","messageId":"471","endLine":893,"endColumn":23},{"ruleId":"457","severity":1,"message":"534","line":38,"column":10,"nodeType":"459","messageId":"460","endLine":38,"endColumn":20},{"ruleId":"462","severity":1,"message":"506","line":98,"column":6,"nodeType":"464","endLine":98,"endColumn":22,"suggestions":"535"},{"ruleId":"478","severity":1,"message":"479","line":144,"column":21,"nodeType":"480","endLine":144,"endColumn":75},{"ruleId":"468","severity":1,"message":"469","line":147,"column":29,"nodeType":"470","messageId":"471","endLine":147,"endColumn":31},{"ruleId":"508","severity":1,"message":"509","line":201,"column":21,"nodeType":"480","endLine":204,"endColumn":22},{"ruleId":"478","severity":1,"message":"479","line":230,"column":15,"nodeType":"480","endLine":230,"endColumn":69},{"ruleId":"468","severity":1,"message":"469","line":233,"column":23,"nodeType":"470","messageId":"471","endLine":233,"endColumn":25},{"ruleId":"468","severity":1,"message":"469","line":9,"column":24,"nodeType":"470","messageId":"471","endLine":9,"endColumn":26},{"ruleId":"468","severity":1,"message":"469","line":23,"column":24,"nodeType":"470","messageId":"471","endLine":23,"endColumn":26},{"ruleId":"457","severity":1,"message":"536","line":1,"column":10,"nodeType":"459","messageId":"460","endLine":1,"endColumn":16},{"ruleId":"457","severity":1,"message":"537","line":1,"column":18,"nodeType":"459","messageId":"460","endLine":1,"endColumn":23},{"ruleId":"457","severity":1,"message":"538","line":1,"column":25,"nodeType":"459","messageId":"460","endLine":1,"endColumn":29},{"ruleId":"457","severity":1,"message":"539","line":3,"column":17,"nodeType":"459","messageId":"460","endLine":3,"endColumn":27},{"ruleId":"457","severity":1,"message":"540","line":6,"column":27,"nodeType":"459","messageId":"460","endLine":6,"endColumn":33},{"ruleId":"457","severity":1,"message":"541","line":20,"column":7,"nodeType":"459","messageId":"460","endLine":20,"endColumn":16},{"ruleId":"457","severity":1,"message":"542","line":26,"column":9,"nodeType":"459","messageId":"460","endLine":26,"endColumn":15},{"ruleId":"457","severity":1,"message":"543","line":20,"column":8,"nodeType":"459","messageId":"460","endLine":20,"endColumn":13},{"ruleId":"468","severity":1,"message":"514","line":66,"column":104,"nodeType":"470","messageId":"471","endLine":66,"endColumn":106},{"ruleId":"508","severity":1,"message":"509","line":96,"column":45,"nodeType":"480","endLine":99,"endColumn":46},{"ruleId":"508","severity":1,"message":"509","line":165,"column":53,"nodeType":"480","endLine":165,"endColumn":122},{"ruleId":"457","severity":1,"message":"517","line":32,"column":10,"nodeType":"459","messageId":"460","endLine":32,"endColumn":21},{"ruleId":"462","severity":1,"message":"544","line":162,"column":6,"nodeType":"464","endLine":162,"endColumn":21,"suggestions":"545"},{"ruleId":"462","severity":1,"message":"546","line":168,"column":6,"nodeType":"464","endLine":168,"endColumn":14,"suggestions":"547"},{"ruleId":"548","severity":1,"message":"549","line":171,"column":23,"nodeType":"550","messageId":"551","endLine":171,"endColumn":25},{"ruleId":"548","severity":1,"message":"549","line":171,"column":44,"nodeType":"550","messageId":"551","endLine":171,"endColumn":46},{"ruleId":"462","severity":1,"message":"552","line":187,"column":6,"nodeType":"464","endLine":187,"endColumn":32,"suggestions":"553"},{"ruleId":"478","severity":1,"message":"479","line":311,"column":19,"nodeType":"480","endLine":311,"endColumn":158},{"ruleId":"468","severity":1,"message":"469","line":350,"column":32,"nodeType":"470","messageId":"471","endLine":350,"endColumn":34},{"ruleId":"468","severity":1,"message":"469","line":364,"column":32,"nodeType":"470","messageId":"471","endLine":364,"endColumn":34},{"ruleId":"508","severity":1,"message":"509","line":77,"column":15,"nodeType":"480","endLine":80,"endColumn":16},{"ruleId":"457","severity":1,"message":"554","line":111,"column":21,"nodeType":"459","messageId":"460","endLine":111,"endColumn":25},{"ruleId":"457","severity":1,"message":"458","line":1,"column":29,"nodeType":"459","messageId":"460","endLine":1,"endColumn":38},{"ruleId":"457","severity":1,"message":"555","line":3,"column":16,"nodeType":"459","messageId":"460","endLine":3,"endColumn":26},{"ruleId":"478","severity":1,"message":"479","line":99,"column":19,"nodeType":"480","endLine":99,"endColumn":73},{"ruleId":"457","severity":1,"message":"458","line":1,"column":29,"nodeType":"459","messageId":"460","endLine":1,"endColumn":38},{"ruleId":"508","severity":1,"message":"509","line":74,"column":15,"nodeType":"480","endLine":77,"endColumn":16},{"ruleId":"457","severity":1,"message":"554","line":99,"column":23,"nodeType":"459","messageId":"460","endLine":99,"endColumn":27},{"ruleId":"449","severity":1,"message":"450","line":100,"column":21,"nodeType":"451","messageId":"452","endLine":101,"endColumn":29},{"ruleId":"478","severity":1,"message":"479","line":135,"column":15,"nodeType":"480","endLine":135,"endColumn":86},{"ruleId":"478","severity":1,"message":"479","line":96,"column":19,"nodeType":"480","endLine":96,"endColumn":73},{"ruleId":"468","severity":1,"message":"469","line":35,"column":42,"nodeType":"470","messageId":"471","endLine":35,"endColumn":44},{"ruleId":"468","severity":1,"message":"469","line":40,"column":42,"nodeType":"470","messageId":"471","endLine":40,"endColumn":44},{"ruleId":"457","severity":1,"message":"556","line":7,"column":10,"nodeType":"459","messageId":"460","endLine":7,"endColumn":29},{"ruleId":"557","severity":1,"message":"558","line":1,"column":1,"nodeType":"559","endLine":110,"endColumn":2},{"ruleId":"457","severity":1,"message":"539","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":27},{"ruleId":"457","severity":1,"message":"560","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":21},{"ruleId":"457","severity":1,"message":"561","line":11,"column":26,"nodeType":"459","messageId":"460","endLine":11,"endColumn":32},{"ruleId":"457","severity":1,"message":"562","line":14,"column":8,"nodeType":"459","messageId":"460","endLine":14,"endColumn":15},{"ruleId":"457","severity":1,"message":"563","line":36,"column":7,"nodeType":"459","messageId":"460","endLine":36,"endColumn":14},{"ruleId":"457","severity":1,"message":"461","line":52,"column":26,"nodeType":"459","messageId":"460","endLine":52,"endColumn":30},{"ruleId":"457","severity":1,"message":"564","line":53,"column":17,"nodeType":"459","messageId":"460","endLine":53,"endColumn":37},{"ruleId":"457","severity":1,"message":"565","line":57,"column":26,"nodeType":"459","messageId":"460","endLine":57,"endColumn":43},{"ruleId":"462","severity":1,"message":"566","line":65,"column":6,"nodeType":"464","endLine":65,"endColumn":44,"suggestions":"567"},{"ruleId":"462","severity":1,"message":"568","line":97,"column":6,"nodeType":"464","endLine":97,"endColumn":27,"suggestions":"569"},{"ruleId":"570","severity":1,"message":"571","line":120,"column":55,"nodeType":"572","messageId":"573","endLine":120,"endColumn":57},{"ruleId":"478","severity":1,"message":"479","line":145,"column":13,"nodeType":"480","endLine":145,"endColumn":55},{"ruleId":"478","severity":1,"message":"479","line":180,"column":15,"nodeType":"480","endLine":180,"endColumn":58},{"ruleId":"468","severity":1,"message":"469","line":196,"column":45,"nodeType":"470","messageId":"471","endLine":196,"endColumn":47},{"ruleId":"468","severity":1,"message":"469","line":197,"column":44,"nodeType":"470","messageId":"471","endLine":197,"endColumn":46},{"ruleId":"468","severity":1,"message":"514","line":198,"column":39,"nodeType":"470","messageId":"471","endLine":198,"endColumn":41},{"ruleId":"468","severity":1,"message":"514","line":198,"column":51,"nodeType":"470","messageId":"471","endLine":198,"endColumn":53},{"ruleId":"574","severity":1,"message":"575","line":201,"column":21,"nodeType":"480","endLine":210,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":217,"column":13,"nodeType":"480","endLine":217,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":239,"column":11,"nodeType":"480","endLine":247,"endColumn":13},{"ruleId":"478","severity":1,"message":"479","line":289,"column":11,"nodeType":"480","endLine":289,"endColumn":65},{"ruleId":"457","severity":1,"message":"461","line":37,"column":28,"nodeType":"459","messageId":"460","endLine":37,"endColumn":32},{"ruleId":"462","severity":1,"message":"568","line":69,"column":10,"nodeType":"464","endLine":69,"endColumn":31,"suggestions":"576"},{"ruleId":"478","severity":1,"message":"479","line":77,"column":21,"nodeType":"480","endLine":77,"endColumn":81},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["577"],"no-negated-in-lhs",["578"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["579"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPosts'. Either include them or remove the dependency array.",["580"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'GET_POSTS' is defined but never used.","'InfiniteScroll' is defined but never used.","React Hook useEffect has missing dependencies: 'path' and 'setPathname'. Either include them or remove the dependency array.",["581"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setMutedPost'. Either include them or remove the dependency array.",["582"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["583"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setSubscribePosts'. Either include them or remove the dependency array.",["584"],"React Hook useEffect has a missing dependency: 'setPathname'. Either include it or remove the dependency array.",["585"],"'loadingPosts' is assigned a value but never used.",["586"],"React Hook useEffect has missing dependencies: 'loadingData', 'room_1.length', 'room_2.length', and 'setRoom'. Either include them or remove the dependency array.",["587"],"'message' is defined but never used.","'Avatar' is defined but never used.","'Spin' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.",["588"],"'getRangeSearch' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'setPathname'. Either include them or remove the dependency array.",["589"],"'previewVisible' is assigned a value but never used.","'previewImage' is assigned a value but never used.","'previewTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPost' and 'room'. Either include them or remove the dependency array.",["590"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPost'. Either include them or remove the dependency array.",["591"],"React Hook useEffect has a missing dependency: 'repost'. Either include it or remove the dependency array.",["592"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","The 'visited' logical expression could make the dependencies of useEffect Hook (at line 42) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'visited' in its own useMemo() Hook.","VariableDeclarator",["593"],"Expected '!==' and instead saw '!='.","'layout' is assigned a value but never used.","'login' is assigned a value but never used.","'AuthContext' is defined but never used.","'Modal' is defined but never used.",["594"],"React Hook useEffect has missing dependencies: 'getPosts' and 'range'. Either include them or remove the dependency array.",["595"],["596"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'called', 'loadDataUser', and 'refetch'. Either include them or remove the dependency array.",["597"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["598"],"React Hook useMemo has missing dependencies: 'facebookData', 'googleData', 'liked', 'login', 'notifications', 'pathname', 'room', and 'user'. Either include them or remove the dependency array.",["599"],"'useMemo' is defined but never used.","'repostData' is assigned a value but never used.",["600"],"'Button' is defined but never used.","'Radio' is defined but never used.","'Tabs' is defined but never used.","'useContext' is defined but never used.","'Sticky' is defined but never used.","'onChange2' is assigned a value but never used.","'value2' is assigned a value but never used.","'Photo' is defined but never used.","React Hook useEffect has a missing dependency: 'showPosition'. Either include it or remove the dependency array.",["601"],"React Hook useEffect has a missing dependency: 'getRepost'. Either include it or remove the dependency array.",["602"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'createPost', 'isOpenNewPost', 'lat', 'lng', 'repost.repost', 'repost.room', 'room', and 'state'. Either include them or remove the dependency array.",["603"],"'text' is assigned a value but never used.","'useHistory' is defined but never used.","'LOGIN_USER_FACEBOOK' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'PostContext' is defined but never used.","'Upload' is defined but never used.","'ImgCrop' is defined but never used.","'storage' is assigned a value but never used.","'changeProfilePicture' is assigned a value but never used.","'setProfilePicture' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setLikedPosts' and 'setPosts'. Either include them or remove the dependency array.",["604"],"React Hook useEffect has a missing dependency: 'changePPuser'. Either include it or remove the dependency array.",["605"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["606"],"no-global-assign","no-unsafe-negation",{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"611","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"611","fix":"624"},{"desc":"618","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"611","fix":"632"},{"desc":"618","fix":"633"},{"desc":"634","fix":"635"},{"desc":"609","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"630","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"652","fix":"654"},"Update the dependencies array to be: [getPosts, location]",{"range":"655","text":"656"},"Update the dependencies array to be: [data, _isMounted, setPosts, loadingData]",{"range":"657","text":"658"},"Update the dependencies array to be: [path, setPathname]",{"range":"659","text":"660"},"Update the dependencies array to be: [data, _isMounted, setMutedPost, loadingData]",{"range":"661","text":"662"},{"range":"663","text":"660"},"Update the dependencies array to be: [data, _isMounted, setSubscribePosts, loadingData]",{"range":"664","text":"665"},"Update the dependencies array to be: [history, setPathname]",{"range":"666","text":"667"},"Update the dependencies array to be: [getPosts, room]",{"range":"668","text":"669"},"Update the dependencies array to be: [data, _isMounted, setRoom, room_1.length, room_2.length, loadingData]",{"range":"670","text":"671"},{"range":"672","text":"660"},{"range":"673","text":"667"},"Update the dependencies array to be: [getPost, id, room]",{"range":"674","text":"675"},"Update the dependencies array to be: [data, _isMounted, setPost, loadingData]",{"range":"676","text":"677"},"Update the dependencies array to be: [post, isRepost, repost]",{"range":"678","text":"679"},{"range":"680","text":"660"},{"range":"681","text":"667"},"Update the dependencies array to be: [getPosts, location, range]",{"range":"682","text":"683"},{"range":"684","text":"658"},"Update the dependencies array to be: [called, loadDataUser, refetch, token]",{"range":"685","text":"686"},"Update the dependencies array to be: [loading, data, error]",{"range":"687","text":"688"},"Update the dependencies array to be: [facebookData, googleData, liked, login, notifications, pathname, room, user]",{"range":"689","text":"690"},{"range":"691","text":"679"},"Update the dependencies array to be: [isOpenNewPost, showPosition]",{"range":"692","text":"693"},"Update the dependencies array to be: [getRepost, repost]",{"range":"694","text":"695"},"Update the dependencies array to be: [uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost.repost, repost.room, room, createPost]",{"range":"696","text":"697"},"Update the dependencies array to be: [getProfilePosts, getProfileLikedPost, setPosts, setLikedPosts]",{"range":"698","text":"699"},"Update the dependencies array to be: [url, isFinishUpload, changePPuser]",{"range":"700","text":"701"},{"range":"702","text":"701"},[1597,1607],"[getPosts, location]",[1974,1992],"[data, _isMounted, setPosts, loadingData]",[961,963],"[path, setPathname]",[1342,1360],"[data, _isMounted, setMutedPost, loadingData]",[739,741],[1421,1439],"[data, _isMounted, setSubscribePosts, loadingData]",[636,645],"[history, setPathname]",[1113,1119],"[getPosts, room]",[1550,1568],"[data, _isMounted, setRoom, room_1.length, room_2.length, loadingData]",[857,859],[1325,1327],[3299,3303],"[getPost, id, room]",[3909,3927],"[data, _isMounted, setPost, loadingData]",[4462,4478],"[post, isRepost, repost]",[1020,1022],[1305,1307],[2114,2124],"[getPosts, location, range]",[2510,2528],[4365,4372],"[called, loadDataUser, refetch, token]",[5030,5045],"[loading, data, error]",[7133,7140],"[facebookData, googleData, liked, login, notifications, pathname, room, user]",[3133,3149],[4142,4157],"[isOpenNewPost, showPosition]",[4271,4279],"[getRepost, repost]",[4731,4757],"[uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost.repost, repost.room, room, createPost]",[2302,2340],"[getProfilePosts, getProfileLikedPost, setPosts, setLikedPosts]",[3166,3187],"[url, isFinishUpload, changePPuser]",[1940,1961]]