[{"D:\\Web Dev\\curious-app75\\frontend\\src\\index.js":"1","D:\\Web Dev\\curious-app75\\frontend\\src\\App.js":"2","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Session.jsx":"3","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\AuthRoute.jsx":"4","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\UserRoute.jsx":"5","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\HomeRoute.jsx":"6","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\GoogleAuthRoute.jsx":"7","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\FacebookAuthRoute.jsx":"8","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\Context.jsx":"9","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\register.jsx":"10","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerGoogle.jsx":"11","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerFacebook.jsx":"12","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\grid.jsx":"13","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\subscribePosts.jsx":"14","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\nearby.jsx":"15","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\detailPost.jsx":"16","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\mutedPosts.jsx":"17","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\room.jsx":"18","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Profile.jsx":"19","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\popular.jsx":"20","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Settings.jsx":"21","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\chat.jsx":"22","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\login\\index.jsx":"23","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\map\\index.jsx":"24","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\search\\index.jsx":"25","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\visited\\index.jsx":"26","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\constant.jsx":"27","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\reset-password\\index.jsx":"28","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\landing-page\\index.jsx":"29","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\confirm-password\\index.jsx":"30","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Queries.js":"31","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Mutations.js":"32","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\home.jsx":"33","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\auth.jsx":"34","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\posts.jsx":"35","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Countries.jsx":"36","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\ConfigMap.jsx":"37","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\NavBar.jsx":"38","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\style\\mapstyle.jsx":"39","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\InfiniteScroll.jsx":"40","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostCard\\index.jsx":"41","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\SkeletonLoading.jsx":"42","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Firebase.jsx":"43","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginGoogleButton.jsx":"44","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AppBar\\index.jsx":"45","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginFacebookButton.jsx":"46","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostNavBar.jsx":"47","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\NotificationMobile.jsx":"48","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\BackDrop.jsx":"49","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\SidebarMobile.jsx":"50","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx":"51","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx":"52","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx":"53","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Notification.jsx":"54","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Sidebar.jsx":"55","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx":"56","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\index.jsx":"57","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Config.jsx":"58","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\BottomBar\\index.jsx":"59","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Fragment.js":"60","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Subsriptions.js":"61"},{"size":2825,"mtime":1625111904081,"results":"62","hashOfConfig":"63"},{"size":3146,"mtime":1624524562928,"results":"64","hashOfConfig":"63"},{"size":1470,"mtime":1623038360840,"results":"65","hashOfConfig":"63"},{"size":395,"mtime":1619762880439,"results":"66","hashOfConfig":"63"},{"size":412,"mtime":1619762880454,"results":"67","hashOfConfig":"63"},{"size":458,"mtime":1619762880454,"results":"68","hashOfConfig":"63"},{"size":524,"mtime":1623404541812,"results":"69","hashOfConfig":"63"},{"size":503,"mtime":1611296376627,"results":"70","hashOfConfig":"63"},{"size":307,"mtime":1611741122338,"results":"71","hashOfConfig":"63"},{"size":9055,"mtime":1623641173674,"results":"72","hashOfConfig":"63"},{"size":5864,"mtime":1623641173674,"results":"73","hashOfConfig":"63"},{"size":5737,"mtime":1622085221121,"results":"74","hashOfConfig":"63"},{"size":1492,"mtime":1623641173670,"results":"75","hashOfConfig":"63"},{"size":2181,"mtime":1624856695017,"results":"76","hashOfConfig":"63"},{"size":1431,"mtime":1624856695016,"results":"77","hashOfConfig":"63"},{"size":24576,"mtime":1625127585213,"results":"78","hashOfConfig":"63"},{"size":2185,"mtime":1624856695016,"results":"79","hashOfConfig":"63"},{"size":2717,"mtime":1623060771473,"results":"80","hashOfConfig":"63"},{"size":10001,"mtime":1624856695014,"results":"81","hashOfConfig":"63"},{"size":2182,"mtime":1623641173673,"results":"82","hashOfConfig":"63"},{"size":2415,"mtime":1624856695015,"results":"83","hashOfConfig":"63"},{"size":1116,"mtime":1623404541807,"results":"84","hashOfConfig":"63"},{"size":3289,"mtime":1623641173672,"results":"85","hashOfConfig":"63"},{"size":3905,"mtime":1623405810818,"results":"86","hashOfConfig":"63"},{"size":1841,"mtime":1624856695016,"results":"87","hashOfConfig":"63"},{"size":4533,"mtime":1624856695017,"results":"88","hashOfConfig":"63"},{"size":691,"mtime":1623038360840,"results":"89","hashOfConfig":"63"},{"size":3027,"mtime":1623641173675,"results":"90","hashOfConfig":"63"},{"size":3233,"mtime":1623641173671,"results":"91","hashOfConfig":"63"},{"size":3522,"mtime":1623641173669,"results":"92","hashOfConfig":"63"},{"size":2063,"mtime":1625115133355,"results":"93","hashOfConfig":"63"},{"size":4902,"mtime":1625115583075,"results":"94","hashOfConfig":"63"},{"size":3927,"mtime":1623641173671,"results":"95","hashOfConfig":"63"},{"size":6740,"mtime":1624856695013,"results":"96","hashOfConfig":"63"},{"size":22974,"mtime":1624856695014,"results":"97","hashOfConfig":"63"},{"size":13066,"mtime":1623404541808,"results":"98","hashOfConfig":"63"},{"size":71,"mtime":1625113143404,"results":"99","hashOfConfig":"63"},{"size":2249,"mtime":1623641173665,"results":"100","hashOfConfig":"63"},{"size":2304,"mtime":1614929741518,"results":"101","hashOfConfig":"63"},{"size":1536,"mtime":1623060771464,"results":"102","hashOfConfig":"63"},{"size":12784,"mtime":1625112930553,"results":"103","hashOfConfig":"63"},{"size":631,"mtime":1622706740755,"results":"104","hashOfConfig":"63"},{"size":417,"mtime":1622085221121,"results":"105","hashOfConfig":"63"},{"size":1835,"mtime":1623158949706,"results":"106","hashOfConfig":"63"},{"size":939,"mtime":1623404541804,"results":"107","hashOfConfig":"63"},{"size":2076,"mtime":1623158949706,"results":"108","hashOfConfig":"63"},{"size":1003,"mtime":1622436559317,"results":"109","hashOfConfig":"63"},{"size":4708,"mtime":1623404541806,"results":"110","hashOfConfig":"63"},{"size":318,"mtime":1623404541804,"results":"111","hashOfConfig":"63"},{"size":4830,"mtime":1623404541807,"results":"112","hashOfConfig":"63"},{"size":675,"mtime":1623038360840,"results":"113","hashOfConfig":"63"},{"size":873,"mtime":1623125834416,"results":"114","hashOfConfig":"63"},{"size":1469,"mtime":1624856695012,"results":"115","hashOfConfig":"63"},{"size":4895,"mtime":1625127281361,"results":"116","hashOfConfig":"63"},{"size":4908,"mtime":1624856695012,"results":"117","hashOfConfig":"63"},{"size":700,"mtime":1623121026730,"results":"118","hashOfConfig":"63"},{"size":17137,"mtime":1625115178751,"results":"119","hashOfConfig":"63"},{"size":346,"mtime":1623404541811,"results":"120","hashOfConfig":"63"},{"size":2075,"mtime":1623404541804,"results":"121","hashOfConfig":"63"},{"size":2431,"mtime":1625128001084,"results":"122","hashOfConfig":"63"},{"size":263,"mtime":1625127028400,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},"1a4iafk",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"127"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"127"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"127"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"127"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"127"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"127"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"127"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"127"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"127"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"127"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"127"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"127"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"127"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"127"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"127"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"127"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"127"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"127"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"127"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"127"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"127"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"127"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"127"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"127"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"127"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"127"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"127"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"127"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"127"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"127"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Dev\\curious-app75\\frontend\\src\\index.js",["280"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { ApolloClient, InMemoryCache, HttpLink, ApolloLink, concat, split} from '@apollo/client/core';\r\nimport { onError } from 'apollo-link-error';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport { WebSocketLink } from '@apollo/client/link/ws'\r\nimport { getMainDefinition } from '@apollo/client/utilities'\r\n\r\nimport { destorySession } from './util/Session';\r\n\r\n// Importing styles\r\nimport './index.css'\r\n\r\n// Importing components\r\nimport App from './App'\r\n\r\n// const link = from([\r\n//   new HttpLink({uri: 'https://us-central1-insvire-curious-app.cloudfunctions.net/graphql'})\r\n// ])\r\nconst httpUrl = 'http://localhost:5000/insvire-curious-app/us-central1/graphql';\r\nconst wsUrl = 'ws://localhost:5000/graphql';\r\n\r\nconst httpLink = ApolloLink.from([\r\n  new ApolloLink((operation, forward) => {\r\n    const token = localStorage.token\r\n    if(token) {\r\n      operation.setContext({\r\n        headers: {\r\n          \"Authorization\" : `Bearer ${token}`\r\n        }\r\n      })\r\n    }\r\n    return forward(operation)\r\n  }),\r\n  new HttpLink({uri: httpUrl})\r\n   //new HttpLink({uri: process.env.REACT_APP_GRAPHQL_ENDPOINT})\r\n])\r\n\r\n\r\n\r\nconst errorLink = onError(\r\n  ({ graphQLErrors, networkError, operation, forward }) => {\r\n    if (graphQLErrors) {\r\n      for (let err of graphQLErrors) {\r\n        console.log('error: ',err);\r\n        switch (err.extensions.code) {\r\n          case \"UNAUTHENTICATED\":\r\n            // error code is set to UNAUTHENTICATED\r\n            if (err.message.includes('Firebase ID token has expired')) {\r\n              destorySession();\r\n              \r\n              window.location.href = '/';\r\n            }\r\n          default:\r\n            console.log(err.extensions)\r\n        }\r\n      }\r\n    }\r\n    if (networkError) {\r\n      console.log(`[Network error]: ${networkError}`);\r\n      // if you would also like to retry automatically on\r\n      // network errors, we recommend that you use\r\n      // apollo-link-retry\r\n    }\r\n  }\r\n);\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: wsUrl,\r\n  options: {\r\n    connectionParams: () => ({\r\n      accessToken: localStorage.token\r\n    }),\r\n    lazy: true,\r\n    reconnect: true\r\n  }\r\n})\r\n\r\nfunction isSubscription(operation) {\r\n  const definition = getMainDefinition(operation.query);\r\n  return definition.kind === 'OperationDefinition' \r\n    && definition.operation === 'subscription'\r\n}\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: concat(errorLink, split(isSubscription, wsLink, httpLink,)),\r\n  defaultOptions: {query: {fetchPolicy: 'no-cache'}}\r\n});\r\n\r\nwindow.isMobile = isMobile;\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n",["281","282"],"D:\\Web Dev\\curious-app75\\frontend\\src\\App.js",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Session.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\AuthRoute.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\UserRoute.jsx",["283"],"import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction UserRoute({ component: Component, ...rest }) {\r\n    const user = localStorage.token\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                !user ? <Redirect to='/' /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default UserRoute;","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\HomeRoute.jsx",["284"],"import React, { useContext } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport home from '../pages/home';\r\n\r\nfunction HomeRoute({ component: Component, ...rest }) {\r\n    const user = localStorage.token\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                user ? <Route exact path=\"/\" component={home} /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default HomeRoute;","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\GoogleAuthRoute.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\FacebookAuthRoute.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\context\\Context.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\register.jsx",["285","286"],"import React, { useContext, useState } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Select,\r\n    Checkbox,\r\n    Button,\r\n    DatePicker,\r\n    Alert\r\n} from 'antd';\r\nimport { useMutation } from '@apollo/client'\r\nimport { REGISTER_USER } from '../GraphQL/Mutations'\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../context/auth'\r\n\r\nimport {dial} from './Countries'\r\n\r\nconst { Option } = Select;\r\nconst gender = [\r\n    {\r\n        value: 'male',\r\n        label: 'male',\r\n    },\r\n    {\r\n        value: 'female',\r\n        label: 'female',\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'other',\r\n    },\r\n];\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n    },\r\n};\r\n\r\nconst Register = (props) => {\r\n    const context = useContext(AuthContext)\r\n    const [form] = Form.useForm();\r\n    const [errors, setErrors] = useState({});\r\n    console.log(context.facebookData);\r\n\r\n    const [registerUser, { loading, data }] = useMutation(REGISTER_USER, {\r\n        update(_, { data: { registerUser: userData } }) {\r\n            context.login(userData)\r\n            props.history.push('/')\r\n        },\r\n        onError(err) {\r\n            console.log(err.message);\r\n            setErrors(err.message)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        const { birthday, email, gender, username, password, phone, phoneCode } = values\r\n        registerUser({ variables: { username, email, password, gender: gender[0], birthday: birthday._d, mobileNumber: `${(phoneCode || dial[0].dial_code) + phone}` } })\r\n        console.log('Received values of form: ', values);\r\n    };\r\n    const onCloseErr = (e) => {\r\n        console.log(e, 'I was closed.');\r\n    };\r\n\r\n   const dialData = dial.map(item => {\r\n    return <Option value={item.dial_code}>{item.dial_code}</Option>\r\n   })\r\n    const phoneCode = (\r\n        <Form.Item name=\"phoneCode\" noStyle>\r\n            <Select\r\n                defaultValue={dial[0].dial_code}\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n               {dialData}\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to ='/'>\r\n                <div className=\"centeringImage\">\r\n                <div className=\"curious centeringImage\" style={{ marginTop: 50, }} />\r\n                </div>\r\n                </Link>\r\n                \r\n                <div>\r\n\r\n                </div>\r\n                <div class=\"ui card container centeringImage\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30 }}>\r\n                    <div class=\"content\">\r\n                        <Form\r\n                            form={form}\r\n                            name=\"register\"\r\n                            onFinish={onFinish}\r\n                            initialValues={{\r\n                                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                                prefix: '86',\r\n                            }}\r\n                            scrollToFirstError\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'The input is not valid E-mail!',\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your E-mail!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n\r\n                                <Input placeholder=\"Email adress\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n\r\n                                name=\"phone\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your phone number!',\r\n                                    },\r\n                                ]}\r\n\r\n\r\n                            >\r\n                                <Input\r\n                                    addonBefore={phoneCode}\r\n                                    placeholder=\"Phone number\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                className=\"radius\"\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your nickname!',\r\n                                        whitespace: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Username\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your password!',\r\n                                    },\r\n                                ]}\r\n                                hasFeedback\r\n                            >\r\n                                <Input.Password placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"birthday\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your birthday!'\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <DatePicker placeholder=\"birthday\" style={{ width: 285 }} />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"gender\"\r\n                                rules={[\r\n                                    {\r\n                                        type: 'array',\r\n                                        required: true,\r\n                                        message: 'Please select your gender!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Cascader options={gender} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"agreement\"\r\n                                valuePropName=\"checked\"\r\n                                rules={[\r\n                                    {\r\n                                        validator: (_, value) =>\r\n                                            value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n                                    },\r\n                                ]}\r\n                                {...tailFormItemLayout}\r\n                                style={{ marginRight: 160 }}\r\n                            >\r\n                                <Checkbox  style={{width: 200}}>\r\n                                    I have read the agreement\r\n                                </Checkbox>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className='centeringButton' style={{ marginTop: 10, backgroundColor: '#7f57ff' }}>\r\n                                    Register\r\n                                </Button>\r\n                                <p style={{ fontSize: 12, textAlign: 'center', marginTop: 60 }}>By signing up, you agree to our <span style={{ fontWeight: 'bold' }}>Terms & Privacy Policy</span></p>\r\n                            </Form.Item>\r\n                            {Object.keys(errors).length > 0 && (\r\n                                <Alert\r\n                                    message={errors}\r\n                                    type=\"error\"\r\n                                    closable\r\n                                    onClose={onCloseErr}\r\n                                />\r\n                            )}\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerGoogle.jsx",["287","288","289"],"import React, { useContext, useState } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Cascader,\r\n    Select,\r\n    Checkbox,\r\n    Button,\r\n    DatePicker,\r\n    Alert\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/client'\r\nimport { REGISTER_USER_GOOGLE } from '../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../context/auth'\r\n\r\n\r\nconst { Option } = Select;\r\nconst gender = [\r\n    {\r\n        value: 'male',\r\n        label: 'male',\r\n    },\r\n    {\r\n        value: 'female',\r\n        label: 'female',\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'other',\r\n    },\r\n];\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst RegisterGoogle = (props) => {\r\n    const context = useContext(AuthContext)\r\n    const [form] = Form.useForm();\r\n    const [errors, setErrors] = useState({});\r\n    console.log(context.googleData);\r\n\r\n    const [registerUserGoogle] = useMutation(REGISTER_USER_GOOGLE, {\r\n        update(_, { data: { registerUserWithGoogle: userData } }){\r\n            context.login(userData)\r\n            props.history.push('/')\r\n        },\r\n        onError(err) {\r\n            console.log(err.message);\r\n            setErrors(err.message)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        const { birthday, gender, phone, phoneCode } = values\r\n        const { email, username, imageUrl, token, id } = context.googleData\r\n        registerUserGoogle({ variables: { gender: gender[0], birthday: birthday._d, mobileNumber: `${phoneCode + phone}`, username, email, imageUrl, token, id } })\r\n        console.log(context.googleData, values);\r\n    };\r\n    const onCloseErr = (e) => {\r\n        console.log(e, 'I was closed.');\r\n    };\r\n    const phoneCode = (\r\n        <Form.Item name=\"phoneCode\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"+62\">+62</Option>\r\n                <Option value=\"+87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className=\"curious\" />\r\n                <div class=\"ui card container\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30 }}>\r\n                    <div class=\"content\">\r\n\r\n                        <Form\r\n                            form={form}\r\n                            name=\"register\"\r\n                            onFinish={onFinish}\r\n                            initialValues={{\r\n                                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                                prefix: '86',\r\n                            }}\r\n                            scrollToFirstError\r\n                        >\r\n            <h3>Hello, {context.googleData.username}</h3>\r\n            <p>isi data data di bawah untuk menyelesaikan pendaftaran anda</p>\r\n\r\n            <Form.Item\r\n                name=\"gender\"\r\n                label=\"chose gender\"\r\n                rules={[\r\n                    {\r\n                        type: 'array',\r\n                        required: true,\r\n                        message: 'Please select your gender!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Cascader options={gender} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your phone number!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    addonBefore={phoneCode}\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"birthday\"\r\n                name=\"birthday\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your birthday!',\r\n                    },\r\n                ]}\r\n            >\r\n                <DatePicker />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"agreement\"\r\n                valuePropName=\"checked\"\r\n                rules={[\r\n                    {\r\n                        validator: (_, value) =>\r\n                            value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n                    },\r\n                ]}\r\n                {...tailFormItemLayout}\r\n            >\r\n                <Checkbox>\r\n                    I have read the agreement\r\n                </Checkbox>\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{backgroundColor: \"#7f57ff\", borderRadius: 10}}>\r\n                    Register\r\n        </Button>\r\n            </Form.Item>\r\n            {Object.keys(errors).length > 0 && (\r\n                <Alert\r\n                    message={errors}\r\n                    type=\"error\"\r\n                    closable\r\n                    onClose={onCloseErr}\r\n                />\r\n            )}\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterGoogle\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerFacebook.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\grid.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\subscribePosts.jsx",["290","291","292"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_SUBSCRIBED_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\nimport SkeletonLoading from '../components/SkeletonLoading'\r\nimport Radius from '../assets/Radius.jpg'\r\n\r\nfunction SubscribePosts() {\r\n    const { data } = useQuery(GET_SUBSCRIBED_POSTS, {\r\n        fetchPolicy: \"network-only\"\r\n      });\r\n\r\n    const _isMounted = useRef(false);\r\n    const { subscribePosts, setSubscribePosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setSubscribePosts(data.getSubscribePosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!subscribePosts || !subscribePosts.length ? (\r\n                <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>Subcribe to a Post that goes fire</h4>\r\n                <h4 style={{textAlign: 'center'}}>So you will get an Update on Notification</h4>\r\n                <h4 style={{textAlign: 'center'}}>and never miss what's happening</h4>\r\n            </div>\r\n                )\r\n                    : subscribePosts.map((post, key) => (\r\n                        <div key={`posts subscribe ${key}`} style={key == 0 ? { marginTop: 40 }: { marginTop: 0 }}>\r\n                        <PostCard post={post} type=\"subscribe_posts\" loading={loading} />\r\n                    </div>\r\n                ))}\r\n            </div>) : <SkeletonLoading />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubscribePosts","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\nearby.jsx",["293"],"import { useContext, useEffect } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport PostCard from \"../components/PostCard/index\";\r\nimport InfiniteScroll from \"../components/InfiniteScroll\";\r\n\r\nimport { GET_POSTS_BASED_ON_NEAREST_LOC } from \"../GraphQL/Queries\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nconst NearbyPost = (props) => {\r\n  const { user } = useContext(AuthContext)\r\n  const lat = JSON.parse(localStorage.location).lat;\r\n  const lng = JSON.parse(localStorage.location).lng;\r\n\r\n  const { data, loading: loadingPosts } = useQuery(\r\n    GET_POSTS_BASED_ON_NEAREST_LOC,\r\n    {\r\n      variables: { lat: lat.toString(), lng: lng.toString() },\r\n    }\r\n  );\r\n\r\n  const posts = get(data, \"getPostBasedOnNearestLoc\") || [];\r\n\r\n  if (loadingPosts) return <div>loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <InfiniteScroll isLoading={loadingPosts}>\r\n        {!posts\r\n          ? null\r\n          : posts.map((post, key) => {\r\n              return user &&\r\n                post.muted.find((mute) => mute.owner === user.username) ? (\r\n                <div key={`posts${post.id} ${key}`}></div>\r\n              ) : (\r\n                <div key={`posts${post.id} ${key}`}>\r\n                  <PostCard post={post} loading={loadingPosts} />\r\n                </div>\r\n              );\r\n            })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearbyPost;\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\detailPost.jsx",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313"],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\mutedPosts.jsx",["314","315","316","317","318"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_MUTED_POSTS, GET_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport Radius from '../assets/Radius.jpg'\r\nfunction MutedPost() {\r\n    const { data } = useQuery(GET_MUTED_POSTS);\r\n\r\n    const _isMounted = useRef(false);\r\n    const { mutedPost, setMutedPost, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setMutedPost(data.mutedPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!mutedPost || mutedPost.length < 1 ? (\r\n                    <div className=\"centeringButton\">\r\n                        <img src={Radius} style={{ width: 300}} />\r\n                        <h4 style={{textAlign: 'center'}}>Here you can mute a post u dont like</h4>\r\n                        <h4 style={{textAlign: 'center'}}>and unmute to see it again</h4>\r\n                    </div>\r\n                )\r\n                    : mutedPost.map((post, key) => {\r\n                        return (\r\n                                <div key={`posts${post.id} ${key}`} style={key == 0 ? { marginTop: 40 }: { marginTop: 0 }}>\r\n                                    {console.log(post)}\r\n                                <PostCard post={post} type=\"muted_posts\" loading={loading} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>) : <p className='centeringButton'>test</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MutedPost","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\room.jsx",["319","320","321","322","323"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_ROOM_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport { getSession } from '../util/Session';\r\n\r\n\r\nfunction Room(props) {\r\n    console.log();\r\n    const room = props.match.path\r\n    const _isMounted = useRef(false);\r\n    const { room_1, setRoom, room_2, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_ROOM_POSTS, {\r\n        fetchPolicy: \"network-only\",\r\n      });\r\n    \r\n    useEffect(() => {\r\n        if (room) {\r\n            getPosts({ variables: { room } });\r\n        }\r\n    }, [room]);\r\n\r\n    useEffect(() => {\r\n        if (data  && !_isMounted.current) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            setRoom(data.getRoomPosts)\r\n\r\n            if(room_1.length && room_2.length){\r\n                _isMounted.current = true\r\n            }\r\n            // set did mount react\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {room === \"/Insvire E-Sport\" ? (user ? ( !room_1 ? null\r\n                    : room_1.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })) : null) : (user ? ( !room_2 ? null\r\n                        : room_2.map((post, key) => {\r\n                            const { muted, id } = post;\r\n                            const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                            \r\n                            return (\r\n                                <div key={`posts${id} ${key}`}>\r\n                                    {!isMuted && <PostCard post={post} loading={loading} />}\r\n                                </div>\r\n                            )\r\n                        })) : null)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Profile.jsx",["324","325","326","327","328","329","330","331","332","333","334","335","336"],"// Modules\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport cn from \"classnames\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { chunk } from \"lodash\";\r\nimport { GET_PROFILE_POSTS, GET_PROFILE_LIKED_POSTS } from \"../GraphQL/Queries\";\r\nimport { CHANGE_PP } from \"../GraphQL/Mutations\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../App.css\";\r\nimport { Col, Row, Tabs, Upload } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nimport ImgCrop from \"antd-img-crop\";\r\n\r\n//assets\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\nimport IconCrash from \"../assets/ic-crash.png\";\r\nimport Radius from '../assets/radius.png'\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport PostCard from \"../components/PostCard/index\";\r\nimport AppBar from \"../components/AppBar\";\r\n\r\n// Init Firebase\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport { PostContext } from \"../context/posts\";\r\nimport SkeletonLoading from \"../components/SkeletonLoading\";\r\nconst storage = firebase.storage();\r\n\r\nconst InitialState = {\r\n  url: \"\",\r\n  isFinishUpload: false,\r\n};\r\n\r\nfunction Profile() {\r\n  const { data: getProfilePosts, loading } = useQuery(GET_PROFILE_POSTS, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const { data: getProfileLikedPost } = useQuery(GET_PROFILE_LIKED_POSTS, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [changePPuser, { data }] = useMutation(CHANGE_PP);\r\n  const { user, changeProfilePicture } = useContext(AuthContext);\r\n  const { posts, setPosts, likedPosts, setLikedPosts } =\r\n    useContext(PostContext);\r\n  const [gallery, setGallery] = useState([]);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [profilePicture, setProfilePicture] = useState(InitialState);\r\n  const { isFinishUpload, url } = profilePicture;\r\n\r\n  useEffect(() => {\r\n    if (getProfilePosts && getProfileLikedPost) {\r\n      setPosts(getProfilePosts.getProfilePosts);\r\n      setLikedPosts(getProfileLikedPost.getProfileLikedPost);\r\n    }\r\n  }, [getProfilePosts, getProfileLikedPost]);\r\n\r\n  //change Photo Profile funtion\r\n\r\n  \r\n  const handleChange = (value) => {\r\n    const uploadTask = storage\r\n      .ref(`proflePicture/${value.file.originFileObj.name}`)\r\n      .put(value.file.originFileObj);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      () => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      async () => {\r\n        storage\r\n          .ref(\"proflePicture\")\r\n          .child(value.file.originFileObj.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setProfilePicture({ url, isFinishUpload: true });\r\n            changeProfilePicture(url);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFinishUpload) {\r\n      changePPuser({ variables: { url } });\r\n    }\r\n  }, [url, isFinishUpload]);\r\n\r\n  //set location\r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!loading && getProfilePosts) {\r\n      const filterByMedia =\r\n        getProfilePosts &&\r\n        getProfilePosts.getProfilePosts.filter((post) => {\r\n          const hasMedia = post.media && post.media.length >= 1;\r\n\r\n          if (hasMedia) return post;\r\n        });\r\n\r\n      const gallery = chunk(filterByMedia, 4);\r\n\r\n      setGallery(gallery);\r\n    }\r\n  }, [loading, getProfilePosts]);\r\n\r\n  const likeCounter =\r\n    getProfilePosts &&\r\n    getProfilePosts.getProfilePosts.map((doc) => doc.likeCount);\r\n  const { TabPane } = Tabs;\r\n\r\n  const Demo = () => (\r\n    <Tabs defaultActiveKey=\"1\" centered>\r\n      <TabPane tab=\"Posts\" key=\"1\">\r\n        {!getProfilePosts ? (\r\n          <SkeletonLoading />\r\n        ) : (\r\n          posts.map((post, key) => {\r\n            return (\r\n              user && (\r\n                <div key={`posts${post.id} ${key}`}>\r\n                  <PostCard post={post} type=\"nearby\" loading={loading} />\r\n                </div>\r\n              )\r\n            );\r\n          })\r\n        )}\r\n      </TabPane>\r\n      <TabPane tab=\"Liked\" key=\"2\">\r\n        {!getProfileLikedPost ? (\r\n          <SkeletonLoading />\r\n        ) : (\r\n          getProfileLikedPost.getProfileLikedPost.length ? (\r\n            likedPosts.map((post, key) => {\r\n              return (\r\n                post &&\r\n                user && (\r\n                  <div key={`posts${post.id} ${key}`}>\r\n                    <PostCard post={post} type='liked_posts' loading={loading} />\r\n                  </div>\r\n                )\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>Try Upload a Photo when posting</h4>\r\n                <h4 style={{textAlign: 'center'}}>and make your post more atractive</h4>\r\n                <h4 style={{textAlign: 'center'}}>and your photo colection will shown up here</h4>\r\n            </div>\r\n          )\r\n        )}\r\n      </TabPane>\r\n\r\n      <TabPane tab=\"Media\" key=\"3\">\r\n        {gallery.length ? (\r\n          gallery.map((media) => (\r\n            <div className=\"gallery\">\r\n              {media.length &&\r\n                media.map((photo, idx) => {\r\n                  const imgClass = cn({\r\n                    gallery_item_right: idx == 1,\r\n                    gallery_item_left: idx == 2,\r\n                    gallery__img: idx != 1 || idx != 2,\r\n                  });\r\n                  return  (\r\n                    <img\r\n                      key={`Media${idx}`}\r\n                      src={photo.media}\r\n                      onError={(e) => {\r\n                        e.target.onerror = null;\r\n                        e.target.src = IconCrash;\r\n                      }}\r\n                      className={imgClass}\r\n                      alt=\"Image 1\"\r\n                    />\r\n                  )\r\n                })}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>Try Upload a Photo when posting</h4>\r\n                <h4 style={{textAlign: 'center'}}>and make your post more atractive</h4>\r\n                <h4 style={{textAlign: 'center'}}>and your photo colection will shown up here</h4>\r\n            </div>\r\n        )}\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n\r\n  let repostCount = posts\r\n    ? posts.reduce((accumulator, current) => {\r\n        return accumulator + current.repostCount;\r\n      }, 0)\r\n    : 0;\r\n    console.log(user.username, posts);\r\n  return (\r\n    <div>\r\n      <AppBar title=\"My Profile\" />\r\n      <div\r\n        style={{ margin: \"auto\", width: 80, marginTop: 60, marginBottom: -10, backgroundColor: 'white' }}\r\n      >\r\n        <div style={{ position: \"relative\", textAlign: \"center\", width: 80, backgroundColor: 'white' }}>\r\n          <img\r\n            src={user.profilePicture}\r\n            style={{\r\n              borderRadius: \"50%\",\r\n              objectFit: \"cover\",\r\n              width: 80,\r\n              height: 80,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#7f57ff\",\r\n              color: \"white\",\r\n              borderRadius: \"50%\",\r\n              width: 21,\r\n              height: 21,\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              right: 0,\r\n            }}\r\n          >\r\n            <ImgCrop rotate>\r\n\r\n              <Upload onChange={handleChange} showUploadList={false}>\r\n                <EditOutlined  style={{ color: 'white'}}/>\r\n              </Upload>\r\n            </ImgCrop>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <h4 style={{ textAlign: \"center\" }}>{user.username}</h4>\r\n      <div style={{ textAlign: \"center\", margin: \"auto\", width: \"50%\" }}>\r\n        <Link to=\"/\">\r\n          <img src={Pin} style={{ width: 20, marginTop: -5 }} />\r\n          <span style={{ fontSize: 12 }}>{address}</span>\r\n        </Link>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          margin: \"auto\",\r\n          width: \"50%\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col span={8}>\r\n            <h5>\r\n              {getProfilePosts ? getProfilePosts.getProfilePosts.length : 0}\r\n            </h5>\r\n            <p>Post</p>\r\n          </Col>\r\n          <Col span={8}>\r\n            <h5>{repostCount}</h5>\r\n            <p>Repost</p>\r\n          </Col>\r\n          <Col span={8}>\r\n            <h5>\r\n              {getProfilePosts && likeCounter.length >= 1\r\n                ? likeCounter.reduce((total, num) => (total += num))\r\n                : 0}\r\n            </h5>\r\n            <p>Likes</p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          margin: \"auto\",\r\n          width: \"50%\",\r\n          marginTop: 20,\r\n          marginBottom: 40,\r\n        }}\r\n      >\r\n        <div className=\"ui action input\" style={{ height: 25 }}>\r\n          <input\r\n            type=\"text\"\r\n            value={`https://insvire-curious-app.web.app/profile/user/${user.id}`}\r\n          />\r\n          <button\r\n            className=\"ui teal right icon button\"\r\n            style={{ backgroundColor: \"#7F57FF\", fontSize: 10 }}\r\n          >\r\n            Copy\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {Demo()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\popular.jsx",["337","338","339"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_POPULAR_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport { getSession } from '../util/Session';\r\n\r\n\r\nfunction Popular() {\r\n    const _isMounted = useRef(false);\r\n    const { posts, setPosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const { location } = getSession();\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POPULAR_POSTS);\r\n    \r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n\r\n            getPosts({ variables: loc });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (data  && !_isMounted.current) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            setPosts(data.getPopularPosts)\r\n\r\n            _isMounted.current = true\r\n            // set did mount react\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {!posts ? null\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`} style={key == 0 ? { marginTop: 56 } : { marginTop: 0 }}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popular","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Settings.jsx",["340","341","342","343","344","345"],"import { List, message, Avatar, Spin } from 'antd';\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from \"../components/AppBar\";\r\nimport { RightOutlined } from '@ant-design/icons'\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_ACCOUNT } from '../GraphQL/Mutations';\r\nimport { AuthContext } from '../context/auth'\r\n\r\nexport default function Settings() {\r\n  const { user } = useContext(AuthContext)\r\n  const [deleteAccount] = useMutation(DELETE_ACCOUNT ,{\r\n    update(){\r\n      handleLogout()\r\n      window.location.href = '/'\r\n    },\r\n    onError(err){\r\n      console.log(err);\r\n    }\r\n  })\r\n\r\n  const handleDeleteAccount = () => {\r\n    if(user){\r\n      deleteAccount({ variables: { id: user.id } })\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear()\r\n  }\r\n  return (\r\n    <div>\r\n      <AppBar title=\"Settings\" />\r\n\r\n      <List\r\n      style={{marginTop: -15}}\r\n        size=\"large\"\r\n        bordered>\r\n        <Link to=\"/\">\r\n          <List.Item key='1'>\r\n            <List.Item.Meta\r\n              title=\"Term of Use\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <List.Item key='2'>\r\n            <List.Item.Meta\r\n              title=\"Share Curious App\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Community Guidelines\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Privacy Policy\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n        <a href=\"/\" onClick={handleLogout}>\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Logout\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </a>\r\n        <Link onClick={handleDeleteAccount}>\r\n          <List.Item key='3'>\r\n            <List.Item.Meta\r\n              title=\"Delete Account\"\r\n            />\r\n            <div><RightOutlined /></div>\r\n          </List.Item>\r\n        </Link>\r\n      </List>\r\n    </div>\r\n  )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\chat.jsx",["346","347","348"],"import { Button } from 'antd'\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport React from 'react'\r\nimport PlayStore from '../assets/buttonGoogle.png'\r\nimport Radius from '../assets/Radius.jpg'\r\nimport AppBar from './AppBar';\r\nexport default function Chat() {\r\n\r\n    return (\r\n        <div  style={{padding: 20}}>\r\n            <AppBar title=\"Chat\" />\r\n            <div className=\"centeringImage\">\r\n            <img src={Radius} style={{ width: 300}} />\r\n            </div>\r\n                <h4 style={{textAlign: 'center'}}>Download our Mobile Version To Use This Features</h4>\r\n                \r\n                <div className=\"centeringButton\">\r\n                    <a href=\"https://play.google.com/store/apps/details?id=com.ramadhan.curious\">\r\n                    <Button type=\"link\" style={{ width: 150}}> <img src={PlayStore} style={{width: 150}} /></Button>\r\n                    </a>\r\n                </div>\r\n\r\n                <h4 style={{textAlign: 'center', marginTop: 90}}> Click This Button Below To Download Mobile Version to get best experience</h4>\r\n            </div>\r\n    )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\login\\index.jsx",["349"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport '../reset-password/style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n      span: 8,\r\n  },\r\n  wrapperCol: {\r\n      span: 16,\r\n  },\r\n};\r\n\r\nconst Login = (props) => {\r\n  const context = useContext(AuthContext)\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [login, { loading }] = useMutation(LOGIN_USER, {\r\n      update(_, { data: { login } }) {\r\n          \r\n          context.login(login)\r\n          props.history.push('/')\r\n      },\r\n      onError(err) {\r\n          setErrors(err.message)\r\n      }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n      const { username, password } = values\r\n\r\n      login({ variables: { username, password } })\r\n  };\r\n\r\n  const onCloseErr = (e) => {\r\n      console.log(e, 'I was closed.');\r\n  };\r\n\r\n  return (\r\n    <div style={{height: '100%', background: 'white'}}>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n      </Link>\r\n      <div className=\"body-page ui card container\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30 }}>\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Sign in</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your email or username!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input placeholder=\"Email / Username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" \r\n              style={{ fontSize: '18px',padding: 0 }}>\r\n                {loading ? (<LoadingOutlined />): (\"Sign in\")} \r\n              </button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Link to='/resetPassword'>\r\n            <p style={{ textAlign: 'center' }}>Forgot Password?</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <p style={{ textAlign: 'center', marginTop: 30, fontSize: 14 }}>Don't have an account yet? <Link to=\"/register\" style={{ fontWeight: 'bold' }}>Sign Up</Link> now</p>\r\n      {Object.keys(errors).length > 0 && (\r\n        <Alert\r\n          message={errors}\r\n          type=\"error\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\map\\index.jsx",["350"],"import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Slider } from 'antd'\r\nimport {\r\n    GoogleMap,\r\n    useLoadScript,\r\n    Marker,\r\n    Circle\r\n} from '@react-google-maps/api'\r\nimport { Button } from 'antd';\r\nimport { AimOutlined, LeftOutlined } from '@ant-design/icons';\r\n\r\nimport { getRangeSearch } from '../../util/Session';\r\n\r\n// Constant\r\nimport { LS_LOCATION, R_SEARCH } from '../../context/constant'\r\nimport { MAP_API_KEY } from '../../util/ConfigMap';\r\n\r\n// Styles\r\nimport mapStyle from '../../util/style/mapstyle'\r\nimport './style.css';\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: '75vh'\r\n}\r\nconst options = {\r\n  styles: mapStyle,\r\n  disableDefaultUI: true,\r\n  zoomControl: true\r\n}\r\n\r\nconst MapHeader = props => {\r\n  const { onSetCurrentLoc, onBack } = props;\r\n\r\n  return (\r\n    <div className=\"header-map\">\r\n      <LeftOutlined\r\n        onClick={onBack}\r\n        className=\"header-map__navigate-left\"\r\n      />\r\n      <div className=\"header-map__title\">Change Location</div>\r\n      <AimOutlined\r\n        onClick={onSetCurrentLoc}\r\n        className=\"header-map__navigate-right\"\r\n      />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nconst Map = () => {\r\n  const currentPosition = localStorage.location && JSON.parse(localStorage.location)\r\n  \r\n  const [position, setPosition] = useState(currentPosition);\r\n  const range = getRangeSearch();\r\n  const history = useHistory();\r\n  \r\n  // Hooks Map\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: MAP_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [radius, setRadius] = useState(1000)\r\n\r\n  const marks = {\r\n    20: \"1km\",\r\n    40: \"5km\",\r\n    60: \"10km\",\r\n    80: \"15km\"\r\n  }\r\n\r\n  const handleBackPage = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const setCurrentLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const location = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n\r\n      localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n      setPosition(location);\r\n    })\r\n  }\r\n\r\n  const oSaveRangePosts = () => {\r\n    localStorage.setItem(R_SEARCH, radius / 1000);\r\n    history.push(\"/\");\r\n  }\r\n    \r\n  const onChangeSlider = (value) => {\r\n    let range = 1000\r\n\r\n    if (value <= 60) {\r\n      range = 5000\r\n    } else if (value <= 80) {\r\n      range = 10000\r\n    } else if (value <= 100) {\r\n      range = 15000\r\n    }\r\n\r\n    setRadius(range);\r\n  }\r\n\r\n  if (loadError) return 'Error loading page'\r\n  if (!isLoaded) return 'Loading Maps'\r\n\r\n  return (\r\n      <div>\r\n        <MapHeader\r\n          onSetCurrentLoc={setCurrentLocation}\r\n          onBack={handleBackPage}\r\n        />\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={radius >= 15000 ? 11 : 15}\r\n          center={position}\r\n          options={options}>\r\n          <Marker \r\n            position={position}\r\n            icon={{\r\n                url: 'https://firebasestorage.googleapis.com/v0/b/insvire-curious-app12.appspot.com/o/mapRadius%2Fpin-figma.png?alt=media&token=3d842f6c-3338-486c-8605-4940e05b96b6',\r\n                scaledSize: new window.google.maps.Size(15, 18)\r\n          }}/>\r\n          <Circle \r\n            center={position}\r\n            radius={radius}\r\n            options={{\r\n              fillColor: \"#e8e2d8\",\r\n              strokeColor: '#f6c059',\r\n              strokeWeight: 1\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n        <Slider marks={marks} defaultValue={[0, 100]} onChange={onChangeSlider} tooltipVisible={false}/>\r\n        <div className=\"footer-map\">\r\n          <Button\r\n            onClick={oSaveRangePosts}\r\n            className=\"footer-map__btn-confirm btn-curious-colors\"\r\n            type=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Map;","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\search\\index.jsx",["351","352","353","354","355"],"import { Input, Row, Col } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nimport AppBar from '../../components/AppBar';\r\n\r\nimport './style.css';\r\n\r\nconst Search = () => {\r\n  return (\r\n    <>\r\n    <AppBar title=\"Seach\" />\r\n\r\n    <div className=\"search_page\">\r\n      <Input placeholder=\"default size\" prefix={<SearchOutlined />} />\r\n      <div className=\"explore-place\">\r\n        <span className=\"title\">Explore Place</span>\r\n        <div className=\"explore-place__btn-more\">More</div>\r\n        <div className=\"list-place\">\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n\r\n          <Col lg={8} xs={9}>\r\n            <img className=\"item-place__image\" src=\"https://i.pinimg.com/originals/40/fa/a6/40faa6ee309d8a420f54f6420fd28955.jpg\"/>\r\n            <span className=\"item-place__title\">Karachi</span>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"popular-section\">\r\n        <div className=\"popular-section__header\">\r\n          <h3>More For You</h3>\r\n          <span>The most popular posts around the world</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search;\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\visited\\index.jsx",["356","357","358","359","360"],"import React, { useState, useEffect } from 'react'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport cn from 'classnames';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport { chunk } from 'lodash';\r\nimport { Row, Card, Skeleton, Space } from 'antd';\r\nimport AppBar from '../../components/AppBar';\r\n\r\n// Assets\r\nimport imageOne from '../../assets/beachone.jfif'\r\n\r\n// Queries\r\nimport { GET_VISITED } from '../../GraphQL/Queries';\r\n\r\nimport { LS_LOCATION } from '../../context/constant'\r\n\r\nimport './style.css';\r\n\r\nexport default function Visited() {\r\n  const [location, setLocation] = useState([]);\r\n  const history = useHistory();\r\n  const { data, loading } = useQuery(GET_VISITED);\r\n  const visited = data?.getVisited || [];\r\n\r\n  useEffect(() => {\r\n    if (!loading && visited.length) {\r\n      setLocation(chunk(visited, 4));\r\n    }\r\n  }, [loading, visited]);\r\n\r\n  const onChangeLocation = ({ lat, lng }) => {\r\n    const location = { lat, lng };\r\n\r\n    localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n\r\n    setTimeout(() => {\r\n      history.push('/');\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n      <div>\r\n          <AppBar title=\"Visited Places\"/>\r\n\r\n          {loading ? (\r\n            <div className=\"site-card-wrapper\" style={{margin: 10}}>\r\n              <Row style={{margin: 5}}>\r\n                <Space>\r\n                  <Skeleton.Button style={{ width: 187, height: 200, margin: 5 }} active />\r\n                </Space>\r\n                <Space>\r\n                  <Skeleton.Button style={{ width: 187, height: 200, margin: 5 }} active />\r\n                </Space>\r\n              </Row>\r\n            </div>\r\n          ) : (\r\n            <div className=\"site-card-wrapper\">\r\n                {location.length ? location.map(subLoc => {\r\n                  return (\r\n                    <div className=\"gallery-location\">\r\n                        {subLoc.length && subLoc.map((loc, idx) => {\r\n                            const {\r\n                              administrative_area_level_1: province,\r\n                              administrative_area_level_2: city,\r\n                              administrative_area_level_3: districts,\r\n                              createAt,\r\n                              location\r\n                            } = loc;\r\n                            \r\n                            const containerClass = cn({\r\n                              'VisitedClass': true,\r\n                              'gallery-location__item-right': idx == 1,\r\n                              'gallery-location__item-left': idx == 2,\r\n                              'gallery-location__img': idx != 1 || idx != 2\r\n                            });\r\n                            const address = `${province}, ${city}, ${districts}`;\r\n\r\n                            return (\r\n                              <Card \r\n                                className= {containerClass}\r\n                                bordered={false}\r\n                                onClick={() => {\r\n                                  onChangeLocation(location)\r\n                                }}\r\n                                cover={\r\n                                <>\r\n                                  <img alt=\"example\" src={imageOne} style={{width: '100%', height: '100%', borderRadius: 15}} />\r\n                                  <div style={{\r\n                                    position: \"absolute\",\r\n                                    bottom: 10,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    width: 180,\r\n                                  }}>\r\n                                    <h3 style={{\r\n                                      color: \"white\",\r\n                                      fontWeight: \"1200\",\r\n                                      fontSize: 16,\r\n                                      margin: 0,\r\n                                      overflow: \"hidden\",\r\n                                      textOverflow: \"ellipsis\"\r\n                                    }}>{address}</h3> \r\n                                    <p>{moment(createAt).fromNow()}</p>\r\n                                  </div>\r\n                                </>}\r\n                              />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                  )}\r\n                ) : <></>}\r\n            </div>\r\n          )}\r\n      </div>\r\n\r\n  )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\constant.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\reset-password\\index.jsx",["361","362"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../util/Firebase';\r\n\r\nimport './style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function ReserPassword(props) {\r\n  const context = useContext(AuthContext);\r\n  const [alert, setAlert] = useState('');\r\n  const [message, setMessage] = useState();\r\n\r\n  const [login] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login } }) {\r\n      \r\n      context.login(login)\r\n      props.history.push('/')\r\n    },\r\n    onError(err) {\r\n      setMessage(err.message)\r\n    }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n    const { email } = values\r\n\r\n    auth.sendPasswordResetEmail(email).then(\r\n      (resp) => {\r\n        console.log(\"email sent@: \", resp)\r\n        setAlert('success');\r\n        setMessage('Success send link reset passowrd to your email');\r\n      }\r\n    )\r\n    .catch(error => {\r\n      const { message, code } = error;\r\n      setAlert('error');\r\n\r\n      if (code === 'auth/user-not-found') {\r\n          setMessage('Email atau Username tidak ditemukan');\r\n\r\n          return;\r\n      }\r\n\r\n      setMessage(message);\r\n    })\r\n  };\r\n\r\n  const onCloseErr = (e) => {\r\n    console.log(e, 'I was closed.');\r\n    setAlert('');\r\n    setMessage('');\r\n  };\r\n  \r\n  console.log('message: ', !!(message && alert));\r\n  console.log('alert : ', alert)\r\n  return (\r\n    <div style={{background: 'white'}}>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n      </Link>\r\n      <div className=\"body-page ui card container\">\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Reset Password</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"email\"\r\n                className=\"body-page__textfield\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your email!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Email / Username\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" >\r\n                    Send Verification Email\r\n                </button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </div>\r\n      {!!(message && alert) && (\r\n        <Alert\r\n          message={message}\r\n          type={alert}\r\n          className=\"message-response\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\landing-page\\index.jsx",["363","364"],"import React from 'react'\r\nimport { Col, Row, Button } from 'antd'\r\n\r\nimport LoginFacebook from '../../components/LoginFacebookButton';\r\nimport LoginGoogle from '../../components/LoginGoogleButton';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport BGLanding from '../../assets/bg-landing.png';\r\n\r\nimport './style.css';\r\nimport { Bold } from 'tabler-icons-react';\r\n\r\nconst SignIn = (props) => {\r\n  return (\r\n  <div>\r\n    <Row>\r\n      <Col xs={0} sm={0} md={12} lg={12} xl={12}>\r\n        <div className=\"landingimage\" />\r\n        <div className=\"container-landing\">\r\n          <div className=\"curiouslanding\" />\r\n        </div>\r\n      </Col>\r\n      <Col xs={24} sm={24} md={12} lg={12} xl={12} style={{background: 'white'}}>\r\n        <div className=\"landingPage-input\">\r\n          {window.isMobile && <img src={BGLanding} width=\"250px\" />}\r\n          <h1  style={{ fontSize: \"40px\", color: \"#352A39\", textAlign:\"left\", paddingLeft:\"68px\"}}>Welcome to </h1>\r\n           <h1  style={{ marginTop: \"-20px\",fontSize: \"40px\", color: \"#352A39\", textAlign:\"left\", paddingLeft:\"68px\"}}>Curious!</h1> \r\n\r\n          <div className=\"btn-wrapper\">\r\n            <LoginFacebook props={props} />\r\n            <LoginGoogle props={props} />\r\n          </div>\r\n          \r\n          <Row style={{marginTop: 20}}>\r\n                <Col span={12} style={{paddingLeft: \"15%\", paddingRight: \"4%\"}}>\r\n                <Button className=\"ui black basic button\" style={{ width: \"100%\", height: 45, fontSize: '18px',padding: 0 }}>\r\n                    <Link to='/register'>\r\n                        Sign Up\r\n                    </Link>\r\n                </Button>\r\n                </Col>\r\n\r\n                <Col span={12} style={{paddingLeft: \"4%\", paddingRight: \"15%\"}}>\r\n                <Button className=\"ui black basic button\" style={{ width: \"100%\", height: 45, fontSize: '18px', padding: 0 }}>\r\n                    <Link to='login'>\r\n                        Login\r\n                    </Link>\r\n                </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n          <p style={{ marginTop: 30, fontSize: 14, color: \"#352A39\" }}>By signing up, you agree to our <span className=\"terms\">Terms & Privacy Policy</span></p>\r\n          <p className=\"copy-right\">&copy; 2020 Curious</p>\r\n\r\n          <Row>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Terms of Service\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Privacy Policy\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Cookie Policy\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 12, color: \"#352A39\" }}>\r\n                        Ads Info\r\n                    </Button>\r\n                </Col>\r\n            </Row>  \r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </div>)\r\n}\r\n\r\nexport default SignIn;\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\confirm-password\\index.jsx",["365","366"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../util/Firebase';\r\n\r\nimport '../reset-password/style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function ReserPassword(props) {\r\n  const context = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const search = history.location.search.substring(1);\r\n  const querystring = search && JSON.parse(\r\n    '{\"' + search.replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}',\r\n    function(key, value) { return key===\"\"?value:decodeURIComponent(value)\r\n  });\r\n\r\n  const { oobCode } = querystring;\r\n\r\n  // Local State\r\n  const [alert, setAlert] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [login] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login } }) {\r\n      \r\n      context.login(login)\r\n      props.history.push('/')\r\n    },\r\n    onError(err) {\r\n      setMessage(err.message)\r\n    }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n    const { password } = values\r\n\r\n    if (!oobCode) {\r\n      setAlert('error');\r\n      setMessage('Verify code is not valid or expired');\r\n    }\r\n\r\n    auth.confirmPasswordReset(oobCode, password).then(\r\n      () => {\r\n        setAlert('success');\r\n        setMessage('Success reset your password, will redirect to login page in a few seconds');\r\n\r\n        setTimeout(() => {\r\n          history.replace('/login');\r\n        }, 1500)\r\n      }\r\n    )\r\n    .catch(error => {\r\n      const { message, code } = error;\r\n      setAlert('error');\r\n\r\n      if (code === 'auth/user-not-found') {\r\n          setMessage('Email atau Username tidak ditemukan');\r\n\r\n          return;\r\n      }\r\n\r\n      setMessage(message);\r\n    })\r\n  };\r\n\r\n  const onCloseErr = () => {\r\n    setAlert('');\r\n    setMessage('');\r\n  };\r\n  \r\n  return (\r\n    <div style={{background: 'white'}}>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n        </Link>\r\n      <div className=\"body-page ui card container\">\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Change Password</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"password\"\r\n                className=\"body-page__textfield\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your new password!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Input your new password\" type=\"password\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" >\r\n                    Send\r\n                </button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </div>\r\n      {!!(message && alert) && (\r\n        <Alert\r\n          message={message}\r\n          type={alert}\r\n          className=\"message-response\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Queries.js",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Mutations.js",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\home.jsx",["367","368","369","370","371"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\n\r\nimport { useLazyQuery, useQuery } from '@apollo/client'\r\nimport { GET_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard/index'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport { getSession, getRangeSearch } from '../util/Session';\r\n\r\n//gambar\r\nimport Radius from '../assets/radius.png'\r\nimport SidebarMobile from '../components/SidebarMobile'\r\nimport BackDrop from '../components/BackDrop'\r\nimport NotificationMobile from '../components/NotificationMobile'\r\n\r\n\r\nfunction Home() {\r\n    const [burger, setBurger] = useState({\r\n        toggle : false\r\n    })\r\n    const [notif, setNotif] = useState({\r\n        toggle : false\r\n    })\r\n    const _isMounted = useRef(false);\r\n    const { posts, setPosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const handleBurger = () => {\r\n        setBurger(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    const handleNotif = () => {\r\n        setNotif(prevState => {\r\n            return {\r\n                toggle : !prevState.toggle\r\n            }\r\n        })\r\n    }\r\n    const handleBackdropClose = () => {\r\n        setBurger({toggle: false})\r\n    }\r\n\r\n    const { location } = getSession();\r\n    const range = getRangeSearch();\r\n\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POSTS, {\r\n        fetchPolicy: \"network-only\"\r\n      });\r\n    \r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n            getPosts({ variables: { ...loc, range: range ? parseFloat(range) : undefined } });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setPosts(data.getPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBar toggleOpen={handleBurger} toggleOpenNotif={handleNotif} />\r\n            <div style={{marginBottpm : 30}} />\r\n            <NotificationMobile show={notif.toggle} />\r\n            <SidebarMobile show={burger.toggle} />\r\n            {burger.toggle ? <BackDrop click={handleBackdropClose} /> : null}\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {_isMounted.current && !loading && !posts.length ? (\r\n                <div className=\"centeringButton\">\r\n                <img src={Radius} style={{ width: 300}} />\r\n                <h4 style={{textAlign: 'center'}}>There is no Nearby post around you</h4>\r\n                <h4 style={{textAlign: 'center'}}>be the first to post in your area!</h4>\r\n                <h4 style={{textAlign: 'center'}}>or change your location to see other post around</h4>\r\n            </div>\r\n                )\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`} style={key == 0 ? { marginTop: 56 }: { marginTop: 0 }} >\r\n                                {!isMuted && <PostCard post={post} type=\"nearby\" loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\auth.jsx",["372","373","374","375"],"// Modules\r\nimport React, { useReducer, createContext, useEffect, useMemo } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { get } from \"lodash\";\r\n\r\n// Helper\r\nimport { Session } from \"../util/Session\";\r\nimport { auth } from \"../util/Firebase\";\r\n\r\n// Graphql\r\nimport { GET_USER_DATA } from \"../GraphQL/Queries\";\r\n\r\n// Constant\r\nimport {\r\n  GET_LOCATION,\r\n  SET_NOTIFICATIONS,\r\n  SET_USER_DATA,\r\n  REGISTER_WITH_fACEBOOK,\r\n  REGISTER_WITH_GOOGLE,\r\n  LOGOUT,\r\n  LS_LOCATION,\r\n  LS_TOKEN,\r\n  NOTIFICATION_READ,\r\n  NOTIFICATIONS_READ,\r\n  SET_PROFILE_PICTURE,\r\n  SET_ROOM\r\n} from \"./constant\";\r\n\r\nconst initialState = {\r\n  user: \"\",\r\n  location: \"\",\r\n  liked: [],\r\n  notifications: [],\r\n  room: null,\r\n  facebookData: null,\r\n  googleData: null\r\n};\r\n\r\nconst { location, user } = Session({ onLogout: () => {} });\r\n\r\n// Reinit Users\r\ninitialState.user = user;\r\ninitialState.location = location ? location : '';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case GET_LOCATION:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          location: action.payload,\r\n        },\r\n      };\r\n    case SET_PROFILE_PICTURE:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          profilePicture: action.payload\r\n        }\r\n      }\r\n    case SET_NOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        notifications: action.payload,\r\n      };\r\n    case \"SET_LIKED_DATA\":\r\n      return {\r\n        ...state,\r\n        liked: action.payload,\r\n      };\r\n    case \"CLEAR_ALL_NOTIFICATIONS\":\r\n      return{\r\n        ...state,\r\n        notifications: []\r\n      }\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_WITH_fACEBOOK:\r\n      return {\r\n        ...state,\r\n        facebookData: action.payload,\r\n      };\r\n      case REGISTER_WITH_GOOGLE:\r\n      return {\r\n        ...state,\r\n        googleData: action.payload,\r\n      };\r\n    case SET_ROOM:\r\n      return {\r\n        ...state,\r\n        room: action.payload === \"Nearby\" ? null : action.payload\r\n      }\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case NOTIFICATIONS_READ:\r\n      return {\r\n        ...state,\r\n        notifications : action.payload\r\n      }\r\n    case NOTIFICATION_READ:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map((notif) => {\r\n          if (notif.id === action.payload.id) {\r\n            const updatedPosts = {\r\n              ...notif,\r\n              read: true,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return notif;\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction showError(error) {\r\n  switch (error.code) {\r\n    case error.PERMISSION_DENIED:\r\n      console.log(\"User denied the request for Geolocation.\");\r\n      break;\r\n    case error.POSITION_UNAVAILABLE:\r\n      console.log(\"Location information is unavailable.\");\r\n      break;\r\n    case error.TIMEOUT:\r\n      console.log(\"The request to get user location timed out.\");\r\n      break;\r\n    case error.UNKNOWN_ERROR:\r\n      console.log(\"An unknown error occurred.\");\r\n      break;\r\n  }\r\n}\r\n\r\nexport function AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check Sessions\r\n  const { token } = Session({ onLogout: logout });\r\n\r\n  const { user, facebookData, googleData, liked, notifications, room } = state\r\n\r\n  // Mutations\r\n  const [\r\n    loadDataUser,\r\n    { refetch, called, loading, data, error },\r\n  ] = useLazyQuery(GET_USER_DATA);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // do load data user with token from localstorage\r\n      if (!called) {\r\n        return loadDataUser();\r\n      }\r\n\r\n      return refetch();\r\n    } else {\r\n      // do check session for user login with provider\r\n      auth.onAuthStateChanged((user) => {\r\n        if (user) {\r\n          if (!called) return loadDataUser();\r\n\r\n          return refetch();\r\n        }\r\n\r\n        return logout();\r\n      });\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    const hasErrors = error && error.length;\r\n\r\n    if (hasErrors) logout();\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!loading && data && !error) {\r\n      const user = get(data, \"getUserData.user\", {});\r\n      const notifications = get(data, \"getUserData.notifications\", []);\r\n      const likes = get(data, \"getUserData.liked\", []);\r\n\r\n      dispatch({\r\n        type: SET_USER_DATA,\r\n        payload: user,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"SET_LIKED_DATA\",\r\n        payload: likes,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_NOTIFICATIONS,\r\n        payload: notifications,\r\n      });\r\n    }\r\n  }, [loading, data]);\r\n\r\n  function clearNotifications(){\r\n    dispatch({\r\n      type: \"CLEAR_ALL_NOTIFICATIONS\"\r\n    })\r\n  }\r\n\r\n  function getGeoLocation(position) {\r\n    const location = {\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n    };\r\n\r\n    localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n\r\n    dispatch({\r\n      type: GET_LOCATION,\r\n      payload: location,\r\n    });\r\n  }\r\n  \r\n  function setRoom(room){\r\n    dispatch({\r\n      type: SET_ROOM,\r\n      payload: room\r\n    })\r\n  }\r\n\r\n  function changeProfilePicture(url) {\r\n    dispatch({\r\n      type: SET_PROFILE_PICTURE,\r\n      payload: url\r\n    })\r\n  }\r\n\r\n  function login(userData) {\r\n    navigator.geolocation.getCurrentPosition(getGeoLocation, showError);\r\n\r\n    localStorage.setItem(LS_TOKEN, userData);\r\n\r\n    dispatch({\r\n      type: SET_USER_DATA,\r\n      payload: userData,\r\n    });\r\n  }\r\n\r\n  function loadFacebookData(facebookData) {\r\n    dispatch({\r\n      type: REGISTER_WITH_fACEBOOK,\r\n      payload: facebookData,\r\n    });\r\n  }\r\n\r\n  function loadGoogleData(googleData) {\r\n    dispatch({\r\n      type: REGISTER_WITH_GOOGLE,\r\n      payload: googleData,\r\n    });\r\n  }\r\n\r\n  function notificationRead(data) {\r\n    dispatch({\r\n      type: NOTIFICATION_READ,\r\n      payload: data\r\n    })\r\n  }\r\n\r\n  function readAllNotificatons(data){\r\n    dispatch({\r\n      type: NOTIFICATIONS_READ,\r\n      payload: data\r\n    })\r\n  }\r\n\r\n  function logout() {\r\n    dispatch({ type: LOGOUT });\r\n  }\r\n\r\n  const authProps = useMemo(\r\n    () => ({\r\n      user,\r\n      facebookData,\r\n      googleData,\r\n      liked,\r\n      notifications,\r\n      room,\r\n      setRoom,\r\n      clearNotifications,\r\n      changeProfilePicture,\r\n      notificationRead,\r\n      readAllNotificatons,\r\n      login,\r\n      logout,\r\n      loadFacebookData, // functions context\r\n      loadGoogleData\r\n    }),\r\n    [state]\r\n  );\r\n\r\n  return <AuthContext.Provider value={authProps} {...props} />;\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\posts.jsx",["376","377","378","379","380","381","382","383"],"import React, { createContext, useMemo, useReducer } from \"react\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_DATA\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"SET_POSTS\":\r\n      let lastIdPosts = action.payload[action.payload.length - 1].id;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: action.payload,\r\n        lastIdPosts,\r\n      };\r\n    case \"SET_Insvire E-Sport\":\r\n      // let lastIdPosts = action.payload[action.payload.length - 1].id;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_1: action.payload,\r\n        // lastIdPosts,\r\n      };\r\n    case \"SET_BMW Club Bandung\":\r\n      // let lastIdPosts = action.payload[action.payload.length - 1].id;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_2: action.payload,\r\n        // lastIdPosts,\r\n      };\r\n    case \"SET_POST\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        post: action.payload,\r\n      };\r\n    case \"SET_MUTED_POST\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        mutedPost: action.payload,\r\n      };\r\n    case \"SET_LIKED_POSTS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        likedPosts: action.payload,\r\n      };\r\n    case \"SET_SUBSCRIBE_POSTS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        subscribePosts: action.payload,\r\n      };\r\n    case \"MORE_POSTS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: [...state.posts, ...action.payload],\r\n        isMorePost: action.payload.length === 3,\r\n        lastIdPosts: state.posts[state.posts.length - 1].id,\r\n      };\r\n    case \"CREATE_POST_ROOM_1\":\r\n      const before = cloneDeep(state.posts) || [];\r\n      const after = [action.payload, ...before];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_1: after,\r\n      };\r\n    case \"CREATE_POST_ROOM_2\":\r\n      const first = cloneDeep(state.posts) || [];\r\n      const second = [action.payload, ...first];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        room_2: second,\r\n      };\r\n    case \"CREATE_POST\":\r\n      const oldPosts = cloneDeep(state.posts) || [];\r\n      const posts = [action.payload, ...oldPosts];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts,\r\n      };\r\n    case \"DELETE_POST\":\r\n      const deleteId = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== deleteId),\r\n      };\r\n    case \"DELETE_POST_ROOM_1\":\r\n      const id = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.filter((post) => post.id !== id),\r\n      };\r\n    case \"DELETE_POST_ROOM_2\":\r\n      const idDelete = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.filter((post) => post.id !== idDelete),\r\n      };\r\n    case \"SET_COMMENT\":\r\n      const { payload } = action;\r\n      const hasReply = payload.reply && payload.reply.id;\r\n\r\n      if (hasReply) {\r\n        const match = state.post.comments.findIndex(\r\n          (itm) => itm.id == payload.reply.id\r\n        );\r\n\r\n        if (!match) {\r\n          if (state.post.comments.length > 1) {\r\n            const recursive = (list) => {\r\n              return list.map((itm) => {\r\n                if (itm.id === payload.reply.id) {\r\n  \r\n                  return { ...itm, replyList: itm.replyList.concat(payload) };\r\n  \r\n                } else {\r\n                  if (!itm.replyList) return itm;\r\n  \r\n                  return recursive(itm.replyList);\r\n                }\r\n              });\r\n            };\r\n  \r\n            const newComments = recursive(state.post.comments);\r\n  \r\n            return {\r\n              ...state,\r\n              post: {\r\n                ...state.post,\r\n                comments: newComments,\r\n                commentsCount: state.post.comments + 1,\r\n              },\r\n            };\r\n          }\r\n\r\n          if (state.post.comments.length === 1) {\r\n            const newComments = state.post.comments;\r\n            newComments[0].replyList = [action.payload];\r\n\r\n            return {\r\n              ...state,\r\n              post: {\r\n                ...state.post,\r\n                comments: newComments,\r\n                commentsCount: state.post.comments + 1,\r\n              },\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: [...state.post.comments, action.payload],\r\n          commentsCount: state.post.comments + 1,\r\n        },\r\n      };\r\n    case \"DELETE_COMMENT\":\r\n      if (action.payload.reply && action.payload.reply.id) {\r\n        const find = state.post.comments.findIndex(\r\n          (itm) => itm.id == action.payload.reply.id\r\n        );\r\n\r\n        if (!find) {\r\n          const recursive = (list) => {\r\n            return list.map((itm) => {\r\n              return { ...itm, replyList: itm.replyList.filter(list => list !== action.payload.id) };\r\n            });\r\n          };\r\n\r\n          const newComments = recursive(state.post.comments);\r\n\r\n          return {\r\n            ...state,\r\n            post: {\r\n              ...state.post,\r\n              comments: newComments,\r\n              commentsCount: state.post.comments + 1,\r\n            },\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment.id !== action.payload\r\n          ),\r\n        },\r\n      };\r\n    case \"LIKE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_SUBSCRIBE\":\r\n      return {\r\n        ...state,\r\n        subscribePosts: state.subscribePosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_MUTED\":\r\n      return {\r\n        ...state,\r\n        mutedPost: state.mutedPost.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_LIKED\":\r\n      return {\r\n        ...state,\r\n        likedPosts: state.likedPosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_DETAIL\":\r\n      return {\r\n        ...state,\r\n        post: state.post && {\r\n          ...state.post,\r\n          likes: state.post.likes && [...state.post.likes, action.payload.data],\r\n          likeCount: state.post.likeCount + 1,\r\n        },\r\n      };\r\n    case \"UNLIKE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_SUBSCRIBE\":\r\n      return {\r\n        ...state,\r\n        subscribePosts: state.subscribePosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_MUTED\":\r\n      return {\r\n        ...state,\r\n        mutedPost: state.mutedPost.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_LIKED\":\r\n      return {\r\n        ...state,\r\n        likedPosts: state.likedPosts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_DETAIL\":\r\n      return {\r\n        ...state,\r\n        post: state.post && {\r\n          ...state.post,\r\n          likes: state.post.likes.filter(\r\n            (like) => like.owner !== action.payload.data.owner\r\n          ),\r\n          likeCount: state.post.likeCount - 1,\r\n        },\r\n      };\r\n    case \"LIKE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"LIKE_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPost = {\r\n              ...post,\r\n              likes: [...post.likes, action.payload.data],\r\n              likeCount: post.likeCount + 1,\r\n            };\r\n\r\n            return updatedPost;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNLIKE_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              likes: post.likes.filter(\r\n                (like) => like.owner !== action.payload.data.owner\r\n              ),\r\n              likeCount: post.likeCount - 1,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"SUBCRIBE_POST\":\r\n      const { subscribeData, post } = action.payload;\r\n\r\n      const subscribePosts = [...state.subscribePosts, post];\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === subscribeData.postId) {\r\n            const update = {\r\n              ...post,\r\n              subscribe: [...post.subscribe, subscribeData],\r\n            };\r\n            return update;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n        subscribePosts,\r\n      };\r\n    case \"UNSUBCRIBE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.subscribeData.postId) {\r\n            const update = {\r\n              ...post,\r\n              subscribe: post.subscribe.filter(\r\n                (data) => data.owner !== action.payload.subscribeData.owner\r\n              ),\r\n            };\r\n            return update;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n        subscribePosts: state.subscribePosts.filter(\r\n          (post) => post.id !== action.payload.subscribeData.postId\r\n        ),\r\n      };\r\n    case \"MUTE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatePosts = {\r\n              ...post,\r\n              muted: [...post.muted, action.payload],\r\n            };\r\n            return updatePosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNMUTE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              muted: post.muted.filter(\r\n                (mute) => mute.owner !== action.payload.owner\r\n              ),\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"MUTE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatePosts = {\r\n              ...post,\r\n              muted: [...post.muted, action.payload],\r\n            };\r\n            return updatePosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNMUTE_POST_ROOM_1\":\r\n      return {\r\n        ...state,\r\n        room_1: state.room_1.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              muted: post.muted.filter(\r\n                (mute) => mute.owner !== action.payload.owner\r\n              ),\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"MUTE_POST_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatePosts = {\r\n              ...post,\r\n              muted: [...post.muted, action.payload],\r\n            };\r\n            return updatePosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"UNMUTE_POST_POST_ROOM_2\":\r\n      return {\r\n        ...state,\r\n        room_2: state.room_2.map((post) => {\r\n          if (post.id === action.payload.postId) {\r\n            const updatedPosts = {\r\n              ...post,\r\n              muted: post.muted.filter(\r\n                (mute) => mute.owner !== action.payload.owner\r\n              ),\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case \"OPEN_POST_CARD\":\r\n      const { repost, isOpenNewPost } = action.payload;\r\n      return {\r\n        ...state,\r\n        isOpenNewPost,\r\n        repost,\r\n      };\r\n    default:\r\n      throw new Error(\"Don't understand action\");\r\n  }\r\n};\r\n\r\nexport const PostContext = createContext({\r\n  posts: [],\r\n  room_1: [],\r\n  room_2: [],\r\n  mutedPost: [],\r\n  likedPosts: [],\r\n  subscribePosts: [],\r\n  post: null,\r\n  newPosts: null,\r\n  loading: false,\r\n  lastIdPosts: null,\r\n  isMorePost: true,\r\n  isOpenNewPost: false,\r\n  repost: false,\r\n  setRoom: () => {},\r\n  setLikedPosts: () => {},\r\n  setComment: () => {},\r\n  setPost: () => {},\r\n  setSubscribePosts: () => {},\r\n  setMutedPost: () => {},\r\n  subscribePost: () => {},\r\n  loadingData: () => {},\r\n  setPosts: (posts) => {},\r\n  morePosts: () => {},\r\n  createPost: () => {},\r\n  deletePost: () => {},\r\n  like: () => {},\r\n  mutePost: () => {},\r\n  commentDelete: () => {},\r\n});\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  room_1: [],\r\n  room_2: [],\r\n  likedPosts: [],\r\n  post: null,\r\n  mutedPost: [],\r\n  isMorePost: true,\r\n  newPosts: null,\r\n  loading: null,\r\n  lastIdPosts: null,\r\n  subscribePosts: [],\r\n};\r\n\r\nexport const PostProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const {\r\n    posts,\r\n    post,\r\n    loading,\r\n    lastIdPosts,\r\n    isMorePost,\r\n    isOpenNewPost,\r\n    repost,\r\n    mutedPost,\r\n    subscribePosts,\r\n    likedPosts,\r\n    room_1,\r\n    room_2,\r\n  } = state;\r\n\r\n  const loadingData = () => {\r\n    dispatch({ type: \"LOADING_DATA\" });\r\n  };\r\n\r\n  const createPost = (post) => {\r\n    if (post.room) {\r\n      const room = post.room === \"Insvire E-Sport\" ? \"ROOM_1\" : \"ROOM_2\";\r\n\r\n      dispatch({\r\n        type: `CREATE_POST_${room}`,\r\n        payload: post,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"CREATE_POST\",\r\n        payload: post,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setPost = (post) => {\r\n    dispatch({\r\n      type: \"SET_POST\",\r\n      payload: post,\r\n    });\r\n  };\r\n\r\n  const setComment = (data) => {\r\n    dispatch({\r\n      type: \"SET_COMMENT\",\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  const commentDelete = (data) => {\r\n    dispatch({\r\n      type: \"DELETE_COMMENT\",\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  const setLikedPosts = (posts) => {\r\n    if (posts.length > 0) {\r\n      dispatch({\r\n        type: \"SET_LIKED_POSTS\",\r\n        payload: posts,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setMutedPost = (posts) => {\r\n    if (posts.length > 0) {\r\n      dispatch({\r\n        type: \"SET_MUTED_POST\",\r\n        payload: posts,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSubscribePosts = (posts) => {\r\n    if (posts.length > 0) {\r\n      dispatch({\r\n        type: \"SET_SUBSCRIBE_POSTS\",\r\n        payload: posts,\r\n      });\r\n    }\r\n  };\r\n\r\n  const subscribePost = (data, post) => {\r\n    const subscribeData = {\r\n      owner: data.owner,\r\n      createdAt: data.createdAt,\r\n      displayName: data.displayName,\r\n      displayImage: data.displayImage,\r\n      colorCode: data.colorCode,\r\n      postId: data.postId,\r\n    };\r\n\r\n    if (data.isSubscribe) {\r\n      dispatch({\r\n        type: \"SUBCRIBE_POST\",\r\n        payload: {\r\n          subscribeData,\r\n          post,\r\n        },\r\n      });\r\n    } else if (!data.isSubscribe) {\r\n      dispatch({\r\n        type: \"UNSUBCRIBE_POST\",\r\n        payload: {\r\n          subscribeData,\r\n          post,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const deletePost = (id, room) => {\r\n    let locationRoom;\r\n\r\n    if (room === \"Insvire E-Sport\") {\r\n      locationRoom = \"ROOM_1\";\r\n    } else if (room === \"BMW Club Bandung\") {\r\n      locationRoom = \"ROOM_2\";\r\n    }\r\n\r\n    dispatch({\r\n      type: !room ? \"DELETE_POST\" : `DELETE_POST_${locationRoom}`,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const setRoom = (posts) => {\r\n    if (posts.length) {\r\n      if (posts[0].room === \"Insvire E-Sport\") {\r\n        dispatch({\r\n          type: `SET_${posts[0].room}`,\r\n          payload: posts,\r\n        });\r\n      } else if (posts[0].room === \"BMW Club Bandung\") {\r\n        dispatch({\r\n          type: `SET_${posts[0].room}`,\r\n          payload: posts,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const setPosts = (posts) => {\r\n    if (posts.length > 0) {\r\n      dispatch({\r\n        type: \"SET_POSTS\",\r\n        payload: posts,\r\n      });\r\n    }\r\n  };\r\n\r\n  const mutePost = (data, room) => {\r\n    const muteData = {\r\n      owner: data.owner,\r\n      id: data.id,\r\n      createAt: data.createdAt,\r\n      postId: data.postId,\r\n    };\r\n\r\n    let locationRoom;\r\n\r\n    if (room === \"Insvire E-Sport\") {\r\n      locationRoom = \"ROOM_1\";\r\n    } else if (room === \"BMW Club Bandung\") {\r\n      locationRoom = \"ROOM_2\";\r\n    }\r\n\r\n    if (data.mute) {\r\n      dispatch({\r\n        type: room ? `MUTE_POST_${locationRoom}` : \"MUTE_POST\",\r\n        payload: muteData,\r\n      });\r\n    } else if (!data.mute) {\r\n      dispatch({\r\n        type: room ? `UNMUTE_POST_${locationRoom}` : \"UNMUTE_POST\",\r\n        payload: muteData,\r\n      });\r\n    }\r\n  };\r\n\r\n  const morePosts = (posts) => {\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"MORE_POSTS\",\r\n        payload: posts,\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  const toggleOpenNewPost = (repost = false, room = false) => {\r\n    dispatch({\r\n      type: \"OPEN_POST_CARD\",\r\n      payload: {\r\n        isOpenNewPost: !isOpenNewPost,\r\n        repost: repost && {\r\n          repost,\r\n          room,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const like = (likeData, postId, room, type) => {\r\n    const data = {\r\n      id: likeData.id,\r\n      owner: likeData.owner,\r\n      createdAt: likeData.createdAt,\r\n      displayName: likeData.displayName,\r\n      displayImage: likeData.displayImage,\r\n      colorCode: likeData.colorCode,\r\n    };\r\n\r\n    let locationRoom;\r\n    let name;\r\n\r\n    if (room === \"Insvire E-Sport\") {\r\n      locationRoom = \"ROOM_1\";\r\n    } else if (room === \"BMW Club Bandung\") {\r\n      locationRoom = \"ROOM_2\";\r\n    }\r\n\r\n    if (type == \"subscribe_posts\") {\r\n      name = \"LIKE_SUBSCRIBE\";\r\n    } else if (type == \"muted_posts\") {\r\n      name = \"LIKE_MUTED\";\r\n    } else if (type == \"liked_posts\") {\r\n      name = \"LIKE_LIKED\";\r\n    } else if (type == \"nearby\") {\r\n      name = \"LIKE_POST\";\r\n    } else if (type == \"detail_post\") {\r\n      name = \"LIKE_DETAIL\";\r\n    }\r\n\r\n    if (likeData.isLike) {\r\n      dispatch({\r\n        type: room ? `LIKE_POST_${locationRoom}` : name,\r\n        payload: {\r\n          data,\r\n          postId,\r\n        },\r\n      });\r\n\r\n      return;\r\n    } else if (!likeData.isLike) {\r\n      dispatch({\r\n        type: room ? `UNLIKE_POST_${locationRoom}` : `UN${name}`,\r\n        payload: {\r\n          data,\r\n          postId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PostContext.Provider\r\n      value={{\r\n        posts,\r\n        post,\r\n        room_1,\r\n        room_2,\r\n        setPosts,\r\n        setPost,\r\n        setComment,\r\n        loadingData,\r\n        morePosts,\r\n        createPost,\r\n        like,\r\n        deletePost,\r\n        mutePost,\r\n        toggleOpenNewPost,\r\n        setMutedPost,\r\n        setLikedPosts,\r\n        subscribePost,\r\n        setSubscribePosts,\r\n        setRoom,\r\n        commentDelete,\r\n        likedPosts,\r\n        subscribePosts,\r\n        mutedPost,\r\n        loading,\r\n        lastIdPosts,\r\n        isMorePost,\r\n        isOpenNewPost,\r\n        repost,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Countries.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\ConfigMap.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\NavBar.jsx",["384","385","386","387","388","389","390","391"],"import { Button, Col, Radio, Row, Tabs } from 'antd';\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { BellOutlined } from '@ant-design/icons';\r\n\r\nimport { StickyContainer } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function NavBar(props) {\r\n  const history = useHistory();\r\n  const parentTab = history.location.pathname == '/populer' ? 'populer' : 'latest'\r\n  const [nav, setNav] = useState({ value2: '/' })\r\n\r\n  const { value2 } = nav;\r\n\r\n  return (\r\n    <header className=\"toolbar\">\r\n      <div className=\"toolbar__nav\">\r\n        <div className=\"toolbar__nav2\" />\r\n      </div>\r\n      <nav >\r\n        <Row>\r\n          <Col span={3}>\r\n          <button className=\"toggle-button\" onClick={props.toggleOpen}>\r\n          <div className=\"hamburger-line\"></div>\r\n          <div className=\"hamburger-line\"></div>\r\n          <div className=\"hamburger-line\"></div>\r\n        </button>\r\n          </Col>\r\n          <Col span={18}>\r\n            <div  className=\"centeringButton adtional__nav\">\r\n            <Radio.Group\r\n            style={{width:151, zIndex: 200}}\r\n            size=\"medium\"\r\n              value={value2}\r\n              optionType=\"button\"\r\n              buttonStyle=\"solid\"\r\n              defaultValue=\"/\"\r\n              \r\n              >\r\n                <Radio.Button  value=\"/\" style={{zIndex: 200}}>\r\n                  <Link to='/' style={{color: 'white'}}>Latest</Link>\r\n                  </Radio.Button>\r\n                <Radio.Button value=\"/popular\" style={{zIndex: 200}}>\r\n                  <Link to='/popular' style={{color: '#7958f5'}}>Popular</Link>\r\n                </Radio.Button>\r\n            </Radio.Group>\r\n            </div>\r\n            \r\n          </Col>\r\n          <Col span={3}>\r\n            <div className=\"toggle-button\">\r\n            <BellOutlined style={{\r\n              fontSize: \"25px\",\r\n              color: \"black\",\r\n              strokeWidth: \"30\", // --> higher value === more thickness the filled area\r\n              }} onClick={props.toggleOpenNotif} />\r\n            </div>\r\n          \r\n          </Col>\r\n        </Row>\r\n      </nav>\r\n    </header>\r\n\r\n\r\n  )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\style\\mapstyle.jsx",["392"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"gamma\": 0.26\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"lightness\": -50\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 50\r\n            },\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\InfiniteScroll.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostCard\\index.jsx",["393","394","395","396","397","398","399","400","401","402","403"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { List } from \"antd\";\r\nimport { Row, Col, Menu, Dropdown, Image, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { get } from \"lodash\";\r\n\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport Pin from \"../../assets/pin-svg-25px.svg\";\r\nimport LikeButton from \"../Buttons/LikeButton/index\";\r\nimport CommentButton from \"../Buttons/CommentButton/index\";\r\nimport RepostButton from \"../Buttons/RepostButton/index\";\r\n\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  DELETE_POST,\r\n  MUTE_POST,\r\n  SUBSCRIBE_POST,\r\n} from \"../../GraphQL/Mutations\";\r\nimport { PostContext } from \"../../context/posts\";\r\n\r\nimport \"./style.css\";\r\nimport { MAP_API_KEY } from \"../../util/ConfigMap\";\r\n\r\nGeocode.setApiKey(MAP_API_KEY);\r\n\r\nGeocode.setLanguage(\"id\");\r\n\r\nexport default function PostCard({ post, loading, type }) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [repostAddress, setRepostAddress] = useState(\"\");\r\n  const [repostData, setRepostData] = useState(\"\");\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const postContext = useContext(PostContext);\r\n\r\n  const [deletePost] = useMutation(DELETE_POST, {\r\n    update(_, { data: { deletePost } }) {\r\n      alert(deletePost);\r\n      postContext.deletePost(post.id, post.room);\r\n    },\r\n  });\r\n\r\n  const [mutePost] = useMutation(MUTE_POST, {\r\n    update(_, { data: { mutePost } }) {\r\n      postContext.mutePost(mutePost, post.room);\r\n    },\r\n  });\r\n\r\n  const [subscribePost] = useMutation(SUBSCRIBE_POST, {\r\n    update(_, { data: { subscribePost } }) {\r\n      postContext.subscribePost(subscribePost, post);\r\n    },\r\n  });\r\n  const userName = user && user.username;\r\n  const repost = get(post, \"repost\") || {};\r\n  const isRepost = get(repost, \"id\") || \"\";\r\n\r\n  const { muted, subscribe } = post;\r\n  const isMuted = user && muted && muted.find((mute) => mute.owner === user.username);\r\n\r\n  const isSubscribe = user && subscribe && subscribe.find((sub) => sub.owner === user.username);\r\n\r\n  useEffect(() => {\r\n    if (post.location) {\r\n      Geocode.fromLatLng(post.location.lat, post.location.lng).then(\r\n        (response) => {\r\n          const address = response.results[0].address_components[1].short_name;\r\n          setAddress(address);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n\r\n      if (isRepost) {\r\n        const { location } = repost;\r\n        Geocode.fromLatLng(location.lat, location.lng).then(\r\n          (response) => {\r\n            const address =\r\n              response.results[0].address_components[1].short_name;\r\n            setRepostAddress(address);\r\n            setRepostData(repost);\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [post, isRepost]);\r\n\r\n  return (\r\n    <List itemLayout=\"vertical\" size=\"large\" style={{\r\n      background: 'white',\r\n      marginBottom: '16px',\r\n      marginLeft: '16px',\r\n      marginRight: '16px',\r\n      borderRadius: 5\r\n      }}>\r\n      <List.Item\r\n        key={post.id}\r\n        className=\"list-actions\"\r\n        actions={\r\n          !loading && [\r\n            <>\r\n              <div className=\"action-post\">\r\n                <div className=\"action-post__item\">\r\n                  <LikeButton\r\n                    likeCount={post.likeCount}\r\n                    likes={post.likes}\r\n                    id={post.id}\r\n                    room={post.room}\r\n                    type={type}\r\n                  />\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <Link to={`/${post.room ? post.room : \"post\"}/${post.id}`}>\r\n\r\n                  <CommentButton commentCount={post.commentCount} />\r\n\r\n                  </Link>\r\n                </div>\r\n                <div className=\"action-post__item\">\r\n                  <RepostButton idPost={post.id} room={post.room} repostCount={post.repostCount} />\r\n                </div>\r\n              </div>\r\n            </>,\r\n          ]\r\n        }\r\n      >\r\n        <List.Item.Meta\r\n          title={\r\n            <div>\r\n              <Row>\r\n                <Col span={20}>\r\n                  <Link to={`/${post.room ? post.room : \"post\"}/${post.id}`} style={{ fontSize: 15 }}>\r\n                    <img src={Pin} style={{ width: 15, marginTop: -4 }} />\r\n                    {address}\r\n                  </Link>\r\n                  {userName == post.owner && (\r\n                    <div\r\n                      style={{\r\n                        width: 60,\r\n                        height: 20,\r\n                        border: \"1px black solid\",\r\n                        borderRadius: 5,\r\n                        textAlign: \"center\",\r\n                        display: \"inline-block\",\r\n                        marginLeft: 6,\r\n                      }}\r\n                    >\r\n                      <p style={{ fontSize: 14 }}>My Post</p>\r\n                    </div>\r\n                  )}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: \"right\" }}>\r\n                  <Dropdown\r\n                    overlay={\r\n                      <Menu>\r\n                        {!post.room && (<Menu.Item\r\n                          key=\"0\"\r\n                          onClick={() =>\r\n                            subscribePost({ variables: { id: post.id, room: post.room } })\r\n                          }\r\n                        >\r\n                          {isSubscribe ? \"Unsubscribe\" : \"Subscribe\"}\r\n                        </Menu.Item>)}\r\n                        {!post.room && (<Menu.Item\r\n                          key=\"1\"\r\n                          onClick={() =>\r\n                            mutePost({ variables: { postId: post.id, room: post.room} })\r\n                          }\r\n                        >\r\n                          {isMuted ? \"Unmute\" : \"Mute\"}\r\n                        </Menu.Item>)}\r\n                        <Menu.Item key=\"3\">Report</Menu.Item>\r\n                        {userName === post.owner ? (\r\n                          <Menu.Item\r\n                            key=\"4\"\r\n                            onClick={() =>\r\n                              deletePost({ variables: { id: post.id, room: post.room } })\r\n                            }\r\n                          >\r\n                            Delete Post\r\n                          </Menu.Item>\r\n                        ) : null}\r\n                      </Menu>\r\n                    }\r\n                    trigger={[\"click\"]}\r\n                    placement=\"bottomRight\"\r\n                  >\r\n                    <a\r\n                      className=\"ant-dropdown-link\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                    >\r\n                      <EllipsisOutlined />\r\n                    </a>\r\n                  </Dropdown>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          }\r\n          description={<div>{moment(post.createdAt).fromNow()}</div>}\r\n        ></List.Item.Meta>\r\n        {isRepost && (\r\n          <Card\r\n            bodyStyle={{ padding: \"10px 12px\" }}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              borderRadius: 10,\r\n              backgroundColor: \"#f5f5f5\",\r\n              borderColor: \"#ededed\",\r\n              padding: 0,\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <Link to={`/post/${post.id}`} style={{ fontSize: 15 }}>\r\n              <img src={Pin} style={{ width: 15, marginTop: -4 }} />\r\n              {repostAddress}\r\n            </Link>\r\n            {userName == post.owner && (\r\n              <div\r\n                style={{\r\n                  width: 60,\r\n                  height: 20,\r\n                  border: \"1px black solid\",\r\n                  borderRadius: 5,\r\n                  textAlign: \"center\",\r\n                  display: \"inline-block\",\r\n                  marginLeft: 6,\r\n                }}\r\n              >\r\n                <p style={{ fontSize: 14 }}>My Post</p>\r\n              </div>\r\n            )}\r\n            <span style={{ fontSize: 12 }}>\r\n              {moment(repost.createdAt).fromNow()}\r\n            </span>\r\n            {repost.media ? (\r\n              repost.media.length == 1 ? (\r\n                <Image\r\n                  style={{\r\n                    width: \"100%\",\r\n                    borderRadius: 10,\r\n                    objectFit: \"cover\",\r\n                    maxHeight: 300,\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                  src={repost.media}\r\n                />\r\n              ) : null\r\n            ) : null}\r\n            <div style={{ marginTop: 5 }}>{repost.text}</div>\r\n          </Card>\r\n        )}\r\n        <p style={{ marginTop: -9 }}>{post.text}</p>\r\n        {post.media ? (\r\n          post.media.length == 1 ? (\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                borderRadius: 10,\r\n                objectFit: \"cover\",\r\n                maxHeight: 300,\r\n              }}\r\n              src={post.media}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n\r\n        {post.media ? (\r\n          post.media.length == 2 ? (\r\n            <table className=\"row-card-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <Image.PreviewGroup>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={post.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Image\r\n                        style={{ borderRadius: \"0px 10px 10px 0px\" }}\r\n                        src={post.media[1]}\r\n                      />\r\n                    </td>\r\n                  </Image.PreviewGroup>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n{post.media ? (\r\n          post.media.length >= 3 ? (\r\n            <table className=\"photo-grid-3\">\r\n              <Image.PreviewGroup>\r\n                <tbody>\r\n                  <tr style={{ margin: 0, padding: 0 }}>\r\n                    <td\r\n                      rowspan=\"2\"\r\n                      style={{ width: \"50%\", verticalAlign: \"top\" }}\r\n                    >\r\n                      <Image\r\n                        className=\"pict1-3\"\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={post.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        className=\"pict2-3\"\r\n                        style={{ borderRadius: \"0px 10px 0px 0px\" }}\r\n                        src={post.media[1]}\r\n                      />\r\n                      <div\r\n                        className=\"text-container\"\r\n                        style={{ marginTop: \"-6px\" }}\r\n                      >\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={\r\n                            post.media.length > 3\r\n                              ? {\r\n                                  borderRadius: \"0px 0px 10px 0px\",\r\n                                  filter: \"blur(2px)\",\r\n                                }\r\n                              : { borderRadius: \"0px 0px 10px 0px\" }\r\n                          }\r\n                          src={post.media[2]}\r\n                        />\r\n                        <div className=\"text-center\">\r\n                          {post.media.length > 3\r\n                            ? \"+\" + (post.media.length - 3)\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  {post.media.length > 3 ? (\r\n                    <div>\r\n                      <Image\r\n                        className=\"pict3-3\"\r\n                        style={{ display: \"none\" }}\r\n                        src={post.media[3]}\r\n                      />\r\n                      {post.media.length > 4 ? (\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={{ display: \"none\" }}\r\n                          src={post.media[4]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </tbody>\r\n              </Image.PreviewGroup>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n      </List.Item>\r\n    </List>\r\n  );\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\SkeletonLoading.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Firebase.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginGoogleButton.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AppBar\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginFacebookButton.jsx",["404"],"import React, { useContext, useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { FacebookProvider, auth } from '../util/Firebase'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { LOGIN_USER_FACEBOOK } from '../GraphQL/Mutations'\r\n\r\nconst CHECK_USER_BY_FACEBOOK = gql`\r\n  mutation check($username: String!){\r\n    checkUserWithFacebook(username: $username)\r\n  }\r\n`\r\n\r\nexport default function LoginFacebookButton({ props }) {\r\n  const { loadFacebookData, login } = useContext(AuthContext)\r\n  const [dataFacebook, setFacebookData] = useState({})\r\n\r\n  // const [loginFacebook] = useMutation(LOGIN_USER_FACEBOOK, {\r\n  //   update(_, { data: { loginWithFacebook } }) {\r\n\r\n  //     login(loginWithFacebook)\r\n  //   }\r\n  // })\r\n\r\n  const [check] = useMutation(CHECK_USER_BY_FACEBOOK, {\r\n    update(_, { data: { checkUserWithFacebook } }) {\r\n      if (!checkUserWithFacebook) {\r\n        loadFacebookData(dataFacebook)\r\n        props.history.push('/register/facebook')\r\n      } else {\r\n        const { token } = dataFacebook\r\n        // loginFacebook({ variables: { username, token } })\r\n        login(token)\r\n        props.history.push('/')\r\n      }\r\n    },\r\n    onError(err) {\r\n      console.log(err.message)\r\n    }\r\n  })\r\n\r\n  const signInWithFacebook = async () => {\r\n    auth.signInWithPopup(FacebookProvider).then(function (result) {\r\n      let user = result.user;\r\n      let facebookData = {\r\n        username: user.displayName,\r\n        email: user.email,\r\n        imageUrl: user.photoURL,\r\n        id: user.uid\r\n      }\r\n      user.getIdToken().then(token => {\r\n        facebookData.token = token\r\n      })\r\n      setFacebookData(facebookData)\r\n\r\n      check({ variables: { username: user.displayName } })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Button onClick={signInWithFacebook} className=\"ui button\" style={{ width: 300, height: 45, fontSize: '18px', color: 'white', background: '#7F57FF', borderRadius: 5 }}>\r\n      <i className=\"facebook icon\" />\r\n          Continue with Facebook\r\n    </Button>\r\n  )\r\n}\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostNavBar.jsx",["405","406","407","408","409","410","411"],"import { Button, Radio, Tabs } from 'antd';\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function PostNavBar() {\r\nconst [nav, setNav] = useState({value2: \"Latest\"})\r\n//back button\r\nlet history = useHistory();\r\n\r\n\r\n\r\nconst onChange2 = e => {\r\n    setNav({\r\n        value2: e.target.value,\r\n    });\r\n  };\r\n\r\nconst { value2 } = nav;\r\n\r\n    return (\r\n      <StickyContainer>\r\n        <Menu pointing secondary size='massive'>\r\n          <div style={{display: \"inline-block\",marginLeft: 20, padding: \"10px 0\"}} onClick={() => history.goBack()}>\r\n          <ArrowLeftOutlined />\r\n          </div>\r\n          <p style={{padding: \"10px 0\",marginLeft: 20, fontWeight: 'bolder',}}>Post</p>\r\n        </Menu>\r\n      </StickyContainer>\r\n        )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\NotificationMobile.jsx",["412","413","414","415"],"import React, { useContext } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  READ_ALL_NOTIFICATIONS,\r\n  READ_NOTIFICATION,\r\n} from \"../GraphQL/Mutations\";\r\nimport { Row, Col, Dropdown, Menu } from \"antd\";\r\n\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { CLEAR_ALL_NOTIF } from \"../GraphQL/Mutations\";\r\nimport NoNotif from \"../assets/NoNotif.jpg\";\r\n\r\nexport default function NotificationMobile(props) {\r\n  const { notifications, notificationRead, readAllNotificatons } =\r\n    useContext(AuthContext);\r\n  const { clearNotifications } = useContext(AuthContext);\r\n\r\n  const [readNotification] = useMutation(READ_NOTIFICATION, {\r\n    update(_, { data: { readNotification } }) {\r\n      notificationRead(readNotification);\r\n    },\r\n  });\r\n\r\n  const [readNotifications] = useMutation(READ_ALL_NOTIFICATIONS, {\r\n    update(_, { data: { readAllNotification } }) {\r\n      console.log(readAllNotification);\r\n      readAllNotificatons(readAllNotification);\r\n    },\r\n  });\r\n\r\n  const [clearNotif] = useMutation(CLEAR_ALL_NOTIF, {\r\n    update(_, { data: { clearAllNotif } }) {\r\n      clearNotifications();\r\n      alert(clearAllNotif);\r\n    },\r\n  });\r\n  let notifClasses = 'notifmobilecoy'\r\n  \r\n  if(props.show) {\r\n    notifClasses = 'notifmobilecoy open' \r\n  }\r\n  return (\r\n    <div className={notifClasses} style={{ position: \"sticky\", zIndex: 102, height: '100%' }}>\r\n      <div style={{ position: \"absolute\", left: 0, right: 0, width: \"100%\" }}>\r\n        <Card\r\n        \r\n          title=\"Notification\"\r\n          extra={\r\n            <Dropdown\r\n              overlay={\r\n                <Menu>\r\n                  <Menu.Item key=\"0\" onClick={readNotifications}>\r\n                    READ ALL\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"1\" onClick={clearNotif}>\r\n                    CLEAR ALL\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              trigger={[\"click\"]}\r\n              placement=\"bottomRight\"\r\n            >\r\n              <a\r\n                className=\"ant-dropdown-link\"\r\n                onClick={(e) => e.preventDefault()}\r\n              >\r\n                <EllipsisOutlined />\r\n              </a>\r\n            </Dropdown>\r\n          }\r\n          style={{ width: \"100%\" }}\r\n          className=\"testttttt\"\r\n        >\r\n          <div style={{ margin: -22, height: '100vh' }}>\r\n            {(notifications && notifications.length ? (\r\n                notifications.map((notif, key) => {\r\n                  let type = \"\";\r\n                  let text = \"\";\r\n                  switch (notif.type) {\r\n                    case \"LIKE\":\r\n                      type = \"liked\";\r\n                      text = \"iike\";\r\n                      break;\r\n                    case \"REPOST\":\r\n                      type = \"repost\";\r\n                      text = \"repost\";\r\n                      break;\r\n                    case \"COMMENT\":\r\n                      type = \"commented\";\r\n                      text = \"comment\";\r\n                    default:\r\n                      break;\r\n                  }\r\n\r\n                  return (\r\n                    <Link\r\n                      to={`/post/${notif.postId}`}\r\n                      onClick={() =>\r\n                        readNotification({ variables: { id: notif.id } })\r\n                      }\r\n                      name={notif.id}\r\n                      key={`notif${key}`}\r\n                      style={\r\n                        notif.read\r\n                          ? { fontSize: 13, color: \"black\" }\r\n                          : { fontSize: 13, fontWeight: \"bold\", color: \"black\" }\r\n                      }\r\n                    >\r\n                      <div className=\"notifContainer\">\r\n                        <Row>\r\n                          <Col span={22}>\r\n                            <p style={{ marginBottom: 15 }}>\r\n                              {notif.displayName}{\" \"}\r\n                              <span>{`${type} your post.`}</span>{\" \"}\r\n                            </p>\r\n                          </Col>\r\n                          <Col span={2} style={{ color: \"#7958f5\" }}>\r\n                            {!notif.read && <p>&#8226;</p>}\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })\r\n              ) : (\r\n              <img src={NoNotif} className=\"centeringButton\" style={{height: 200}} />\r\n              )\r\n            )\r\n            }\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\BackDrop.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\SidebarMobile.jsx",["416","417"],"/* eslint-disable react/display-name, jsx-a11y/click-events-have-key-events */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\n\r\n//css & assets\r\nimport \"../App.css\";\r\nimport Blank from \"../assets/blank.png\";\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\n\r\n//antd\r\nimport { Layout, Menu, List } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LaptopOutlined,\r\n  NotificationOutlined,\r\n  SettingOutlined,\r\n  SearchOutlined,\r\n  StarOutlined,\r\n  AudioMutedOutlined\r\n} from \"@ant-design/icons\";\r\nimport { OmitProps } from \"antd/lib/transfer/ListBody\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nexport default function SidebarMobile(props) {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const handleResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const { user } = useContext(AuthContext);\r\n  \r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  let siderClasses = 'sidebarmobilecoy'\r\n  \r\n  if(props.show) {\r\n    siderClasses = 'sidebarmobilecoy open' \r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {/* Sidebar */}\r\n      <div className={siderClasses}>\r\n        <Sider\r\n          width='100%'\r\n          className=\"site-layout-background\"\r\n          style={{ backgroundColor: \"white\" }}\r\n          collapsed={false}\r\n        >\r\n          <div style={{ width: 60 }}>\r\n            <Link to={`/profile/user/${user.id}`}>\r\n              <div\r\n                className=\"profilefoto\"\r\n                style={{marginLeft: 4, backgroundImage: `url(\"${user.profilePicture? user.profilePicture : Blank}\")`}}\r\n              />\r\n            </Link>\r\n          </div>\r\n          <Link to={`/profile/user/${user.id}`}>\r\n            <h3 style={{marginLeft: 4, marginTop: 15, marginBottom: -1, fontSize: 15 }}>\r\n              {user.username ? user.username : \"My Account\"}\r\n            </h3>\r\n          </Link>\r\n\r\n          <List.Item.Meta\r\n            title={\r\n              <Link to=\"/maps\" style={{marginLeft: 4,}}>\r\n                {\" \"}\r\n                {windowWidth > 993 ? (\r\n                  <img src={Pin} style={{ width: 20, marginTop: -5 }} />\r\n                ) : null}\r\n                \r\n                {address}\r\n              </Link>\r\n            }\r\n          />\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={[\"NearBy\"]}\r\n            defaultOpenKeys={[\"NearBy\"]}\r\n            style={{ height: \"100%\", border: \"none\" }}\r\n            inlineCollapsed=\"false\"\r\n          >\r\n            <Menu.Divider />\r\n            <Menu.Item key=\"NearBy\" icon={<UserOutlined />}>\r\n              <Link to=\"/\">Nearby</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Search\" icon={<SearchOutlined />}>\r\n              <Link to=\"/search\">Search</Link>\r\n            </Menu.Item>\r\n\r\n            <SubMenu\r\n              key=\"Room\"\r\n              icon={<LaptopOutlined />}\r\n              title=\"Available Room\"\r\n            >\r\n              <Menu.Item key=\"Room1\">\r\n                <Link to=\"/Insvire E-Sport\">Insvire E-Sport</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"Room2\">\r\n                <Link to=\"/BMW Club Bandung\">BMW Club Bandung</Link>\r\n                </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"Visited\" icon={<StarOutlined />}>\r\n              <Link to=\"/visited\">Visited Places</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Sub\" icon={<NotificationOutlined />}>\r\n              <Link to=\"/subscribePosts\">Subscribed Posts</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Muted\" icon={<AudioMutedOutlined />}>\r\n              <Link to=\"/MutedPost\" >Muted Posts</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"Settings\" icon={<SettingOutlined />}>\r\n              <Link to=\"/settings\">Settings</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        {windowWidth < 993 ? null : <Link to='/' ><div className=\"curious\" /></Link>}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx",["418"],"import React, { useContext, useEffect } from \"react\";\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LIKE_POST } from \"../../../GraphQL/Mutations\";\r\nimport { PostContext } from \"../../../context/posts\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nimport './style.css';\r\n\r\nexport default function LikeButton({ likeCount, id, likes, room, type }) {\r\n  const { like } = useContext(PostContext);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [likePost] = useMutation(LIKE_POST, {\r\n    update(_, { data: { likePost } }) {\r\n      like(likePost, id, room, type);\r\n    },\r\n  });\r\n\r\n  const onLike = () => {\r\n    likePost({ variables: { id, room } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui labeled btn-like\" tabIndex=\"0\">\r\n      <div className=\"btn-like__icon\" >\r\n        <Button\r\n          onClick={onLike}\r\n          shape=\"circle\"\r\n          className=\"likeButton\"\r\n          icon={\r\n            // <HeartOutlined />\r\n            user && likes.find((like) => like.owner === user.username) ? (\r\n              <HeartOutlined style={{ color: \"red\" }} />\r\n            ) : (\r\n              <HeartOutlined />\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"btn-like__wrapper\">\r\n        <div className=\"ui basic label float btn-like__label\">\r\n          <p>{likeCount} likes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Notification.jsx",["419","420","421","422"],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Sidebar.jsx",["423"],"/* eslint-disable react/display-name, jsx-a11y/click-events-have-key-events */\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\n\r\n//css & assets\r\nimport \"../App.css\";\r\nimport Blank from \"../assets/blank.png\";\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\n\r\n//antd\r\nimport { Layout, Menu, List } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LaptopOutlined,\r\n  NotificationOutlined,\r\n  SettingOutlined,\r\n  SearchOutlined,\r\n  StarOutlined,\r\n  AudioMutedOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nconst Sidebar = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const handleResize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const { user } = useContext(AuthContext);\r\n  \r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {/* Sidebar */}\r\n      <div\r\n        className=\"sidebarcoy\"\r\n        style={{\r\n          position: \"fixed\",\r\n          backgroundColor: \"#FAFAFA\",\r\n          zIndex: 102,\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <Sider\r\n          className=\"site-layout-background\"\r\n          width={windowWidth < 1200 ? 230 : 240}\r\n          style={{ backgroundColor: \"#FAFAFA\" }}\r\n          collapsed={windowWidth < 992 ? true : false}\r\n        >\r\n          <div style={{ width: 60, backgroundColor: \"#FAFAFA\" }}>\r\n            <Link to={`/profile/user/${user.id}`}>\r\n              <div\r\n                className=\"profilefoto\"\r\n                style={{ backgroundImage: `url(\"${user.profilePicture? user.profilePicture : Blank}\")`}}\r\n              />\r\n            </Link>\r\n          </div>\r\n          <Link to={`/profile/user/${user.id}`}>\r\n            <h3 style={{backgroundColor: \"#FAFAFA\", marginTop: 15, marginBottom: -1, fontSize: 15 }}>\r\n              {user.username ? user.username : \"My Account\"}\r\n            </h3>\r\n          </Link>\r\n\r\n          <List.Item.Meta\r\n            title={\r\n              <Link to=\"/maps\">\r\n                {\" \"}\r\n                {windowWidth > 993 ? (\r\n                  <img src={Pin} style={{ width: 20, marginTop: -5 }} />\r\n                ) : null}\r\n                \r\n                {address}\r\n              </Link>\r\n            }\r\n          />\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={[\"NearBy\"]}\r\n            defaultOpenKeys={[\"NearBy\"]}\r\n            style={{ height: \"100%\", border: \"none\", backgroundColor: '#FAFAFA' }}\r\n            inlineCollapsed=\"false\"\r\n          >\r\n            <Menu.Divider />\r\n            <Menu.Item key=\"NearBy\" icon={<UserOutlined />}>\r\n              <Link to=\"/\">Nearby</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Search\" icon={<SearchOutlined />}>\r\n              <Link to=\"/search\">Search</Link>\r\n            </Menu.Item>\r\n\r\n            <SubMenu\r\n              key=\"Room\"\r\n              icon={<LaptopOutlined />}\r\n              title=\"Available Room\"\r\n            >\r\n              <Menu.Item key=\"Room1\">\r\n                <Link to=\"/Insvire E-Sport\">Insvire E-Sport</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"Room2\">\r\n                <Link to=\"/BMW Club Bandung\">BMW Club Bandung</Link>\r\n                </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"Visited\" icon={<StarOutlined />}>\r\n              <Link to=\"/visited\">Visited Places</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Sub\" icon={<NotificationOutlined />}>\r\n              <Link to=\"/subscribePosts\">Subscribed Posts</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Muted\" icon={<AudioMutedOutlined />}>\r\n              <Link to=\"/MutedPost\" >Muted Posts</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"Settings\" icon={<SettingOutlined />}>\r\n              <Link to=\"/settings\">Settings</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        {windowWidth < 993 ? null : <Link to='/' ><div className=\"curious\" /></Link>}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\index.jsx",["424","425","426","427","428","429","430","431","432","433","434","435"],"// Modules\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useMutation, useLazyQuery } from '@apollo/client';\r\nimport { Modal, Button, Form, Input, Col, Upload, Card, Skeleton, Space, Collapse, Radio, Image } from \"antd\";\r\nimport { DownOutlined } from '@ant-design/icons'\r\nimport { PlusOutlined, PictureOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { get } from 'lodash';\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n// Styles\r\nimport \"../../App.css\";\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\n\r\n// Context\r\nimport { PostContext } from \"../../context/posts\";\r\nimport Pin from \"../../assets/pin-svg-25px.svg\";\r\nimport Gorila from \"../../assets/gorila.jpg\";\r\nimport Bmw from \"../../assets/bmw.jpg\";\r\n\r\n// Query\r\nimport { GET_POST } from '../../GraphQL/Queries';\r\nimport { CREATE_POST } from '../../GraphQL/Mutations'\r\n\r\n// Init Firebase\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport { AuthContext } from \"../../context/auth\";\r\nconst storage = firebase.storage()\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst InitialState = {\r\n  previewVisible: false,\r\n  confirmLoading: false,\r\n  visible: false,\r\n  previewImage: '',\r\n  previewTitle: '',\r\n  fileList: [],\r\n  lat: '',\r\n  lng: '',\r\n  uploaded: [],\r\n  isFinishUpload: false,\r\n  text: ''\r\n};\r\n\r\nconst UploadButton = () => (\r\n  <div>\r\n    <PlusOutlined />\r\n    <div style={{ marginTop: 8 }}>Upload</div>\r\n  </div>\r\n);\r\n\r\nexport default function ModalPost() {\r\n  // Context\r\n  const {\r\n    isOpenNewPost,\r\n    repost = null,\r\n    toggleOpenNewPost,\r\n    createPost: updatePosts\r\n  } = useContext(PostContext);\r\n\r\n  // Local State\r\n  const [state, setState] = useState(InitialState);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressRepost, setAddressRepost] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n  const { room, setRoom } = useContext(AuthContext)\r\n  const [open, setOpen] = useState([])\r\n\r\n  //changeroom func\r\n  const handleCollapse = () => {\r\n    if (open.length) {\r\n      setOpen([])\r\n    } else {\r\n      setOpen([1])\r\n    }\r\n  }\r\n  const handleRoom = (e) => {\r\n    setRoom('Nearby')\r\n    setOpen([])\r\n\r\n  }\r\n  //set location\r\n\r\n  const loc = localStorage.location;\r\n\r\n  const location = loc ? JSON.parse(loc) : null;\r\n\r\n  if (location) {\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  \r\n\r\n\r\n  // Query\r\n  const [getRepost, { data: dataRepost, loading }] = useLazyQuery(GET_POST);\r\n  const getPost = get(dataRepost, 'getPost') || {};\r\n\r\n\r\n  if (getPost.location) {\r\n    Geocode.fromLatLng(getPost.location.lat, getPost.location.lng).then(\r\n      (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddressRepost(address);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  const [createPost, {data, loading : loadingCreatePost }] = useMutation(\r\n    CREATE_POST,\r\n    {\r\n      onCompleted: (data) => {\r\n        const { createPost } = data;\r\n\r\n        // Reset Form\r\n        setState(InitialState);\r\n        form.resetFields();\r\n\r\n        // Update Redux\r\n        toggleOpenNewPost(false)\r\n        updatePosts({\r\n          ...createPost,\r\n          repost: getPost\r\n        });\r\n      }\r\n    }\r\n  )\r\n\r\n  const { isFinishUpload, previewVisible, previewImage, fileList, previewTitle, lat, lng, uploaded } = state;\r\n\r\n  ///////// location /////////\r\n  function showPosition(position) {\r\n    setState({\r\n      ...state,\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpenNewPost) navigator.geolocation.getCurrentPosition(showPosition)\r\n  }, [isOpenNewPost]);\r\n\r\n  useEffect(() => {\r\n    if (repost) {\r\n      getRepost({ variables: { id: repost.repost } });\r\n    }\r\n  }, [repost]);\r\n\r\n  useEffect(() => {\r\n    if (isOpenNewPost && !!uploaded.length || (state.text && !uploaded.length && isFinishUpload)) {\r\n      const { text = '' } = state;\r\n      const variables = {\r\n        text,\r\n        media: uploaded,\r\n        location: {\r\n          lat,\r\n          lng\r\n        },\r\n        repost: repost.repost || '',\r\n        roomRepost: repost.room || '',\r\n        room\r\n      };\r\n      \r\n      createPost({ variables });\r\n    }\r\n  }, [uploaded, isFinishUpload]);\r\n\r\n  //////////////////// Upload Photo Function Start//////////////////////////////////\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleCancel = () => setState({ ...state, previewVisible: false });\r\n\r\n  const handleCancelModal = () => {\r\n    toggleOpenNewPost(false);\r\n  };\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => {\r\n    const newFiles = fileList.map(file => ({ ...file, status: 'done' }))\r\n    setState({\r\n      ...state,\r\n      fileList: newFiles\r\n    });\r\n\r\n    \r\n  }\r\n  const handleRemove = file => {\r\n    const newFile = fileList.filter(item => item !== file);\r\n    setState({\r\n      ...state,\r\n      fileList: newFile\r\n    })\r\n  }\r\n\r\n  //////////////////// Upload Photo Function Finish/////////////////////////////////\r\n\r\n  const onFinish = async (value) => {\r\n    let uploaded = [];\r\n    ////////////////fungsi upload///////////////////\r\n    if (fileList.length) {\r\n      uploaded = await Promise.all(fileList.map(async (elem) => {\r\n        const uploadTask = storage.ref(`images/${elem.originFileObj.name}`).put(elem.originFileObj)\r\n\r\n        const url = await new Promise((resolve, reject) => {\r\n          uploadTask.on('state_changed',\r\n            () => { },\r\n            error => {\r\n              fileList.push({ ...elem, status: 'error' })\r\n              reject()\r\n            },\r\n            async () => {\r\n              const downloadUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n\r\n              resolve(downloadUrl);\r\n            }\r\n          )\r\n        })\r\n\r\n        return url\r\n      }));\r\n\r\n      setState({ ...state, uploaded, fileList, isFinishUpload: true, text: value.text });\r\n\r\n      return;\r\n    }\r\n\r\n\r\n    setState({ ...state, uploaded: [], isFinishUpload: true, text: value.text })\r\n\r\n    return;\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Modal\r\n        key=\"addPost\"\r\n        visible={isOpenNewPost}\r\n        title={[\r\n          <p key=\"paragraf\">{repost ? 'Repost' : 'Post to'}</p>,\r\n          <div>\r\n            <Collapse ghost accordion activeKey={open} onChange={handleCollapse}>\r\n              <Panel onChange={handleCollapse} header={\r\n                <div>\r\n                  <Radio.Button onClick={handleRoom} value=\"Nearby\" style={{ border: 'none', color: 'black', backgroundColor: 'none', height: 50, top: -15 }}>\r\n                    <img src={Pin} style={{ display: 'inline-block', width: 40, marginBottom: \"auto\", }} />\r\n                  </Radio.Button>\r\n                  <div style={{ display: 'inline-block' }}>\r\n                    <h3 style={{ fontWeight: \"bold\" }}>{room ? room : \"Nearby\"}</h3>\r\n                    <Link to='/maps'><p style={{ fontSize: 12, marginTop: -10 }}>{address}</p></Link>\r\n                  </div>\r\n                  <DownOutlined style={{ float: 'right', width: 46, marginTop: 15 }} />\r\n                </div>\r\n              } key=\"1\" showArrow={false}>\r\n                <p onClick={handleRoom}>Nearby</p>\r\n                <p>Available Room</p>\r\n                <Radio.Button className='addpostRoom' onClick={handleRoom} value=\"Insvire E-Sport\" style={{ border: 'none', color: 'black', backgroundColor: 'none', width: '100%', height: 55 }}>\r\n                  <img src={Gorila} style={{ display: 'inline-block', width: 40, marginTop: -21, marginBottom: \"auto\", borderRadius: '50%', marginRight: 5 }} />\r\n                  <div style={{ display: 'inline-block' }}>\r\n                    <h4 style={{ fontWeight: \"bold\" }}>Insvire E-Sport</h4>\r\n                    <p style={{ fontSize: 12, marginTop: -15 }}>bermain dan besenang senang adalah jalan ninja kami</p>\r\n                  </div>\r\n                </Radio.Button>\r\n\r\n                <Radio.Button className='addpostRoom' onClick={handleRoom} value=\"BMW Club Bandung\" style={{ border: 'none', color: 'black', backgroundColor: 'none', width: '100%', height: 55 }}>\r\n                  <img src={Bmw} style={{ display: 'inline-block', width: 40, marginTop: -21, marginBottom: \"auto\", borderRadius: '50%', marginRight: 5 }} />\r\n                  <div style={{ display: 'inline-block' }}>\r\n                    <h4 style={{ fontWeight: \"bold\" }}>BMW Club Bandung</h4>\r\n                    <p style={{ fontSize: 12, marginTop: -15 }}>masuk clubnya walau belom punya mobilnya</p>\r\n                  </div>\r\n                </Radio.Button>\r\n              </Panel>\r\n            </Collapse>\r\n\r\n          </div>\r\n\r\n\r\n          ,\r\n        ]}\r\n        onCancel={handleCancelModal}\r\n        footer={null}\r\n      >\r\n        {!!repost && (\r\n          <>\r\n            {loading ?\r\n              (\r\n                <div style={{ marginBottom: 10 }}>\r\n                  <Space>\r\n                    <Skeleton.Avatar active={true} size={\"large\"} />\r\n                    <Skeleton.Button style={{ width: window.isMobile ? '200px' : '400px' }} size={\"small\"} />\r\n                  </Space>\r\n                  <Skeleton.Button style={{ width: window.isMobile ? '250px' : '450px', marginTop: 10 }} size={\"small\"} />\r\n                </div>\r\n              )\r\n              : (\r\n                <Card bodyStyle={{ padding: '10px 12px' }} style={{ width: '100%', height: '100%', borderRadius: 10, backgroundColor: '#f5f5f5', borderColor: '#ededed', padding: 0, marginBottom: 12 }}>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <p className=\"ic-location-small\" style={{ margin: 0 }} />\r\n                    <div style={{ fontWeight: 600, paddingLeft: 10 }}>{addressRepost}</div>\r\n                  </div>\r\n                  <span style={{ fontSize: 12 }}>{moment(getPost.createdAt).fromNow()}</span>\r\n                  <div style={{ marginTop: 5 }}>{getPost.text}</div>\r\n                  \r\n                  {getPost.media ? (\r\n          getPost.media.length == 1 ? (\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                borderRadius: 10,\r\n                objectFit: \"cover\",\r\n                maxHeight: 300,\r\n              }}\r\n              src={getPost.media}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n\r\n        {getPost.media ? (\r\n          getPost.media.length == 2 ? (\r\n            <table className=\"row-card-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <Image.PreviewGroup>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={getPost.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Image\r\n                        style={{ borderRadius: \"0px 10px 10px 0px\" }}\r\n                        src={getPost.media[1]}\r\n                      />\r\n                    </td>\r\n                  </Image.PreviewGroup>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n        {getPost.media ? (\r\n          getPost.media.length >= 3 ? (\r\n            <table className=\"photo-grid-3\">\r\n              <Image.PreviewGroup>\r\n                <tbody>\r\n                  <tr style={{ margin: 0, padding: 0 }}>\r\n                    <td\r\n                      rowspan=\"2\"\r\n                      style={{ width: \"50%\", verticalAlign: \"top\" }}\r\n                    >\r\n                      <Image\r\n                        className=\"pict1-3\"\r\n                        style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                        src={getPost.media[0]}\r\n                      />\r\n                    </td>\r\n                    <td style={{ width: \"50%\" }}>\r\n                      <Image\r\n                        className=\"pict2-3\"\r\n                        style={{ borderRadius: \"0px 10px 0px 0px\" }}\r\n                        src={getPost.media[1]}\r\n                      />\r\n                      <div\r\n                        className=\"text-container\"\r\n                        style={{ marginTop: \"-6px\" }}\r\n                      >\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={\r\n                            getPost.media.length > 3\r\n                              ? {\r\n                                  borderRadius: \"0px 0px 10px 0px\",\r\n                                  filter: \"blur(2px)\",\r\n                                }\r\n                              : { borderRadius: \"0px 0px 10px 0px\" }\r\n                          }\r\n                          src={getPost.media[2]}\r\n                        />\r\n                        <div className=\"text-center\">\r\n                          {getPost.media.length > 3\r\n                            ? \"+\" + (getPost.media.length - 3)\r\n                            : null}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  {getPost.media.length > 3 ? (\r\n                    <div>\r\n                      <Image\r\n                        className=\"pict3-3\"\r\n                        style={{ display: \"none\" }}\r\n                        src={getPost.media[3]}\r\n                      />\r\n                      {getPost.media.length > 4 ? (\r\n                        <Image\r\n                          className=\"pict3-3\"\r\n                          style={{ display: \"none\" }}\r\n                          src={getPost.media[4]}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  ) : null}\r\n                </tbody>\r\n              </Image.PreviewGroup>\r\n            </table>\r\n          ) : null\r\n        ) : null}\r\n\r\n                  \r\n                </Card>\r\n              )}\r\n          </>\r\n        )}\r\n        <Form form={form} name=\"nest-messages\" onFinish={onFinish}>\r\n          <Form.Item name=\"text\"  >\r\n            <Input.TextArea bordered={false} placeholder=\"What's your story\" />\r\n          </Form.Item>\r\n          {fileList.length > 0 && (\r\n            <Form.Item name=\"foto\" style={{ marginBottom: 0 }} >\r\n              <Upload\r\n                onRemove={handleRemove}\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                accept=\"video/*, image/*\"\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n              >\r\n                {fileList.length >= 5 ? null : <UploadButton />}\r\n              </Upload>\r\n            </Form.Item>\r\n          )}\r\n          \r\n          <div style={{ position: 'relative', width: '100%' }}>\r\n            {/* <Divider /> */}\r\n            <hr style={{\r\n              border: 'none',\r\n              borderTop: '1px solid #d9d9d9',\r\n              height: '0.2px'\r\n            }} />\r\n            <Col span={12}>\r\n              <Form.Item name=\"foto\" style={{ marginBottom: 0 }}>\r\n                <Upload\r\n                  accept=\"video/*, image/*\"\r\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                  fileList={fileList}\r\n                  showUploadList={null}\r\n                  onChange={handleChange}\r\n                  onRemove={handleRemove}\r\n                >\r\n                  <PictureOutlined />\r\n                </Upload>\r\n              </Form.Item>\r\n            </Col>\r\n            <Button htmlType=\"submit\" key=\"submit\" type=\"primary\" loading={loadingCreatePost}\r\n              style={{ backgroundColor: '#7958f5', borderRadius: 20, position: \"absolute\", bottom: \"3%\", right: 0, height: 25, fontSize: 10 }}>\r\n              Post\r\n            </Button>\r\n          </div>\r\n\r\n        </Form>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Config.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\BottomBar\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Fragment.js",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Subsriptions.js",[],{"ruleId":"436","severity":1,"message":"437","line":56,"column":11,"nodeType":"438","messageId":"439","endLine":57,"endColumn":40},{"ruleId":"440","replacedBy":"441"},{"ruleId":"442","replacedBy":"443"},{"ruleId":"444","severity":1,"message":"445","line":1,"column":17,"nodeType":"446","messageId":"447","endLine":1,"endColumn":27},{"ruleId":"444","severity":1,"message":"445","line":1,"column":17,"nodeType":"446","messageId":"447","endLine":1,"endColumn":27},{"ruleId":"444","severity":1,"message":"448","line":54,"column":28,"nodeType":"446","messageId":"447","endLine":54,"endColumn":35},{"ruleId":"444","severity":1,"message":"449","line":54,"column":37,"nodeType":"446","messageId":"447","endLine":54,"endColumn":41},{"ruleId":"444","severity":1,"message":"450","line":5,"column":5,"nodeType":"446","messageId":"447","endLine":5,"endColumn":12},{"ruleId":"444","severity":1,"message":"451","line":13,"column":10,"nodeType":"446","messageId":"447","endLine":13,"endColumn":32},{"ruleId":"444","severity":1,"message":"452","line":35,"column":7,"nodeType":"446","messageId":"447","endLine":35,"endColumn":21},{"ruleId":"453","severity":1,"message":"454","line":37,"column":8,"nodeType":"455","endLine":37,"endColumn":26,"suggestions":"456"},{"ruleId":"457","severity":1,"message":"458","line":45,"column":17,"nodeType":"459","endLine":45,"endColumn":59},{"ruleId":"460","severity":1,"message":"461","line":52,"column":72,"nodeType":"462","messageId":"463","endLine":52,"endColumn":74},{"ruleId":"444","severity":1,"message":"464","line":1,"column":22,"nodeType":"446","messageId":"447","endLine":1,"endColumn":31},{"ruleId":"444","severity":1,"message":"465","line":2,"column":18,"nodeType":"446","messageId":"447","endLine":2,"endColumn":34},{"ruleId":"444","severity":1,"message":"466","line":28,"column":3,"nodeType":"446","messageId":"447","endLine":28,"endColumn":8},{"ruleId":"444","severity":1,"message":"467","line":46,"column":10,"nodeType":"446","messageId":"447","endLine":46,"endColumn":14},{"ruleId":"444","severity":1,"message":"468","line":78,"column":11,"nodeType":"446","messageId":"447","endLine":78,"endColumn":25},{"ruleId":"444","severity":1,"message":"469","line":78,"column":27,"nodeType":"446","messageId":"447","endLine":78,"endColumn":39},{"ruleId":"444","severity":1,"message":"470","line":78,"column":51,"nodeType":"446","messageId":"447","endLine":78,"endColumn":63},{"ruleId":"453","severity":1,"message":"471","line":114,"column":6,"nodeType":"455","endLine":114,"endColumn":10,"suggestions":"472"},{"ruleId":"453","severity":1,"message":"473","line":157,"column":6,"nodeType":"455","endLine":157,"endColumn":24,"suggestions":"474"},{"ruleId":"453","severity":1,"message":"475","line":178,"column":6,"nodeType":"455","endLine":178,"endColumn":22,"suggestions":"476"},{"ruleId":"460","severity":1,"message":"461","line":207,"column":37,"nodeType":"462","messageId":"463","endLine":207,"endColumn":39},{"ruleId":"457","severity":1,"message":"458","line":295,"column":21,"nodeType":"459","endLine":295,"endColumn":80},{"ruleId":"477","severity":1,"message":"478","line":312,"column":23,"nodeType":"459","endLine":315,"endColumn":24},{"ruleId":"460","severity":1,"message":"461","line":347,"column":35,"nodeType":"462","messageId":"463","endLine":347,"endColumn":37},{"ruleId":"479","severity":1,"message":"480","line":349,"column":97,"nodeType":"481","messageId":"463","endLine":349,"endColumn":106},{"ruleId":"460","severity":1,"message":"461","line":362,"column":29,"nodeType":"462","messageId":"463","endLine":362,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":376,"column":29,"nodeType":"462","messageId":"463","endLine":376,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":471,"column":54,"nodeType":"462","messageId":"463","endLine":471,"endColumn":56},{"ruleId":"477","severity":1,"message":"478","line":520,"column":25,"nodeType":"459","endLine":523,"endColumn":26},{"ruleId":"479","severity":1,"message":"480","line":540,"column":23,"nodeType":"481","messageId":"463","endLine":540,"endColumn":32},{"ruleId":"477","severity":1,"message":"478","line":620,"column":25,"nodeType":"459","endLine":623,"endColumn":26},{"ruleId":"444","severity":1,"message":"482","line":4,"column":27,"nodeType":"446","messageId":"447","endLine":4,"endColumn":36},{"ruleId":"444","severity":1,"message":"483","line":7,"column":8,"nodeType":"446","messageId":"447","endLine":7,"endColumn":22},{"ruleId":"453","severity":1,"message":"484","line":35,"column":8,"nodeType":"455","endLine":35,"endColumn":26,"suggestions":"485"},{"ruleId":"457","severity":1,"message":"458","line":43,"column":25,"nodeType":"459","endLine":43,"endColumn":67},{"ruleId":"460","severity":1,"message":"461","line":50,"column":80,"nodeType":"462","messageId":"463","endLine":50,"endColumn":82},{"ruleId":"444","severity":1,"message":"483","line":7,"column":8,"nodeType":"446","messageId":"447","endLine":7,"endColumn":22},{"ruleId":"444","severity":1,"message":"486","line":12,"column":10,"nodeType":"446","messageId":"447","endLine":12,"endColumn":20},{"ruleId":"444","severity":1,"message":"487","line":22,"column":40,"nodeType":"446","messageId":"447","endLine":22,"endColumn":52},{"ruleId":"453","severity":1,"message":"488","line":30,"column":8,"nodeType":"455","endLine":30,"endColumn":14,"suggestions":"489"},{"ruleId":"453","severity":1,"message":"490","line":48,"column":8,"nodeType":"455","endLine":48,"endColumn":26,"suggestions":"491"},{"ruleId":"444","severity":1,"message":"449","line":52,"column":26,"nodeType":"446","messageId":"447","endLine":52,"endColumn":30},{"ruleId":"453","severity":1,"message":"492","line":66,"column":6,"nodeType":"455","endLine":66,"endColumn":44,"suggestions":"493"},{"ruleId":"453","severity":1,"message":"494","line":98,"column":6,"nodeType":"455","endLine":98,"endColumn":27,"suggestions":"495"},{"ruleId":"496","severity":1,"message":"497","line":121,"column":55,"nodeType":"498","messageId":"499","endLine":121,"endColumn":57},{"ruleId":"457","severity":1,"message":"458","line":172,"column":17,"nodeType":"459","endLine":172,"endColumn":59},{"ruleId":"460","severity":1,"message":"461","line":188,"column":45,"nodeType":"462","messageId":"463","endLine":188,"endColumn":47},{"ruleId":"460","severity":1,"message":"461","line":189,"column":44,"nodeType":"462","messageId":"463","endLine":189,"endColumn":46},{"ruleId":"460","severity":1,"message":"500","line":190,"column":39,"nodeType":"462","messageId":"463","endLine":190,"endColumn":41},{"ruleId":"460","severity":1,"message":"500","line":190,"column":51,"nodeType":"462","messageId":"463","endLine":190,"endColumn":53},{"ruleId":"501","severity":1,"message":"502","line":193,"column":21,"nodeType":"459","endLine":202,"endColumn":23},{"ruleId":"457","severity":1,"message":"458","line":209,"column":17,"nodeType":"459","endLine":209,"endColumn":59},{"ruleId":"457","severity":1,"message":"458","line":232,"column":11,"nodeType":"459","endLine":240,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":266,"column":11,"nodeType":"459","endLine":266,"endColumn":65},{"ruleId":"453","severity":1,"message":"488","line":29,"column":8,"nodeType":"455","endLine":29,"endColumn":18,"suggestions":"503"},{"ruleId":"453","severity":1,"message":"504","line":45,"column":8,"nodeType":"455","endLine":45,"endColumn":26,"suggestions":"505"},{"ruleId":"460","severity":1,"message":"461","line":57,"column":71,"nodeType":"462","messageId":"463","endLine":57,"endColumn":73},{"ruleId":"444","severity":1,"message":"506","line":1,"column":16,"nodeType":"446","messageId":"447","endLine":1,"endColumn":23},{"ruleId":"444","severity":1,"message":"507","line":1,"column":25,"nodeType":"446","messageId":"447","endLine":1,"endColumn":31},{"ruleId":"444","severity":1,"message":"508","line":1,"column":33,"nodeType":"446","messageId":"447","endLine":1,"endColumn":37},{"ruleId":"444","severity":1,"message":"464","line":2,"column":29,"nodeType":"446","messageId":"447","endLine":2,"endColumn":38},{"ruleId":"444","severity":1,"message":"509","line":2,"column":40,"nodeType":"446","messageId":"447","endLine":2,"endColumn":46},{"ruleId":"444","severity":1,"message":"510","line":2,"column":48,"nodeType":"446","messageId":"447","endLine":2,"endColumn":56},{"ruleId":"444","severity":1,"message":"511","line":2,"column":10,"nodeType":"446","messageId":"447","endLine":2,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":13,"column":13,"nodeType":"459","endLine":13,"endColumn":55},{"ruleId":"457","severity":1,"message":"458","line":19,"column":64,"nodeType":"459","endLine":19,"endColumn":108},{"ruleId":"444","severity":1,"message":"464","line":1,"column":39,"nodeType":"446","messageId":"447","endLine":1,"endColumn":48},{"ruleId":"444","severity":1,"message":"512","line":57,"column":9,"nodeType":"446","messageId":"447","endLine":57,"endColumn":14},{"ruleId":"444","severity":1,"message":"513","line":1,"column":17,"nodeType":"446","messageId":"447","endLine":1,"endColumn":20},{"ruleId":"457","severity":1,"message":"458","line":20,"column":13,"nodeType":"459","endLine":20,"endColumn":132},{"ruleId":"457","severity":1,"message":"458","line":25,"column":13,"nodeType":"459","endLine":25,"endColumn":132},{"ruleId":"457","severity":1,"message":"458","line":30,"column":13,"nodeType":"459","endLine":30,"endColumn":132},{"ruleId":"457","severity":1,"message":"458","line":35,"column":13,"nodeType":"459","endLine":35,"endColumn":132},{"ruleId":"453","severity":1,"message":"514","line":26,"column":9,"nodeType":"515","endLine":26,"endColumn":41},{"ruleId":"460","severity":1,"message":"461","line":75,"column":67,"nodeType":"462","messageId":"463","endLine":75,"endColumn":69},{"ruleId":"460","severity":1,"message":"461","line":76,"column":66,"nodeType":"462","messageId":"463","endLine":76,"endColumn":68},{"ruleId":"460","severity":1,"message":"500","line":77,"column":60,"nodeType":"462","messageId":"463","endLine":77,"endColumn":62},{"ruleId":"460","severity":1,"message":"500","line":77,"column":72,"nodeType":"462","messageId":"463","endLine":77,"endColumn":74},{"ruleId":"444","severity":1,"message":"464","line":1,"column":39,"nodeType":"446","messageId":"447","endLine":1,"endColumn":48},{"ruleId":"444","severity":1,"message":"516","line":27,"column":10,"nodeType":"446","messageId":"447","endLine":27,"endColumn":15},{"ruleId":"444","severity":1,"message":"517","line":11,"column":10,"nodeType":"446","messageId":"447","endLine":11,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":25,"column":31,"nodeType":"459","endLine":25,"endColumn":68},{"ruleId":"444","severity":1,"message":"464","line":1,"column":39,"nodeType":"446","messageId":"447","endLine":1,"endColumn":48},{"ruleId":"444","severity":1,"message":"516","line":39,"column":10,"nodeType":"446","messageId":"447","endLine":39,"endColumn":15},{"ruleId":"444","severity":1,"message":"518","line":3,"column":24,"nodeType":"446","messageId":"447","endLine":3,"endColumn":32},{"ruleId":"453","severity":1,"message":"519","line":62,"column":8,"nodeType":"455","endLine":62,"endColumn":18,"suggestions":"520"},{"ruleId":"453","severity":1,"message":"504","line":79,"column":8,"nodeType":"455","endLine":79,"endColumn":26,"suggestions":"521"},{"ruleId":"457","severity":1,"message":"458","line":92,"column":17,"nodeType":"459","endLine":92,"endColumn":59},{"ruleId":"460","severity":1,"message":"461","line":103,"column":71,"nodeType":"462","messageId":"463","endLine":103,"endColumn":73},{"ruleId":"522","severity":1,"message":"523","line":131,"column":3,"nodeType":"524","messageId":"525","endLine":144,"endColumn":4},{"ruleId":"453","severity":1,"message":"526","line":181,"column":6,"nodeType":"455","endLine":181,"endColumn":13,"suggestions":"527"},{"ruleId":"453","severity":1,"message":"528","line":210,"column":6,"nodeType":"455","endLine":210,"endColumn":21,"suggestions":"529"},{"ruleId":"453","severity":1,"message":"530","line":307,"column":5,"nodeType":"455","endLine":307,"endColumn":12,"suggestions":"531"},{"ruleId":"444","severity":1,"message":"532","line":1,"column":32,"nodeType":"446","messageId":"447","endLine":1,"endColumn":39},{"ruleId":"460","severity":1,"message":"461","line":124,"column":27,"nodeType":"462","messageId":"463","endLine":124,"endColumn":29},{"ruleId":"460","severity":1,"message":"461","line":182,"column":27,"nodeType":"462","messageId":"463","endLine":182,"endColumn":29},{"ruleId":"460","severity":1,"message":"461","line":860,"column":14,"nodeType":"462","messageId":"463","endLine":860,"endColumn":16},{"ruleId":"460","severity":1,"message":"461","line":862,"column":21,"nodeType":"462","messageId":"463","endLine":862,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":864,"column":21,"nodeType":"462","messageId":"463","endLine":864,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":866,"column":21,"nodeType":"462","messageId":"463","endLine":866,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":868,"column":21,"nodeType":"462","messageId":"463","endLine":868,"endColumn":23},{"ruleId":"444","severity":1,"message":"533","line":1,"column":10,"nodeType":"446","messageId":"447","endLine":1,"endColumn":16},{"ruleId":"444","severity":1,"message":"534","line":1,"column":35,"nodeType":"446","messageId":"447","endLine":1,"endColumn":39},{"ruleId":"444","severity":1,"message":"445","line":2,"column":17,"nodeType":"446","messageId":"447","endLine":2,"endColumn":27},{"ruleId":"444","severity":1,"message":"535","line":6,"column":10,"nodeType":"446","messageId":"447","endLine":6,"endColumn":25},{"ruleId":"444","severity":1,"message":"536","line":8,"column":10,"nodeType":"446","messageId":"447","endLine":8,"endColumn":14},{"ruleId":"444","severity":1,"message":"537","line":15,"column":9,"nodeType":"446","messageId":"447","endLine":15,"endColumn":18},{"ruleId":"460","severity":1,"message":"461","line":15,"column":47,"nodeType":"462","messageId":"463","endLine":15,"endColumn":49},{"ruleId":"444","severity":1,"message":"538","line":16,"column":15,"nodeType":"446","messageId":"447","endLine":16,"endColumn":21},{"ruleId":"539","severity":1,"message":"540","line":1,"column":1,"nodeType":"541","endLine":110,"endColumn":2},{"ruleId":"444","severity":1,"message":"542","line":34,"column":10,"nodeType":"446","messageId":"447","endLine":34,"endColumn":20},{"ruleId":"453","severity":1,"message":"475","line":93,"column":6,"nodeType":"455","endLine":93,"endColumn":22,"suggestions":"543"},{"ruleId":"457","severity":1,"message":"458","line":140,"column":21,"nodeType":"459","endLine":140,"endColumn":75},{"ruleId":"460","severity":1,"message":"461","line":143,"column":29,"nodeType":"462","messageId":"463","endLine":143,"endColumn":31},{"ruleId":"477","severity":1,"message":"478","line":195,"column":21,"nodeType":"459","endLine":198,"endColumn":22},{"ruleId":"457","severity":1,"message":"458","line":222,"column":15,"nodeType":"459","endLine":222,"endColumn":69},{"ruleId":"460","severity":1,"message":"461","line":225,"column":23,"nodeType":"462","messageId":"463","endLine":225,"endColumn":25},{"ruleId":"460","severity":1,"message":"461","line":244,"column":35,"nodeType":"462","messageId":"463","endLine":244,"endColumn":37},{"ruleId":"479","severity":1,"message":"480","line":251,"column":21,"nodeType":"481","messageId":"463","endLine":251,"endColumn":30},{"ruleId":"460","severity":1,"message":"461","line":262,"column":29,"nodeType":"462","messageId":"463","endLine":262,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":276,"column":29,"nodeType":"462","messageId":"463","endLine":276,"endColumn":31},{"ruleId":"444","severity":1,"message":"544","line":7,"column":10,"nodeType":"446","messageId":"447","endLine":7,"endColumn":29},{"ruleId":"444","severity":1,"message":"533","line":1,"column":10,"nodeType":"446","messageId":"447","endLine":1,"endColumn":16},{"ruleId":"444","severity":1,"message":"545","line":1,"column":18,"nodeType":"446","messageId":"447","endLine":1,"endColumn":23},{"ruleId":"444","severity":1,"message":"534","line":1,"column":25,"nodeType":"446","messageId":"447","endLine":1,"endColumn":29},{"ruleId":"444","severity":1,"message":"445","line":3,"column":17,"nodeType":"446","messageId":"447","endLine":3,"endColumn":27},{"ruleId":"444","severity":1,"message":"546","line":6,"column":27,"nodeType":"446","messageId":"447","endLine":6,"endColumn":33},{"ruleId":"444","severity":1,"message":"547","line":20,"column":7,"nodeType":"446","messageId":"447","endLine":20,"endColumn":16},{"ruleId":"444","severity":1,"message":"548","line":26,"column":9,"nodeType":"446","messageId":"447","endLine":26,"endColumn":15},{"ruleId":"477","severity":1,"message":"478","line":66,"column":15,"nodeType":"459","endLine":69,"endColumn":16},{"ruleId":"444","severity":1,"message":"549","line":93,"column":23,"nodeType":"446","messageId":"447","endLine":93,"endColumn":27},{"ruleId":"436","severity":1,"message":"437","line":94,"column":21,"nodeType":"438","messageId":"439","endLine":95,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":129,"column":15,"nodeType":"459","endLine":129,"endColumn":86},{"ruleId":"444","severity":1,"message":"550","line":27,"column":10,"nodeType":"446","messageId":"447","endLine":27,"endColumn":19},{"ruleId":"457","severity":1,"message":"458","line":97,"column":19,"nodeType":"459","endLine":97,"endColumn":73},{"ruleId":"444","severity":1,"message":"464","line":1,"column":29,"nodeType":"446","messageId":"447","endLine":1,"endColumn":38},{"ruleId":"444","severity":1,"message":"551","line":14,"column":65,"nodeType":"446","messageId":"447","endLine":14,"endColumn":82},{"ruleId":"477","severity":1,"message":"478","line":70,"column":15,"nodeType":"459","endLine":73,"endColumn":16},{"ruleId":"444","severity":1,"message":"549","line":97,"column":23,"nodeType":"446","messageId":"447","endLine":97,"endColumn":27},{"ruleId":"436","severity":1,"message":"437","line":98,"column":21,"nodeType":"438","messageId":"439","endLine":99,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":98,"column":19,"nodeType":"459","endLine":98,"endColumn":73},{"ruleId":"444","severity":1,"message":"552","line":6,"column":41,"nodeType":"446","messageId":"447","endLine":6,"endColumn":56},{"ruleId":"444","severity":1,"message":"449","line":125,"column":23,"nodeType":"446","messageId":"447","endLine":125,"endColumn":27},{"ruleId":"453","severity":1,"message":"553","line":158,"column":6,"nodeType":"455","endLine":158,"endColumn":21,"suggestions":"554"},{"ruleId":"453","severity":1,"message":"555","line":164,"column":6,"nodeType":"455","endLine":164,"endColumn":14,"suggestions":"556"},{"ruleId":"557","severity":1,"message":"558","line":167,"column":23,"nodeType":"559","messageId":"560","endLine":167,"endColumn":25},{"ruleId":"557","severity":1,"message":"558","line":167,"column":44,"nodeType":"559","messageId":"560","endLine":167,"endColumn":46},{"ruleId":"453","severity":1,"message":"561","line":183,"column":6,"nodeType":"455","endLine":183,"endColumn":32,"suggestions":"562"},{"ruleId":"457","severity":1,"message":"458","line":283,"column":21,"nodeType":"459","endLine":283,"endColumn":108},{"ruleId":"457","severity":1,"message":"458","line":295,"column":19,"nodeType":"459","endLine":295,"endColumn":161},{"ruleId":"457","severity":1,"message":"458","line":303,"column":19,"nodeType":"459","endLine":303,"endColumn":158},{"ruleId":"460","severity":1,"message":"461","line":342,"column":32,"nodeType":"462","messageId":"463","endLine":342,"endColumn":34},{"ruleId":"460","severity":1,"message":"461","line":356,"column":32,"nodeType":"462","messageId":"463","endLine":356,"endColumn":34},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["563"],"no-negated-in-lhs",["564"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'Tooltip' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'formItemLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadingData' and 'setSubscribePosts'. Either include them or remove the dependency array.","ArrayExpression",["565"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'defaultFormatUtc' is defined but never used.","'Modal' is defined but never used.","'User' is defined but never used.","'previewVisible' is assigned a value but never used.","'previewImage' is assigned a value but never used.","'previewTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPost' and 'room'. Either include them or remove the dependency array.",["566"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPost'. Either include them or remove the dependency array.",["567"],"React Hook useEffect has a missing dependency: 'repost'. Either include it or remove the dependency array.",["568"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-dupe-keys","Duplicate key 'objectFit'.","ObjectExpression","'GET_POSTS' is defined but never used.","'InfiniteScroll' is defined but never used.","React Hook useEffect has missing dependencies: 'loadingData' and 'setMutedPost'. Either include them or remove the dependency array.",["569"],"'getSession' is defined but never used.","'loadingPosts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["570"],"React Hook useEffect has missing dependencies: 'loadingData', 'room_1.length', 'room_2.length', and 'setRoom'. Either include them or remove the dependency array.",["571"],"React Hook useEffect has missing dependencies: 'setLikedPosts' and 'setPosts'. Either include them or remove the dependency array.",["572"],"React Hook useEffect has a missing dependency: 'changePPuser'. Either include it or remove the dependency array.",["573"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["574"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPosts'. Either include them or remove the dependency array.",["575"],"'message' is defined but never used.","'Avatar' is defined but never used.","'Spin' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'range' is assigned a value but never used.","'Row' is defined but never used.","The 'visited' logical expression could make the dependencies of useEffect Hook (at line 32) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'visited' in its own useMemo() Hook.","VariableDeclarator","'login' is assigned a value but never used.","'Bold' is defined but never used.","'useQuery' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'range'. Either include them or remove the dependency array.",["576"],["577"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'called', 'loadDataUser', and 'refetch'. Either include them or remove the dependency array.",["578"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["579"],"React Hook useMemo has missing dependencies: 'facebookData', 'googleData', 'liked', 'login', 'notifications', 'room', and 'user'. Either include them or remove the dependency array.",["580"],"'useMemo' is defined but never used.","'Button' is defined but never used.","'Tabs' is defined but never used.","'StickyContainer' is defined but never used.","'Menu' is defined but never used.","'parentTab' is assigned a value but never used.","'setNav' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'repostData' is assigned a value but never used.",["581"],"'LOGIN_USER_FACEBOOK' is defined but never used.","'Radio' is defined but never used.","'Sticky' is defined but never used.","'onChange2' is assigned a value but never used.","'value2' is assigned a value but never used.","'text' is assigned a value but never used.","'OmitProps' is defined but never used.","'notificationAdded' is assigned a value but never used.","'LoadingOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'showPosition'. Either include it or remove the dependency array.",["582"],"React Hook useEffect has a missing dependency: 'getRepost'. Either include it or remove the dependency array.",["583"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'createPost', 'isOpenNewPost', 'lat', 'lng', 'repost.repost', 'repost.room', 'room', and 'state'. Either include them or remove the dependency array.",["584"],"no-global-assign","no-unsafe-negation",{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"605","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"591","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},"Update the dependencies array to be: [data, _isMounted, setSubscribePosts, loadingData]",{"range":"623","text":"624"},"Update the dependencies array to be: [getPost, id, room]",{"range":"625","text":"626"},"Update the dependencies array to be: [data, _isMounted, setPost, loadingData]",{"range":"627","text":"628"},"Update the dependencies array to be: [post, isRepost, repost]",{"range":"629","text":"630"},"Update the dependencies array to be: [data, _isMounted, setMutedPost, loadingData]",{"range":"631","text":"632"},"Update the dependencies array to be: [getPosts, room]",{"range":"633","text":"634"},"Update the dependencies array to be: [data, _isMounted, setRoom, room_1.length, room_2.length, loadingData]",{"range":"635","text":"636"},"Update the dependencies array to be: [getProfilePosts, getProfileLikedPost, setPosts, setLikedPosts]",{"range":"637","text":"638"},"Update the dependencies array to be: [url, isFinishUpload, changePPuser]",{"range":"639","text":"640"},"Update the dependencies array to be: [getPosts, location]",{"range":"641","text":"642"},"Update the dependencies array to be: [data, _isMounted, setPosts, loadingData]",{"range":"643","text":"644"},"Update the dependencies array to be: [getPosts, location, range]",{"range":"645","text":"646"},{"range":"647","text":"644"},"Update the dependencies array to be: [called, loadDataUser, refetch, token]",{"range":"648","text":"649"},"Update the dependencies array to be: [loading, data, error]",{"range":"650","text":"651"},"Update the dependencies array to be: [facebookData, googleData, liked, login, notifications, room, user]",{"range":"652","text":"653"},{"range":"654","text":"630"},"Update the dependencies array to be: [isOpenNewPost, showPosition]",{"range":"655","text":"656"},"Update the dependencies array to be: [getRepost, repost]",{"range":"657","text":"658"},"Update the dependencies array to be: [uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost.repost, repost.room, room, createPost]",{"range":"659","text":"660"},[1169,1187],"[data, _isMounted, setSubscribePosts, loadingData]",[3336,3340],"[getPost, id, room]",[4194,4212],"[data, _isMounted, setPost, loadingData]",[4747,4763],"[post, isRepost, repost]",[1092,1110],"[data, _isMounted, setMutedPost, loadingData]",[979,985],"[getPosts, room]",[1416,1434],"[data, _isMounted, setRoom, room_1.length, room_2.length, loadingData]",[2276,2314],"[getProfilePosts, getProfileLikedPost, setPosts, setLikedPosts]",[3075,3096],"[url, isFinishUpload, changePPuser]",[975,985],"[getPosts, location]",[1352,1370],"[data, _isMounted, setPosts, loadingData]",[1927,1937],"[getPosts, location, range]",[2311,2329],[4129,4136],"[called, loadDataUser, refetch, token]",[4788,4803],"[loading, data, error]",[6655,6662],"[facebookData, googleData, liked, login, notifications, room, user]",[2956,2972],[4088,4103],"[isOpenNewPost, showPosition]",[4217,4225],"[getRepost, repost]",[4677,4703],"[uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost.repost, repost.room, room, createPost]"]